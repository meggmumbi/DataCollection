//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CicPortal.CuePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CuePortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal")]
    public partial class CuePortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityProgrammesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityCampusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendMailProgramApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTerminateApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveSelectedProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTechnicalCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnapproveAuditCMNTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnrejectAuditCMNTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddAuditeeCMNTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditAuditeeCMNTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveAuditeeCMNTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAuditEngagementLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddAuditAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddLosedEndedAuditAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDateAuditAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddAttachmentAuditAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAuditInvitationPrintoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnViewRoadmapPrintoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPeerFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPeerFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendCueWorkorderRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerWorkorderRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAuditRoadmapLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitRoadmapOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckUniversityBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendUniversityNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendCueNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQAApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelQAApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveQARejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QAdataClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QACancelClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QAdvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QAvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback QAdvcfinalvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendAuditRoadmapCueNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendAuditRoadmapUniversityNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProgrammeUserHelpEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInstitutionUserHelpEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitQAInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendQaInvitationEmailToCUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendQaInvitationEmailToUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitQASARResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendQaSARResponseEmailToCUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendQaSARResponseEmailToUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateCorrectionOfFuctualErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertCorrectionOfFuctualErrorsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckAuditPaymentDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetAuditFindingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAccademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetNonTeachingStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPartTimeTeachingStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetTerminatedProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetStaffCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetOpenProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetOpenPrograms1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProgrammeOutcome1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProgrammeOutcome2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProgrammeOutcome3OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProgrammeOutcome4OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProgrammeOutcome5OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewProgrammeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRecommendationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitRecommendationToCUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCuriculumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammePhilosopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeAdmissionRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeGoalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeCourseRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeCourseEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeRequirementCreditTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeStudentAssPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeExaminationRequlationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeModerationOfExaminationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeProgramManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeGraduationRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgrammeDescriptionOfThesisOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAuditLineDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAllAuditLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateSAROperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAllAuditLinesEachOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAllAuditLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAuditOpenEndedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAuditDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAuditClosedEndedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAuditAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgramUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProgramUnits2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateOverallReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatePortalUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnActivatePortalUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeActivatePortalUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitICTHelpDeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendHELPDeskNotificationToCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetHelpdeskRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetResolvedHelpdeskRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSARCompletenessLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCorrectionFactualErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitCorrectionFactualErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRecommendationLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetProposalRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteProposalRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeObjectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseDistributionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeSpecificationsStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeSpecificationsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeContentStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeContentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeOrganizationsStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeOrganizationsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeInternshipWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeInternshipStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeDidecticStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeDidecticWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsAssesmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsAssesmentsStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsAssesmentsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgrammeLeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTeachingStaffWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTeachingStaffStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletequalitysupportstaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletequalitysupportstaffstrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletequalitysupportstaffweaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentsprofileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentprofileweaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentprofilestrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentsupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentsupportstrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestudentsupportweaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTeachingMaterialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFacilitiesStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFacilitiesStWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsEvaluationsStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsEvaluationsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCurriculumnDesignWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCurriculumnDesignStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentDevelopmentActivitiesStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentDevelopmentActivitiesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBenchmarkingStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBenchmarkingWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGraduatesStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGraduatesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStakeholdersSatisfactionStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStakeholdersSatisfactionWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataCancelClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback VcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataclerkfinalvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DvcfinalvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountCreationEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUseraccountCreationEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUserHelpEmaiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovalStatusDataCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnuseraccountcreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDataCollectionDatasetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAmmendmentsDatasetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAmendmentsRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAmendmentsRequestDatasetCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PortalResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversityDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddAmendmentDatasetCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeFeedbackVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeEvaluationTooolOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewWorkOrderEmailAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAccreditationPaymentsAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAccreditationAlertsToUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateExitReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitUniversityAccreditationFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitInstitutionAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUniversityFeedbackCommentsEmailAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalMaleStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalFemaleStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalIntersexStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalSelfSponsoredStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalFullTimeStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalPartTimeStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityMastersStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityCertificateStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalFirstYearStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalSecondYearStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotaFourthYearStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalThridYearStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityPWDTotalStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityEducationStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversitBusinessStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversitHealthStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityArtsStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityScienceStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityServicesStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityEngineeringStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityICTStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityAgricultureStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityLecturerStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityProfessorsStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityMaleStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityFemaleStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityIntersexStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityFullTimeStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityBachelorsStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityMastersStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityDoctorateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityDiplomaStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityCertificateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetModerationsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCourseContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetInstructionalMaterialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCourseAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStakeholderStrenghtOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStakeholderWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGenericOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProfessionalOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetNeedsDemandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStakeholderRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetLearningOutcomeStrenghtOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetLearningOutcomeWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetAuditRoadmapReccomendationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetKnowledgeUnderstandingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCognitiveSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSubjectSpecificOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeSpecificationStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeSpecificationWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeContentStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeContentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeOrganizationStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeOrganizationWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeAttachmentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeAttachmentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeDidacticStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsAssesmentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetProgrammeDidacticWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsAssesmentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetQualityStaffStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetQualityStaffWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentProfileStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentProfileWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentSupportStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentSupportWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetFacilitiesStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetFacilitiesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsEvaluationsStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsEvaluationsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCurriculumnDesignStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetCurriculumnDesignWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsDevelopmentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStudentsDevelopmentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetBenchmarkingStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetBenchmarkingWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGraduatesStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGraduatesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStakeholdersSatisactionsStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetStakeholdersSatisfactionsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversityMissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversityVissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversityAimOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversitHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversitPhylosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversitKeyMilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOutComesStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramSpecificationStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramSpecificationWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramContentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramContentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramOrganizationStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramOrganizationWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsAssesmentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsAssesmentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualityStaffStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualityStaffWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentProfileStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentProfileWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentSupportStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentSupportWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFacilitiesStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFacilitiesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsEvalautionStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsEvaluationWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurriculumnDesignStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurriculumnDesignWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsDevelopmentStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsDevelopmentWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBenchmarkingStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBenchmarkingtWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduatesStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduatesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStakeholdersSatisfactionsStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStakeholdersSatisfactionsWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOutComesWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAspectDesciptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCoursesDistributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalHoursDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseHoursDistributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDidacticConceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInternshipStrenghtsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInternshipWeaknessesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherDidecticStrengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherDidecticWeaknessesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsAssessmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeGradingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAntiPlagiarismDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicLeaderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonTeachingStaffSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentSupportDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurriculumnDesignDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStaffDevelopmentActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBenchmarkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduatesAchievementOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStakeholdersSatisfactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFullTimeAcademicStaffSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDidacticAidsToolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeachingEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateStakeholderRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateExpectedLearningOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStakeholdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteotherStakeholdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStakeholdersStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStakeholdersWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGenericOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNeedsDemandsRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOutcomeCommicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAchievementsOutcomeStrengthsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAchievementsOutcomeWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAspectsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPhilosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddschoolFacultiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditphylosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditVCDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProgramApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateaccreditationGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitialGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditReferenceMaterialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLearningOutcome2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationAreasEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpecializationAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClassificationofDegreesOperationCompleted;
        
        private System.Threading.SendOrPostCallback VlidateDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VlidateDeliveryMode2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGradingSystem2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateProgrammeGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateProgrammeBasicInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentsPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentsInstProgrammesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsInstitutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngeneratecodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKnownStakeHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewStakeHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStrengthOrWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesComposition1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrusteeSenateCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHRSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDevelopmentTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSchoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSchoolDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSourceOfIncomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditorsDebtorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActualBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaAcademicProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaCollaboratingAcademicProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaProgrammeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKenyanInternationalStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffQualityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBasicInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBasicInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptRejectPeerReviewerJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerReviewersEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGenericOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNeedsRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExpectedLearningOutcomeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPeerReviewersEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetVendornNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetRationaleDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetLearningOutcomeDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSpecializationDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUnitDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetReferenceMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetPhylosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetAdmissionRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGoalProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetRequlationsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetExaminationsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGraduationsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetThesisProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetManagementProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccreditationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualityAuditNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutComenNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryFunctionalAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramAccreditationAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionCreateinvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryPoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentDraftOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStudentDraftOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSanitationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditRoadAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditRecreatonalOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPlantsEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdminSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForProgramAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllNonTeachingStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllPartTimeTeachingStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllStudentsEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPartTimeAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePartTimeAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGraduationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInitialProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReferenceMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSuccessfulAppealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExpectedActualAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpectedActualAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCreditorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDebtorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDebtorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAppealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchoolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUniversityChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUniversityViceChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstitutionNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvitationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmendmentsNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvitationDataSetIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryBudgetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryBudgetDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResearchBudgetRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResearchBudgetRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEelevatedWaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditEelevatedWaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEelevatedWaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUtilityServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPlantsEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSanitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccessRoadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSanitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUtilityServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClassificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryFunctionalAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccessRoadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlantsEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletekeymilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSponsorOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditKeyMilestonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSchoolOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CuePortal() {
            this.Url = global::CicPortal.Properties.Settings.Default.CicPortal_CuePortal_CuePortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeCertificateStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityProgrammesCompletedEventHandler FnGetUniversityTotalUniversityProgrammesCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityCampusesCompletedEventHandler FnGetUniversityTotalUniversityCampusesCompleted;
        
        /// <remarks/>
        public event FnSendMailProgramApplicationCompletedEventHandler FnSendMailProgramApplicationCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedProgramsCompletedEventHandler FnSubmitSelectedProgramsCompleted;
        
        /// <remarks/>
        public event FnTerminateApplicationCompletedEventHandler FnTerminateApplicationCompleted;
        
        /// <remarks/>
        public event FnRemoveSelectedProgramsCompletedEventHandler FnRemoveSelectedProgramsCompleted;
        
        /// <remarks/>
        public event FnInsertTechnicalCommentsCompletedEventHandler FnInsertTechnicalCommentsCompleted;
        
        /// <remarks/>
        public event FnapproveAuditCMNTeamCompletedEventHandler FnapproveAuditCMNTeamCompleted;
        
        /// <remarks/>
        public event FnrejectAuditCMNTeamCompletedEventHandler FnrejectAuditCMNTeamCompleted;
        
        /// <remarks/>
        public event FnAddAuditeeCMNTeamCompletedEventHandler FnAddAuditeeCMNTeamCompleted;
        
        /// <remarks/>
        public event FnEditAuditeeCMNTeamCompletedEventHandler FnEditAuditeeCMNTeamCompleted;
        
        /// <remarks/>
        public event FnRemoveAuditeeCMNTeamCompletedEventHandler FnRemoveAuditeeCMNTeamCompleted;
        
        /// <remarks/>
        public event FnAuditEngagementLetterCompletedEventHandler FnAuditEngagementLetterCompleted;
        
        /// <remarks/>
        public event FnAddAuditAnswersCompletedEventHandler FnAddAuditAnswersCompleted;
        
        /// <remarks/>
        public event FnAddLosedEndedAuditAnswersCompletedEventHandler FnAddLosedEndedAuditAnswersCompleted;
        
        /// <remarks/>
        public event FnAddDateAuditAnswersCompletedEventHandler FnAddDateAuditAnswersCompleted;
        
        /// <remarks/>
        public event FnAddAttachmentAuditAnswersCompletedEventHandler FnAddAttachmentAuditAnswersCompleted;
        
        /// <remarks/>
        public event FnAuditInvitationPrintoutCompletedEventHandler FnAuditInvitationPrintoutCompleted;
        
        /// <remarks/>
        public event FnViewRoadmapPrintoutCompletedEventHandler FnViewRoadmapPrintoutCompleted;
        
        /// <remarks/>
        public event FnSubmitPeerFeedbackCompletedEventHandler FnSubmitPeerFeedbackCompleted;
        
        /// <remarks/>
        public event FnSubmitPeerFeedbackLinesCompletedEventHandler FnSubmitPeerFeedbackLinesCompleted;
        
        /// <remarks/>
        public event FnSendCueWorkorderRatingEmailCompletedEventHandler FnSendCueWorkorderRatingEmailCompleted;
        
        /// <remarks/>
        public event FnSendPeerWorkorderRatingEmailCompletedEventHandler FnSendPeerWorkorderRatingEmailCompleted;
        
        /// <remarks/>
        public event FnInsertAuditRoadmapLinesCompletedEventHandler FnInsertAuditRoadmapLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitRoadmapCompletedEventHandler FnSubmitRoadmapCompleted;
        
        /// <remarks/>
        public event FnCheckUniversityBalanceCompletedEventHandler FnCheckUniversityBalanceCompleted;
        
        /// <remarks/>
        public event FnSendNotificationCompletedEventHandler FnSendNotificationCompleted;
        
        /// <remarks/>
        public event FnSendUniversityNotificationCompletedEventHandler FnSendUniversityNotificationCompleted;
        
        /// <remarks/>
        public event FnSendCueNotificationCompletedEventHandler FnSendCueNotificationCompleted;
        
        /// <remarks/>
        public event SendQAApprovalRequestCompletedEventHandler SendQAApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelQAApprovalRequestCompletedEventHandler CancelQAApprovalRequestCompleted;
        
        /// <remarks/>
        public event ApproveQARejectRequestCompletedEventHandler ApproveQARejectRequestCompleted;
        
        /// <remarks/>
        public event QAdataClerkEmailRequestCompletedEventHandler QAdataClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event QACancelClerkEmailRequestCompletedEventHandler QACancelClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event QAdvcApprovalEmailRequestCompletedEventHandler QAdvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event QAvcApprovalEmailRequestCompletedEventHandler QAvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event QAdvcfinalvcApprovalEmailRequestCompletedEventHandler QAdvcfinalvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event FnSendAuditRoadmapCueNotificationCompletedEventHandler FnSendAuditRoadmapCueNotificationCompleted;
        
        /// <remarks/>
        public event FnSendAuditRoadmapUniversityNotificationCompletedEventHandler FnSendAuditRoadmapUniversityNotificationCompleted;
        
        /// <remarks/>
        public event FnProgrammeUserHelpEmailRequestCompletedEventHandler FnProgrammeUserHelpEmailRequestCompleted;
        
        /// <remarks/>
        public event FnInstitutionUserHelpEmailRequestCompletedEventHandler FnInstitutionUserHelpEmailRequestCompleted;
        
        /// <remarks/>
        public event FnSubmitQAInvitationCompletedEventHandler FnSubmitQAInvitationCompleted;
        
        /// <remarks/>
        public event FnSendQaInvitationEmailToCUECompletedEventHandler FnSendQaInvitationEmailToCUECompleted;
        
        /// <remarks/>
        public event FnSendQaInvitationEmailToUniversityCompletedEventHandler FnSendQaInvitationEmailToUniversityCompleted;
        
        /// <remarks/>
        public event FnSubmitQASARResponseCompletedEventHandler FnSubmitQASARResponseCompleted;
        
        /// <remarks/>
        public event FnSendQaSARResponseEmailToCUECompletedEventHandler FnSendQaSARResponseEmailToCUECompleted;
        
        /// <remarks/>
        public event FnSendQaSARResponseEmailToUniversityCompletedEventHandler FnSendQaSARResponseEmailToUniversityCompleted;
        
        /// <remarks/>
        public event FnCreateCorrectionOfFuctualErrorsCompletedEventHandler FnCreateCorrectionOfFuctualErrorsCompleted;
        
        /// <remarks/>
        public event FnInsertCorrectionOfFuctualErrorsLinesCompletedEventHandler FnInsertCorrectionOfFuctualErrorsLinesCompleted;
        
        /// <remarks/>
        public event FnCheckAuditPaymentDocumentCompletedEventHandler FnCheckAuditPaymentDocumentCompleted;
        
        /// <remarks/>
        public event FngetAuditFindingsCompletedEventHandler FngetAuditFindingsCompleted;
        
        /// <remarks/>
        public event FnGetAccademicStaffCompletedEventHandler FnGetAccademicStaffCompleted;
        
        /// <remarks/>
        public event FnGetNonTeachingStaffCompletedEventHandler FnGetNonTeachingStaffCompleted;
        
        /// <remarks/>
        public event FnGetLibraryStaffCompletedEventHandler FnGetLibraryStaffCompleted;
        
        /// <remarks/>
        public event FnGetPartTimeTeachingStaffCompletedEventHandler FnGetPartTimeTeachingStaffCompleted;
        
        /// <remarks/>
        public event FnGetTerminatedProgramsCompletedEventHandler FnGetTerminatedProgramsCompleted;
        
        /// <remarks/>
        public event FnGetStaffCounterCompletedEventHandler FnGetStaffCounterCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeOutcomesCompletedEventHandler FnGetProgrammeOutcomesCompleted;
        
        /// <remarks/>
        public event FnGetOpenProgramsCompletedEventHandler FnGetOpenProgramsCompleted;
        
        /// <remarks/>
        public event FnGetOpenPrograms1CompletedEventHandler FnGetOpenPrograms1Completed;
        
        /// <remarks/>
        public event FnInsertProgrammeOutcome1CompletedEventHandler FnInsertProgrammeOutcome1Completed;
        
        /// <remarks/>
        public event FnInsertProgrammeOutcome2CompletedEventHandler FnInsertProgrammeOutcome2Completed;
        
        /// <remarks/>
        public event FnInsertProgrammeOutcome3CompletedEventHandler FnInsertProgrammeOutcome3Completed;
        
        /// <remarks/>
        public event FnInsertProgrammeOutcome4CompletedEventHandler FnInsertProgrammeOutcome4Completed;
        
        /// <remarks/>
        public event FnInsertProgrammeOutcome5CompletedEventHandler FnInsertProgrammeOutcome5Completed;
        
        /// <remarks/>
        public event FnNewProgrammeDetailsCompletedEventHandler FnNewProgrammeDetailsCompleted;
        
        /// <remarks/>
        public event FnInsertRecommendationLinesCompletedEventHandler FnInsertRecommendationLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitRecommendationToCUECompletedEventHandler FnSubmitRecommendationToCUECompleted;
        
        /// <remarks/>
        public event FnGenerateCuriculumCompletedEventHandler FnGenerateCuriculumCompleted;
        
        /// <remarks/>
        public event FnGetProgrammePhilosopyCompletedEventHandler FnGetProgrammePhilosopyCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeAdmissionRequirementsCompletedEventHandler FnGetProgrammeAdmissionRequirementsCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeGoalCompletedEventHandler FnGetProgrammeGoalCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeCourseRequirementCompletedEventHandler FnGetProgrammeCourseRequirementCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeCourseEvaluationCompletedEventHandler FnGetProgrammeCourseEvaluationCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeRequirementCreditTransferCompletedEventHandler FnGetProgrammeRequirementCreditTransferCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeStudentAssPolicyCompletedEventHandler FnGetProgrammeStudentAssPolicyCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeExaminationRequlationsCompletedEventHandler FnGetProgrammeExaminationRequlationsCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeModerationOfExaminationsCompletedEventHandler FnGetProgrammeModerationOfExaminationsCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeProgramManagementCompletedEventHandler FnGetProgrammeProgramManagementCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeGraduationRequirementsCompletedEventHandler FnGetProgrammeGraduationRequirementsCompleted;
        
        /// <remarks/>
        public event FnGetProgrammeDescriptionOfThesisCompletedEventHandler FnGetProgrammeDescriptionOfThesisCompleted;
        
        /// <remarks/>
        public event FnGetAuditLineDescriptionCompletedEventHandler FnGetAuditLineDescriptionCompleted;
        
        /// <remarks/>
        public event FnGetAllAuditLinesCompletedEventHandler FnGetAllAuditLinesCompleted;
        
        /// <remarks/>
        public event FnGenerateSARCompletedEventHandler FnGenerateSARCompleted;
        
        /// <remarks/>
        public event FnGetAllAuditLinesEachCompletedEventHandler FnGetAllAuditLinesEachCompleted;
        
        /// <remarks/>
        public event FnGetAllAuditLinesDetailsCompletedEventHandler FnGetAllAuditLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnSaveAuditOpenEndedCompletedEventHandler FnSaveAuditOpenEndedCompleted;
        
        /// <remarks/>
        public event FnSaveAuditDateCompletedEventHandler FnSaveAuditDateCompleted;
        
        /// <remarks/>
        public event FnSaveAuditClosedEndedCompletedEventHandler FnSaveAuditClosedEndedCompleted;
        
        /// <remarks/>
        public event FnSaveAuditAttachmentCompletedEventHandler FnSaveAuditAttachmentCompleted;
        
        /// <remarks/>
        public event FnGetProgramUnitsCompletedEventHandler FnGetProgramUnitsCompleted;
        
        /// <remarks/>
        public event FnGetProgramUnits2CompletedEventHandler FnGetProgramUnits2Completed;
        
        /// <remarks/>
        public event FnGenerateOverallReportCompletedEventHandler FnGenerateOverallReportCompleted;
        
        /// <remarks/>
        public event FnCreatePortalUsersCompletedEventHandler FnCreatePortalUsersCompleted;
        
        /// <remarks/>
        public event FnActivatePortalUserCompletedEventHandler FnActivatePortalUserCompleted;
        
        /// <remarks/>
        public event FnDeActivatePortalUserCompletedEventHandler FnDeActivatePortalUserCompleted;
        
        /// <remarks/>
        public event FnSendOTPCompletedEventHandler FnSendOTPCompleted;
        
        /// <remarks/>
        public event FnSubmitICTHelpDeskRequestCompletedEventHandler FnSubmitICTHelpDeskRequestCompleted;
        
        /// <remarks/>
        public event FnSendHELPDeskNotificationToCueCompletedEventHandler FnSendHELPDeskNotificationToCueCompleted;
        
        /// <remarks/>
        public event FnGetHelpdeskRequestsCompletedEventHandler FnGetHelpdeskRequestsCompleted;
        
        /// <remarks/>
        public event FnGetResolvedHelpdeskRequestsCompletedEventHandler FnGetResolvedHelpdeskRequestsCompleted;
        
        /// <remarks/>
        public event FnGetSARCompletenessLinesCompletedEventHandler FnGetSARCompletenessLinesCompleted;
        
        /// <remarks/>
        public event FnGenerateCorrectionFactualErrorsCompletedEventHandler FnGenerateCorrectionFactualErrorsCompleted;
        
        /// <remarks/>
        public event FnSubmitCorrectionFactualErrorsCompletedEventHandler FnSubmitCorrectionFactualErrorsCompleted;
        
        /// <remarks/>
        public event FnInsertRecommendationLinesDetailsCompletedEventHandler FnInsertRecommendationLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnGetProposalRecCompletedEventHandler FnGetProposalRecCompleted;
        
        /// <remarks/>
        public event FnDeleteProposalRecCompletedEventHandler FnDeleteProposalRecCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeObjectivesCompletedEventHandler DeleteProgrammeObjectivesCompleted;
        
        /// <remarks/>
        public event DeleteCourseDistributionsCompletedEventHandler DeleteCourseDistributionsCompleted;
        
        /// <remarks/>
        public event DeleteContactHoursCompletedEventHandler DeleteContactHoursCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeSpecificationsStrengthsCompletedEventHandler DeleteProgrammeSpecificationsStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeSpecificationsWeaknessCompletedEventHandler DeleteProgrammeSpecificationsWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeContentStrengthsCompletedEventHandler DeleteProgrammeContentStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeContentWeaknessCompletedEventHandler DeleteProgrammeContentWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeOrganizationsStrengthsCompletedEventHandler DeleteProgrammeOrganizationsStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeOrganizationsWeaknessCompletedEventHandler DeleteProgrammeOrganizationsWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeInternshipWeaknessCompletedEventHandler DeleteProgrammeInternshipWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeInternshipStrengthsCompletedEventHandler DeleteProgrammeInternshipStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeDidecticStrengthsCompletedEventHandler DeleteProgrammeDidecticStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeDidecticWeaknessCompletedEventHandler DeleteProgrammeDidecticWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteStudentsAssesmentsCompletedEventHandler DeleteStudentsAssesmentsCompleted;
        
        /// <remarks/>
        public event DeleteStudentsAssesmentsStrengthsCompletedEventHandler DeleteStudentsAssesmentsStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStudentsAssesmentsWeaknessCompletedEventHandler DeleteStudentsAssesmentsWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteProgrammeLeaderCompletedEventHandler DeleteProgrammeLeaderCompleted;
        
        /// <remarks/>
        public event DeleteTeachingStaffWeaknessCompletedEventHandler DeleteTeachingStaffWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteTeachingStaffStrengthsCompletedEventHandler DeleteTeachingStaffStrengthsCompleted;
        
        /// <remarks/>
        public event DeletequalitysupportstaffCompletedEventHandler DeletequalitysupportstaffCompleted;
        
        /// <remarks/>
        public event DeletequalitysupportstaffstrengthsCompletedEventHandler DeletequalitysupportstaffstrengthsCompleted;
        
        /// <remarks/>
        public event DeletequalitysupportstaffweaknessCompletedEventHandler DeletequalitysupportstaffweaknessCompleted;
        
        /// <remarks/>
        public event DeletestudentsprofileCompletedEventHandler DeletestudentsprofileCompleted;
        
        /// <remarks/>
        public event DeletestudentprofileweaknessCompletedEventHandler DeletestudentprofileweaknessCompleted;
        
        /// <remarks/>
        public event DeletestudentprofilestrengthsCompletedEventHandler DeletestudentprofilestrengthsCompleted;
        
        /// <remarks/>
        public event DeletestudentsupportCompletedEventHandler DeletestudentsupportCompleted;
        
        /// <remarks/>
        public event DeletestudentsupportstrengthsCompletedEventHandler DeletestudentsupportstrengthsCompleted;
        
        /// <remarks/>
        public event DeletestudentsupportweaknessCompletedEventHandler DeletestudentsupportweaknessCompleted;
        
        /// <remarks/>
        public event DeleteTeachingMaterialsCompletedEventHandler DeleteTeachingMaterialsCompleted;
        
        /// <remarks/>
        public event DeleteFacilitiesStrengthsCompletedEventHandler DeleteFacilitiesStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteFacilitiesStWeaknessCompletedEventHandler DeleteFacilitiesStWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteStudentsEvaluationsStrengthsCompletedEventHandler DeleteStudentsEvaluationsStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStudentsEvaluationsWeaknessCompletedEventHandler DeleteStudentsEvaluationsWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteCurriculumnDesignWeaknessCompletedEventHandler DeleteCurriculumnDesignWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteCurriculumnDesignStrengthsCompletedEventHandler DeleteCurriculumnDesignStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStudentDevelopmentActivitiesStrengthsCompletedEventHandler DeleteStudentDevelopmentActivitiesStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStudentDevelopmentActivitiesWeaknessCompletedEventHandler DeleteStudentDevelopmentActivitiesWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteBenchmarkingStrengthsCompletedEventHandler DeleteBenchmarkingStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteBenchmarkingWeaknessCompletedEventHandler DeleteBenchmarkingWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteGraduatesStrengthsCompletedEventHandler DeleteGraduatesStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteGraduatesWeaknessCompletedEventHandler DeleteGraduatesWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteStakeholdersSatisfactionStrengthsCompletedEventHandler DeleteStakeholdersSatisfactionStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStakeholdersSatisfactionWeaknessCompletedEventHandler DeleteStakeholdersSatisfactionWeaknessCompleted;
        
        /// <remarks/>
        public event DataClerkEmailRequestCompletedEventHandler DataClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event DataCancelClerkEmailRequestCompletedEventHandler DataCancelClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event DvcApprovalEmailRequestCompletedEventHandler DvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event VcApprovalEmailRequestCompletedEventHandler VcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event DataclerkfinalvcApprovalEmailRequestCompletedEventHandler DataclerkfinalvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event DvcfinalvcApprovalEmailRequestCompletedEventHandler DvcfinalvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event AccountCreationEmailRequestCompletedEventHandler AccountCreationEmailRequestCompleted;
        
        /// <remarks/>
        public event FnUseraccountCreationEmailRequestCompletedEventHandler FnUseraccountCreationEmailRequestCompleted;
        
        /// <remarks/>
        public event FnUserHelpEmaiRequestCompletedEventHandler FnUserHelpEmaiRequestCompleted;
        
        /// <remarks/>
        public event ApprovalStatusDataCollectionCompletedEventHandler ApprovalStatusDataCollectionCompleted;
        
        /// <remarks/>
        public event FnuseraccountcreationCompletedEventHandler FnuseraccountcreationCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event ValidateDataCollectionDatasetsCompletedEventHandler ValidateDataCollectionDatasetsCompleted;
        
        /// <remarks/>
        public event ValidateAmmendmentsDatasetsCompletedEventHandler ValidateAmmendmentsDatasetsCompleted;
        
        /// <remarks/>
        public event AddAmendmentsRequestCompletedEventHandler AddAmendmentsRequestCompleted;
        
        /// <remarks/>
        public event AddAmendmentsRequestDatasetCodesCompletedEventHandler AddAmendmentsRequestDatasetCodesCompleted;
        
        /// <remarks/>
        public event PortalResetPasswordCompletedEventHandler PortalResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FngetUniversityDomainCompletedEventHandler FngetUniversityDomainCompleted;
        
        /// <remarks/>
        public event FnAddAmendmentDatasetCodesCompletedEventHandler FnAddAmendmentDatasetCodesCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeFeedbackVoucherCompletedEventHandler FnGenerateProgrammeFeedbackVoucherCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeEvaluationTooolCompletedEventHandler FnGenerateProgrammeEvaluationTooolCompleted;
        
        /// <remarks/>
        public event FnNewWorkOrderEmailAlertCompletedEventHandler FnNewWorkOrderEmailAlertCompleted;
        
        /// <remarks/>
        public event FnAccreditationPaymentsAlertsCompletedEventHandler FnAccreditationPaymentsAlertsCompleted;
        
        /// <remarks/>
        public event FnAccreditationAlertsToUniversityCompletedEventHandler FnAccreditationAlertsToUniversityCompleted;
        
        /// <remarks/>
        public event FnGenerateExitReportCompletedEventHandler FnGenerateExitReportCompleted;
        
        /// <remarks/>
        public event FnSubmitUniversityAccreditationFeedbackCompletedEventHandler FnSubmitUniversityAccreditationFeedbackCompleted;
        
        /// <remarks/>
        public event FnSubmitInstitutionAccreditationCompletedEventHandler FnSubmitInstitutionAccreditationCompleted;
        
        /// <remarks/>
        public event FnUniversityFeedbackCommentsEmailAlertCompletedEventHandler FnUniversityFeedbackCommentsEmailAlertCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalStudentsCompletedEventHandler FnGetUniversityTotalStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalMaleStudentsCompletedEventHandler FnGetUniversityTotalMaleStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalFemaleStudentsCompletedEventHandler FnGetUniversityTotalFemaleStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalIntersexStudentsCompletedEventHandler FnGetUniversityTotalIntersexStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventHandler FnGetUniversityTotalGovernmentSponsoredStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalSelfSponsoredStudentsCompletedEventHandler FnGetUniversityTotalSelfSponsoredStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalFullTimeStudentsCompletedEventHandler FnGetUniversityTotalFullTimeStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalPartTimeStudentsCompletedEventHandler FnGetUniversityTotalPartTimeStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventHandler FnGetUniversityTotalUniversityBachelorsStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityMastersStudentsCompletedEventHandler FnGetUniversityTotalUniversityMastersStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventHandler FnGetUniversityTotalUniversityDoctorateStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityCertificateStudentsCompletedEventHandler FnGetUniversityTotalUniversityCertificateStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventHandler FnGetUniversityTotalUniversityPostgraduateStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventHandler FnGetUniversityTotalUniversityDiplomaStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalFirstYearStudentsCompletedEventHandler FnGetUniversityTotalFirstYearStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalSecondYearStudentsCompletedEventHandler FnGetUniversityTotalSecondYearStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotaFourthYearStudentsCompletedEventHandler FnGetUniversityTotaFourthYearStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalThridYearStudentsCompletedEventHandler FnGetUniversityTotalThridYearStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityStaffCompletedEventHandler FnGetUniversityTotalUniversityStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityPWDTotalStudentsCompletedEventHandler FnGetUniversityPWDTotalStudentsCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityEducationStaffCompletedEventHandler FnGetUniversityTotalUniversityEducationStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversitBusinessStaffCompletedEventHandler FnGetUniversityTotalUniversitBusinessStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversitHealthStaffCompletedEventHandler FnGetUniversityTotalUniversitHealthStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityArtsStaffCompletedEventHandler FnGetUniversityTotalUniversityArtsStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityScienceStaffCompletedEventHandler FnGetUniversityTotalUniversityScienceStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityServicesStaffCompletedEventHandler FnGetUniversityTotalUniversityServicesStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventHandler FnGetUniversityTotalUniversityNaturalScienceStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityEngineeringStaffCompletedEventHandler FnGetUniversityTotalUniversityEngineeringStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityICTStaffCompletedEventHandler FnGetUniversityTotalUniversityICTStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventHandler FnGetUniversityTotalUniversityLifeScienceStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityAgricultureStaffCompletedEventHandler FnGetUniversityTotalUniversityAgricultureStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventHandler FnGetUniversityTotalUniversityGraduateAssistantStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventHandler FnGetUniversityTotalUniversityResearchAssistantStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventHandler FnGetUniversityTotalUniversityTutorialFellowStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventHandler FnGetUniversityTotalUniversityJuniorResearchStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityLecturerStaffCompletedEventHandler FnGetUniversityTotalUniversityLecturerStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventHandler FnGetUniversityTotalUniversityResearchFellowStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventHandler FnGetUniversityTotalUniversitySeniorLecturerStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventHandler FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventHandler FnGetUniversityTotalUniversityAssociateProffesorStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityProfessorsStaffCompletedEventHandler FnGetUniversityTotalUniversityProfessorsStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventHandler FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventHandler FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityMaleStaffCompletedEventHandler FnGetUniversityTotalUniversityMaleStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityFemaleStaffCompletedEventHandler FnGetUniversityTotalUniversityFemaleStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityIntersexStaffCompletedEventHandler FnGetUniversityTotalUniversityIntersexStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityFullTimeStaffCompletedEventHandler FnGetUniversityTotalUniversityFullTimeStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityBachelorsStaffCompletedEventHandler FnGetUniversityTotalUniversityBachelorsStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityMastersStaffCompletedEventHandler FnGetUniversityTotalUniversityMastersStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityDoctorateStaffCompletedEventHandler FnGetUniversityTotalUniversityDoctorateStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityDiplomaStaffCompletedEventHandler FnGetUniversityTotalUniversityDiplomaStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityCertificateStaffCompletedEventHandler FnGetUniversityTotalUniversityCertificateStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeMastersStaffCompleted;
        
        /// <remarks/>
        public event FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventHandler FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompleted;
        
        /// <remarks/>
        public event FngetModerationsProgrammeCompletedEventHandler FngetModerationsProgrammeCompleted;
        
        /// <remarks/>
        public event FngetCourseContentCompletedEventHandler FngetCourseContentCompleted;
        
        /// <remarks/>
        public event FngetInstructionalMaterialsCompletedEventHandler FngetInstructionalMaterialsCompleted;
        
        /// <remarks/>
        public event FngetCourseAssessmentCompletedEventHandler FngetCourseAssessmentCompleted;
        
        /// <remarks/>
        public event FngetStakeholderStrenghtCompletedEventHandler FngetStakeholderStrenghtCompleted;
        
        /// <remarks/>
        public event FngetStakeholderWeaknessCompletedEventHandler FngetStakeholderWeaknessCompleted;
        
        /// <remarks/>
        public event FngetGenericOutcomeCompletedEventHandler FngetGenericOutcomeCompleted;
        
        /// <remarks/>
        public event FngetProfessionalOutcomeCompletedEventHandler FngetProfessionalOutcomeCompleted;
        
        /// <remarks/>
        public event FngetNeedsDemandsCompletedEventHandler FngetNeedsDemandsCompleted;
        
        /// <remarks/>
        public event FngetStakeholderRequirementsCompletedEventHandler FngetStakeholderRequirementsCompleted;
        
        /// <remarks/>
        public event FngetLearningOutcomeStrenghtCompletedEventHandler FngetLearningOutcomeStrenghtCompleted;
        
        /// <remarks/>
        public event FngetLearningOutcomeWeaknessCompletedEventHandler FngetLearningOutcomeWeaknessCompleted;
        
        /// <remarks/>
        public event FngetAuditRoadmapReccomendationCompletedEventHandler FngetAuditRoadmapReccomendationCompleted;
        
        /// <remarks/>
        public event FngetProgrammeObjectiveCompletedEventHandler FngetProgrammeObjectiveCompleted;
        
        /// <remarks/>
        public event FngetKnowledgeUnderstandingCompletedEventHandler FngetKnowledgeUnderstandingCompleted;
        
        /// <remarks/>
        public event FngetCognitiveSkillsCompletedEventHandler FngetCognitiveSkillsCompleted;
        
        /// <remarks/>
        public event FngetSubjectSpecificCompletedEventHandler FngetSubjectSpecificCompleted;
        
        /// <remarks/>
        public event FngetProgrammeSpecificationStrengthCompletedEventHandler FngetProgrammeSpecificationStrengthCompleted;
        
        /// <remarks/>
        public event FngetProgrammeSpecificationWeaknessCompletedEventHandler FngetProgrammeSpecificationWeaknessCompleted;
        
        /// <remarks/>
        public event FngetProgrammeContentStrengthsCompletedEventHandler FngetProgrammeContentStrengthsCompleted;
        
        /// <remarks/>
        public event FngetProgrammeContentWeaknessCompletedEventHandler FngetProgrammeContentWeaknessCompleted;
        
        /// <remarks/>
        public event FngetProgrammeOrganizationStrengthsCompletedEventHandler FngetProgrammeOrganizationStrengthsCompleted;
        
        /// <remarks/>
        public event FngetProgrammeOrganizationWeaknessCompletedEventHandler FngetProgrammeOrganizationWeaknessCompleted;
        
        /// <remarks/>
        public event FngetProgrammeAttachmentStrengthCompletedEventHandler FngetProgrammeAttachmentStrengthCompleted;
        
        /// <remarks/>
        public event FngetProgrammeAttachmentWeaknessCompletedEventHandler FngetProgrammeAttachmentWeaknessCompleted;
        
        /// <remarks/>
        public event FngetProgrammeDidacticStrengthCompletedEventHandler FngetProgrammeDidacticStrengthCompleted;
        
        /// <remarks/>
        public event FngetStudentsAssesmentStrengthCompletedEventHandler FngetStudentsAssesmentStrengthCompleted;
        
        /// <remarks/>
        public event FngetProgrammeDidacticWeaknessCompletedEventHandler FngetProgrammeDidacticWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStudentsAssesmentWeaknessCompletedEventHandler FngetStudentsAssesmentWeaknessCompleted;
        
        /// <remarks/>
        public event FngetQualityStaffStrengthCompletedEventHandler FngetQualityStaffStrengthCompleted;
        
        /// <remarks/>
        public event FngetQualityStaffWeaknessCompletedEventHandler FngetQualityStaffWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStudentProfileStrengthCompletedEventHandler FngetStudentProfileStrengthCompleted;
        
        /// <remarks/>
        public event FngetStudentProfileWeaknessCompletedEventHandler FngetStudentProfileWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStudentSupportStrengthCompletedEventHandler FngetStudentSupportStrengthCompleted;
        
        /// <remarks/>
        public event FngetStudentSupportWeaknessCompletedEventHandler FngetStudentSupportWeaknessCompleted;
        
        /// <remarks/>
        public event FngetFacilitiesStrengthCompletedEventHandler FngetFacilitiesStrengthCompleted;
        
        /// <remarks/>
        public event FngetFacilitiesWeaknessCompletedEventHandler FngetFacilitiesWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStudentsEvaluationsStrengthCompletedEventHandler FngetStudentsEvaluationsStrengthCompleted;
        
        /// <remarks/>
        public event FngetStudentsEvaluationsWeaknessCompletedEventHandler FngetStudentsEvaluationsWeaknessCompleted;
        
        /// <remarks/>
        public event FngetCurriculumnDesignStrengthCompletedEventHandler FngetCurriculumnDesignStrengthCompleted;
        
        /// <remarks/>
        public event FngetCurriculumnDesignWeaknessCompletedEventHandler FngetCurriculumnDesignWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStudentsDevelopmentStrengthCompletedEventHandler FngetStudentsDevelopmentStrengthCompleted;
        
        /// <remarks/>
        public event FngetStudentsDevelopmentWeaknessCompletedEventHandler FngetStudentsDevelopmentWeaknessCompleted;
        
        /// <remarks/>
        public event FngetBenchmarkingStrengthCompletedEventHandler FngetBenchmarkingStrengthCompleted;
        
        /// <remarks/>
        public event FngetBenchmarkingWeaknessCompletedEventHandler FngetBenchmarkingWeaknessCompleted;
        
        /// <remarks/>
        public event FngetGraduatesStrengthCompletedEventHandler FngetGraduatesStrengthCompleted;
        
        /// <remarks/>
        public event FngetGraduatesWeaknessCompletedEventHandler FngetGraduatesWeaknessCompleted;
        
        /// <remarks/>
        public event FngetStakeholdersSatisactionsStrengthCompletedEventHandler FngetStakeholdersSatisactionsStrengthCompleted;
        
        /// <remarks/>
        public event FngetStakeholdersSatisfactionsWeaknessCompletedEventHandler FngetStakeholdersSatisfactionsWeaknessCompleted;
        
        /// <remarks/>
        public event FngetUniversityMissionCompletedEventHandler FngetUniversityMissionCompleted;
        
        /// <remarks/>
        public event FngetUniversityVissionCompletedEventHandler FngetUniversityVissionCompleted;
        
        /// <remarks/>
        public event FngetUniversityAimCompletedEventHandler FngetUniversityAimCompleted;
        
        /// <remarks/>
        public event FngetUniversitHistoryCompletedEventHandler FngetUniversitHistoryCompleted;
        
        /// <remarks/>
        public event FngetUniversitPhylosophyCompletedEventHandler FngetUniversitPhylosophyCompleted;
        
        /// <remarks/>
        public event FngetUniversitKeyMilestoneCompletedEventHandler FngetUniversitKeyMilestoneCompleted;
        
        /// <remarks/>
        public event AddOutComesStrengthCompletedEventHandler AddOutComesStrengthCompleted;
        
        /// <remarks/>
        public event AddProgramSpecificationStrengthCompletedEventHandler AddProgramSpecificationStrengthCompleted;
        
        /// <remarks/>
        public event AddProgramSpecificationWeaknessCompletedEventHandler AddProgramSpecificationWeaknessCompleted;
        
        /// <remarks/>
        public event AddProgramContentWeaknessCompletedEventHandler AddProgramContentWeaknessCompleted;
        
        /// <remarks/>
        public event AddProgramContentStrengthCompletedEventHandler AddProgramContentStrengthCompleted;
        
        /// <remarks/>
        public event AddProgramOrganizationStrengthCompletedEventHandler AddProgramOrganizationStrengthCompleted;
        
        /// <remarks/>
        public event AddProgramOrganizationWeaknessCompletedEventHandler AddProgramOrganizationWeaknessCompleted;
        
        /// <remarks/>
        public event AddStudentsAssesmentStrengthCompletedEventHandler AddStudentsAssesmentStrengthCompleted;
        
        /// <remarks/>
        public event AddStudentsAssesmentWeaknessCompletedEventHandler AddStudentsAssesmentWeaknessCompleted;
        
        /// <remarks/>
        public event AddQualityStaffStrengthCompletedEventHandler AddQualityStaffStrengthCompleted;
        
        /// <remarks/>
        public event AddQualityStaffWeaknessCompletedEventHandler AddQualityStaffWeaknessCompleted;
        
        /// <remarks/>
        public event AddStudentProfileStrengthCompletedEventHandler AddStudentProfileStrengthCompleted;
        
        /// <remarks/>
        public event AddStudentProfileWeaknessCompletedEventHandler AddStudentProfileWeaknessCompleted;
        
        /// <remarks/>
        public event AddStudentSupportStrengthCompletedEventHandler AddStudentSupportStrengthCompleted;
        
        /// <remarks/>
        public event AddStudentSupportWeaknessCompletedEventHandler AddStudentSupportWeaknessCompleted;
        
        /// <remarks/>
        public event AddFacilitiesStrengthCompletedEventHandler AddFacilitiesStrengthCompleted;
        
        /// <remarks/>
        public event AddFacilitiesWeaknessCompletedEventHandler AddFacilitiesWeaknessCompleted;
        
        /// <remarks/>
        public event AddStudentsEvalautionStrengthCompletedEventHandler AddStudentsEvalautionStrengthCompleted;
        
        /// <remarks/>
        public event AddStudentsEvaluationWeaknessCompletedEventHandler AddStudentsEvaluationWeaknessCompleted;
        
        /// <remarks/>
        public event AddCurriculumnDesignStrengthCompletedEventHandler AddCurriculumnDesignStrengthCompleted;
        
        /// <remarks/>
        public event AddCurriculumnDesignWeaknessCompletedEventHandler AddCurriculumnDesignWeaknessCompleted;
        
        /// <remarks/>
        public event AddStudentsDevelopmentStrengthCompletedEventHandler AddStudentsDevelopmentStrengthCompleted;
        
        /// <remarks/>
        public event AddStudentsDevelopmentWeaknessCompletedEventHandler AddStudentsDevelopmentWeaknessCompleted;
        
        /// <remarks/>
        public event AddBenchmarkingStrengthCompletedEventHandler AddBenchmarkingStrengthCompleted;
        
        /// <remarks/>
        public event AddBenchmarkingtWeaknessCompletedEventHandler AddBenchmarkingtWeaknessCompleted;
        
        /// <remarks/>
        public event AddGraduatesStrengthCompletedEventHandler AddGraduatesStrengthCompleted;
        
        /// <remarks/>
        public event AddGraduatesWeaknessCompletedEventHandler AddGraduatesWeaknessCompleted;
        
        /// <remarks/>
        public event AddStakeholdersSatisfactionsStrengthCompletedEventHandler AddStakeholdersSatisfactionsStrengthCompleted;
        
        /// <remarks/>
        public event AddStakeholdersSatisfactionsWeaknessCompletedEventHandler AddStakeholdersSatisfactionsWeaknessCompleted;
        
        /// <remarks/>
        public event AddOutComesWeaknessCompletedEventHandler AddOutComesWeaknessCompleted;
        
        /// <remarks/>
        public event AddAspectDesciptionCompletedEventHandler AddAspectDesciptionCompleted;
        
        /// <remarks/>
        public event AddProgrammeObjectiveCompletedEventHandler AddProgrammeObjectiveCompleted;
        
        /// <remarks/>
        public event AddCoursesDistributionCompletedEventHandler AddCoursesDistributionCompleted;
        
        /// <remarks/>
        public event AddInstructionalHoursDetailsCompletedEventHandler AddInstructionalHoursDetailsCompleted;
        
        /// <remarks/>
        public event AddCourseHoursDistributionCompletedEventHandler AddCourseHoursDistributionCompleted;
        
        /// <remarks/>
        public event AddInstructionalHoursCompletedEventHandler AddInstructionalHoursCompleted;
        
        /// <remarks/>
        public event AddProgrammeCommunicationDetailsCompletedEventHandler AddProgrammeCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event AddProgrammeContentCompletedEventHandler AddProgrammeContentCompleted;
        
        /// <remarks/>
        public event AddProgrammeOrganizationCompletedEventHandler AddProgrammeOrganizationCompleted;
        
        /// <remarks/>
        public event AddDidacticConceptCompletedEventHandler AddDidacticConceptCompleted;
        
        /// <remarks/>
        public event AddInternshipStrenghtsCompletedEventHandler AddInternshipStrenghtsCompleted;
        
        /// <remarks/>
        public event AddInternshipWeaknessesCompletedEventHandler AddInternshipWeaknessesCompleted;
        
        /// <remarks/>
        public event AddOtherDidecticStrengthCompletedEventHandler AddOtherDidecticStrengthCompleted;
        
        /// <remarks/>
        public event AddOtherDidecticWeaknessesCompletedEventHandler AddOtherDidecticWeaknessesCompleted;
        
        /// <remarks/>
        public event AddStudentsAssessmentCompletedEventHandler AddStudentsAssessmentCompleted;
        
        /// <remarks/>
        public event AddProgrammeGradingCompletedEventHandler AddProgrammeGradingCompleted;
        
        /// <remarks/>
        public event AddAntiPlagiarismDetailsCompletedEventHandler AddAntiPlagiarismDetailsCompleted;
        
        /// <remarks/>
        public event AddAcademicLeaderDetailsCompletedEventHandler AddAcademicLeaderDetailsCompleted;
        
        /// <remarks/>
        public event AddNonTeachingStaffSizeCompletedEventHandler AddNonTeachingStaffSizeCompleted;
        
        /// <remarks/>
        public event AddStudentProfileDetailsCompletedEventHandler AddStudentProfileDetailsCompleted;
        
        /// <remarks/>
        public event AddStudentSupportDetailsCompletedEventHandler AddStudentSupportDetailsCompleted;
        
        /// <remarks/>
        public event AddStudentEvaluationCompletedEventHandler AddStudentEvaluationCompleted;
        
        /// <remarks/>
        public event AddCurriculumnDesignDetailsCompletedEventHandler AddCurriculumnDesignDetailsCompleted;
        
        /// <remarks/>
        public event AddStaffDevelopmentActivitiesCompletedEventHandler AddStaffDevelopmentActivitiesCompleted;
        
        /// <remarks/>
        public event AddBenchmarkingCompletedEventHandler AddBenchmarkingCompleted;
        
        /// <remarks/>
        public event AddGraduatesAchievementCompletedEventHandler AddGraduatesAchievementCompleted;
        
        /// <remarks/>
        public event AddStakeholdersSatisfactionCompletedEventHandler AddStakeholdersSatisfactionCompleted;
        
        /// <remarks/>
        public event AddFullTimeAcademicStaffSizeCompletedEventHandler AddFullTimeAcademicStaffSizeCompleted;
        
        /// <remarks/>
        public event AddDidacticAidsToolsCompletedEventHandler AddDidacticAidsToolsCompleted;
        
        /// <remarks/>
        public event AddTeachingEquipmentsCompletedEventHandler AddTeachingEquipmentsCompleted;
        
        /// <remarks/>
        public event ValidateStakeholderRequirementsCompletedEventHandler ValidateStakeholderRequirementsCompleted;
        
        /// <remarks/>
        public event ValidateExpectedLearningOutcomesCompletedEventHandler ValidateExpectedLearningOutcomesCompleted;
        
        /// <remarks/>
        public event DeleteStakeholdersCompletedEventHandler DeleteStakeholdersCompleted;
        
        /// <remarks/>
        public event DeleteotherStakeholdersCompletedEventHandler DeleteotherStakeholdersCompleted;
        
        /// <remarks/>
        public event DeleteStakeholdersStrengthsCompletedEventHandler DeleteStakeholdersStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteStakeholdersWeaknessCompletedEventHandler DeleteStakeholdersWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteGenericOutcomeCompletedEventHandler DeleteGenericOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalOutcomeCompletedEventHandler DeleteProfessionalOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteNeedsDemandsRequirementsCompletedEventHandler DeleteNeedsDemandsRequirementsCompleted;
        
        /// <remarks/>
        public event DeleteOutcomeCommicationsCompletedEventHandler DeleteOutcomeCommicationsCompleted;
        
        /// <remarks/>
        public event DeleteAchievementsOutcomeStrengthsCompletedEventHandler DeleteAchievementsOutcomeStrengthsCompleted;
        
        /// <remarks/>
        public event DeleteAchievementsOutcomeWeaknessCompletedEventHandler DeleteAchievementsOutcomeWeaknessCompleted;
        
        /// <remarks/>
        public event DeleteAspectsDetailsCompletedEventHandler DeleteAspectsDetailsCompleted;
        
        /// <remarks/>
        public event EditDepartmentCompletedEventHandler EditDepartmentCompleted;
        
        /// <remarks/>
        public event EditGeneralDetailsCompletedEventHandler EditGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddMissionDetailsCompletedEventHandler AddMissionDetailsCompleted;
        
        /// <remarks/>
        public event AddPhilosophyCompletedEventHandler AddPhilosophyCompleted;
        
        /// <remarks/>
        public event AddMilestoneCompletedEventHandler AddMilestoneCompleted;
        
        /// <remarks/>
        public event AddAffiliationsCompletedEventHandler AddAffiliationsCompleted;
        
        /// <remarks/>
        public event AddschoolFacultiesCompletedEventHandler AddschoolFacultiesCompleted;
        
        /// <remarks/>
        public event AddDepartmentsCompletedEventHandler AddDepartmentsCompleted;
        
        /// <remarks/>
        public event AddSponsorsCompletedEventHandler AddSponsorsCompleted;
        
        /// <remarks/>
        public event AddHistoryCompletedEventHandler AddHistoryCompleted;
        
        /// <remarks/>
        public event EditphylosophyCompletedEventHandler EditphylosophyCompleted;
        
        /// <remarks/>
        public event EditVCDetailsCompletedEventHandler EditVCDetailsCompleted;
        
        /// <remarks/>
        public event AddLibraryStaffCompletedEventHandler AddLibraryStaffCompleted;
        
        /// <remarks/>
        public event DeleteLibraryStaffCompletedEventHandler DeleteLibraryStaffCompleted;
        
        /// <remarks/>
        public event AddGraduationCompletedEventHandler AddGraduationCompleted;
        
        /// <remarks/>
        public event SendApprovalRequestCompletedEventHandler SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event SendProgramApprovalRequestCompletedEventHandler SendProgramApprovalRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectRequestCompletedEventHandler ApproveRejectRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectProgramRequestCompletedEventHandler ApproveRejectProgramRequestCompleted;
        
        /// <remarks/>
        public event CancelApprovalProgramRequestCompletedEventHandler CancelApprovalProgramRequestCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event CancelApprovalRequestCompletedEventHandler CancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event AddBuildingCompletedEventHandler AddBuildingCompleted;
        
        /// <remarks/>
        public event AddWasteManagementCompletedEventHandler AddWasteManagementCompleted;
        
        /// <remarks/>
        public event AccreditationGeneralDetailsCompletedEventHandler AccreditationGeneralDetailsCompleted;
        
        /// <remarks/>
        public event UpdateaccreditationGeneralDetailsCompletedEventHandler UpdateaccreditationGeneralDetailsCompleted;
        
        /// <remarks/>
        public event InitialGeneralDetailsCompletedEventHandler InitialGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddNewProgramsCompletedEventHandler AddNewProgramsCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleCompletedEventHandler AddProgramRationaleCompleted;
        
        /// <remarks/>
        public event ValidateProgramRationaleCompletedEventHandler ValidateProgramRationaleCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleEntryCompletedEventHandler AddProgramRationaleEntryCompleted;
        
        /// <remarks/>
        public event EditProgramRationaleCompletedEventHandler EditProgramRationaleCompleted;
        
        /// <remarks/>
        public event EditSpecializationAreasCompletedEventHandler EditSpecializationAreasCompleted;
        
        /// <remarks/>
        public event EditReferenceMaterialsCompletedEventHandler EditReferenceMaterialsCompleted;
        
        /// <remarks/>
        public event DeleteProgramRationaleCompletedEventHandler DeleteProgramRationaleCompleted;
        
        /// <remarks/>
        public event AddLearningOutcomeCompletedEventHandler AddLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateLearningOutcomeCompletedEventHandler ValidateLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateLearningOutcome2CompletedEventHandler ValidateLearningOutcome2Completed;
        
        /// <remarks/>
        public event AddLearningOutcomeEntryCompletedEventHandler AddLearningOutcomeEntryCompleted;
        
        /// <remarks/>
        public event AddSpecializationAreasCompletedEventHandler AddSpecializationAreasCompleted;
        
        /// <remarks/>
        public event ValidateSpecializationAreasCompletedEventHandler ValidateSpecializationAreasCompleted;
        
        /// <remarks/>
        public event AddSpecializationAreasEntryCompletedEventHandler AddSpecializationAreasEntryCompleted;
        
        /// <remarks/>
        public event EditLearningOutcomeCompletedEventHandler EditLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteLearningOutcomeCompletedEventHandler DeleteLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteSpecializationAreaCompletedEventHandler DeleteSpecializationAreaCompleted;
        
        /// <remarks/>
        public event AddDeliveryModeCompletedEventHandler AddDeliveryModeCompleted;
        
        /// <remarks/>
        public event AddClassificationofDegreesCompletedEventHandler AddClassificationofDegreesCompleted;
        
        /// <remarks/>
        public event VlidateDeliveryModeCompletedEventHandler VlidateDeliveryModeCompleted;
        
        /// <remarks/>
        public event VlidateDeliveryMode2CompletedEventHandler VlidateDeliveryMode2Completed;
        
        /// <remarks/>
        public event DeleteDeliveryModeCompletedEventHandler DeleteDeliveryModeCompleted;
        
        /// <remarks/>
        public event AddGradingSystemCompletedEventHandler AddGradingSystemCompleted;
        
        /// <remarks/>
        public event ValidateGradingSystemCompletedEventHandler ValidateGradingSystemCompleted;
        
        /// <remarks/>
        public event ValidateGradingSystem2CompletedEventHandler ValidateGradingSystem2Completed;
        
        /// <remarks/>
        public event EditGradingSystemCompletedEventHandler EditGradingSystemCompleted;
        
        /// <remarks/>
        public event DeleteGradingSystemCompletedEventHandler DeleteGradingSystemCompleted;
        
        /// <remarks/>
        public event AddUnitCompletedEventHandler AddUnitCompleted;
        
        /// <remarks/>
        public event ValidateUnitCompletedEventHandler ValidateUnitCompleted;
        
        /// <remarks/>
        public event AddUnitEntryCompletedEventHandler AddUnitEntryCompleted;
        
        /// <remarks/>
        public event EditUnitCompletedEventHandler EditUnitCompleted;
        
        /// <remarks/>
        public event DeleteUnitCompletedEventHandler DeleteUnitCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodCompletedEventHandler AddInstructionalMethodCompleted;
        
        /// <remarks/>
        public event ValidateInstructionalMethodCompletedEventHandler ValidateInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodEntryCompletedEventHandler AddInstructionalMethodEntryCompleted;
        
        /// <remarks/>
        public event DeleteInstructionalMethodCompletedEventHandler DeleteInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeCompletedEventHandler AddCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateCourseLearningOutcomeCompletedEventHandler ValidateCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeEntryCompletedEventHandler AddCourseLearningOutcomeEntryCompleted;
        
        /// <remarks/>
        public event EditCourseLearningOutcomeCompletedEventHandler EditCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteCourseLearningOutcomeCompletedEventHandler DeleteCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddBookCompletedEventHandler AddBookCompleted;
        
        /// <remarks/>
        public event ValidateBookCompletedEventHandler ValidateBookCompleted;
        
        /// <remarks/>
        public event ValidateProgrammeGeneralDetailsCompletedEventHandler ValidateProgrammeGeneralDetailsCompleted;
        
        /// <remarks/>
        public event ValidateProgrammeBasicInformationCompletedEventHandler ValidateProgrammeBasicInformationCompleted;
        
        /// <remarks/>
        public event AddBookEntryCompletedEventHandler AddBookEntryCompleted;
        
        /// <remarks/>
        public event EditBookCompletedEventHandler EditBookCompleted;
        
        /// <remarks/>
        public event DeleteBookCompletedEventHandler DeleteBookCompleted;
        
        /// <remarks/>
        public event SaveDocumentsPaymentCompletedEventHandler SaveDocumentsPaymentCompleted;
        
        /// <remarks/>
        public event SaveDocumentsInstProgrammesCompletedEventHandler SaveDocumentsInstProgrammesCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsProgrammeCompletedEventHandler ConfirmPaymentsProgrammeCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsInstitutionCompletedEventHandler ConfirmPaymentsInstitutionCompleted;
        
        /// <remarks/>
        public event FngeneratecodesCompletedEventHandler FngeneratecodesCompleted;
        
        /// <remarks/>
        public event AddKnownStakeHolderCompletedEventHandler AddKnownStakeHolderCompleted;
        
        /// <remarks/>
        public event AddNewStakeHolderCompletedEventHandler AddNewStakeHolderCompleted;
        
        /// <remarks/>
        public event AddStrengthOrWeaknessCompletedEventHandler AddStrengthOrWeaknessCompleted;
        
        /// <remarks/>
        public event AddSARCommitteesComposition1CompletedEventHandler AddSARCommitteesComposition1Completed;
        
        /// <remarks/>
        public event AddSARCommitteesCompositionCompletedEventHandler AddSARCommitteesCompositionCompleted;
        
        /// <remarks/>
        public event AddTrusteeSenateCompositionCompletedEventHandler AddTrusteeSenateCompositionCompleted;
        
        /// <remarks/>
        public event AddHRSummaryCompletedEventHandler AddHRSummaryCompleted;
        
        /// <remarks/>
        public event AddDevelopmentTrainingCompletedEventHandler AddDevelopmentTrainingCompleted;
        
        /// <remarks/>
        public event AddSchoolCompletedEventHandler AddSchoolCompleted;
        
        /// <remarks/>
        public event AddSchoolDepartmentCompletedEventHandler AddSchoolDepartmentCompleted;
        
        /// <remarks/>
        public event AddSourceOfIncomeCompletedEventHandler AddSourceOfIncomeCompleted;
        
        /// <remarks/>
        public event AddCreditorsDebtorsCompletedEventHandler AddCreditorsDebtorsCompleted;
        
        /// <remarks/>
        public event AddActualBudgetCompletedEventHandler AddActualBudgetCompleted;
        
        /// <remarks/>
        public event AddDebtEquityCurrentAssetsLiabilitiesCompletedEventHandler AddDebtEquityCurrentAssetsLiabilitiesCompleted;
        
        /// <remarks/>
        public event AddQaAcademicProgrammeCompletedEventHandler AddQaAcademicProgrammeCompleted;
        
        /// <remarks/>
        public event AddQaCollaboratingAcademicProgrammeCompletedEventHandler AddQaCollaboratingAcademicProgrammeCompleted;
        
        /// <remarks/>
        public event AddQaProgrammeSummaryCompletedEventHandler AddQaProgrammeSummaryCompleted;
        
        /// <remarks/>
        public event AddKenyanInternationalStudentsCompletedEventHandler AddKenyanInternationalStudentsCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffQualityCompletedEventHandler AddAcademicStaffQualityCompleted;
        
        /// <remarks/>
        public event AddBasicInformationCompletedEventHandler AddBasicInformationCompleted;
        
        /// <remarks/>
        public event EditBasicInformationCompletedEventHandler EditBasicInformationCompleted;
        
        /// <remarks/>
        public event AcceptRejectPeerReviewerJobCompletedEventHandler AcceptRejectPeerReviewerJobCompleted;
        
        /// <remarks/>
        public event AddPeerReviewersEvaluationCompletedEventHandler AddPeerReviewersEvaluationCompleted;
        
        /// <remarks/>
        public event AddGenericOutcomeCompletedEventHandler AddGenericOutcomeCompleted;
        
        /// <remarks/>
        public event AddProffessionalOutcomeCompletedEventHandler AddProffessionalOutcomeCompleted;
        
        /// <remarks/>
        public event AddNeedsRequirementsCompletedEventHandler AddNeedsRequirementsCompleted;
        
        /// <remarks/>
        public event AddCommunicationDetailsCompletedEventHandler AddCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event AddExpectedLearningOutcomeDetailsCompletedEventHandler AddExpectedLearningOutcomeDetailsCompleted;
        
        /// <remarks/>
        public event FnEditPeerReviewersEvaluationCompletedEventHandler FnEditPeerReviewersEvaluationCompleted;
        
        /// <remarks/>
        public event FnSendPeerApprovalRequestCompletedEventHandler FnSendPeerApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnRegisterPeerReviewerCompletedEventHandler FnRegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event FnGetVendornNumberCompletedEventHandler FnGetVendornNumberCompleted;
        
        /// <remarks/>
        public event FnInsertBlogCompletedEventHandler FnInsertBlogCompleted;
        
        /// <remarks/>
        public event FnInsertBlogReplyCompletedEventHandler FnInsertBlogReplyCompleted;
        
        /// <remarks/>
        public event FngetRationaleDescriptionCompletedEventHandler FngetRationaleDescriptionCompleted;
        
        /// <remarks/>
        public event FngetLearningOutcomeDescriptionCompletedEventHandler FngetLearningOutcomeDescriptionCompleted;
        
        /// <remarks/>
        public event FngetSpecializationDescriptionCompletedEventHandler FngetSpecializationDescriptionCompleted;
        
        /// <remarks/>
        public event FngetUnitDescriptionCompletedEventHandler FngetUnitDescriptionCompleted;
        
        /// <remarks/>
        public event FngetReferenceMaterialCompletedEventHandler FngetReferenceMaterialCompleted;
        
        /// <remarks/>
        public event FngetPhylosophyCompletedEventHandler FngetPhylosophyCompleted;
        
        /// <remarks/>
        public event FngetAdmissionRequirementCompletedEventHandler FngetAdmissionRequirementCompleted;
        
        /// <remarks/>
        public event FngetGoalProgrammeCompletedEventHandler FngetGoalProgrammeCompleted;
        
        /// <remarks/>
        public event FngetRequlationsProgrammeCompletedEventHandler FngetRequlationsProgrammeCompleted;
        
        /// <remarks/>
        public event FngetExaminationsProgrammeCompletedEventHandler FngetExaminationsProgrammeCompleted;
        
        /// <remarks/>
        public event FngetGraduationsProgrammeCompletedEventHandler FngetGraduationsProgrammeCompleted;
        
        /// <remarks/>
        public event FngetThesisProgrammeCompletedEventHandler FngetThesisProgrammeCompleted;
        
        /// <remarks/>
        public event FngetManagementProgrammeCompletedEventHandler FngetManagementProgrammeCompleted;
        
        /// <remarks/>
        public event GetApplicationNumberCompletedEventHandler GetApplicationNumberCompleted;
        
        /// <remarks/>
        public event GetAccreditationNumberCompletedEventHandler GetAccreditationNumberCompleted;
        
        /// <remarks/>
        public event GetQualityAuditNumberCompletedEventHandler GetQualityAuditNumberCompleted;
        
        /// <remarks/>
        public event GetOutComenNumberCompletedEventHandler GetOutComenNumberCompleted;
        
        /// <remarks/>
        public event AddLibraryServicesCompletedEventHandler AddLibraryServicesCompleted;
        
        /// <remarks/>
        public event FnGetCourseLearningOutcomeCompletedEventHandler FnGetCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddLibraryFunctionalAreasCompletedEventHandler AddLibraryFunctionalAreasCompleted;
        
        /// <remarks/>
        public event ProgramAccreditationAlertCompletedEventHandler ProgramAccreditationAlertCompleted;
        
        /// <remarks/>
        public event GetProgramApplicationNumberCompletedEventHandler GetProgramApplicationNumberCompleted;
        
        /// <remarks/>
        public event InstitutionCreateinvoiceCompletedEventHandler InstitutionCreateinvoiceCompleted;
        
        /// <remarks/>
        public event AddCommentsCompletedEventHandler AddCommentsCompleted;
        
        /// <remarks/>
        public event AddLibraryPoliciesCompletedEventHandler AddLibraryPoliciesCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentCompletedEventHandler ConfirmPaymentCompleted;
        
        /// <remarks/>
        public event ProgramConfirmPaymentCompletedEventHandler ProgramConfirmPaymentCompleted;
        
        /// <remarks/>
        public event AddStudentDraftCompletedEventHandler AddStudentDraftCompleted;
        
        /// <remarks/>
        public event UpdateStudentDraftCompletedEventHandler UpdateStudentDraftCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event DeleteStudentCompletedEventHandler DeleteStudentCompleted;
        
        /// <remarks/>
        public event EditSanitationsCompletedEventHandler EditSanitationsCompleted;
        
        /// <remarks/>
        public event EditUtilityCompletedEventHandler EditUtilityCompleted;
        
        /// <remarks/>
        public event EditBuildingCompletedEventHandler EditBuildingCompleted;
        
        /// <remarks/>
        public event EditFireCompletedEventHandler EditFireCompleted;
        
        /// <remarks/>
        public event EditRoadAccessCompletedEventHandler EditRoadAccessCompleted;
        
        /// <remarks/>
        public event EditRecreatonalCompletedEventHandler EditRecreatonalCompleted;
        
        /// <remarks/>
        public event EditPlantsEquipmentsCompletedEventHandler EditPlantsEquipmentsCompleted;
        
        /// <remarks/>
        public event EditWasteManagementCompletedEventHandler EditWasteManagementCompleted;
        
        /// <remarks/>
        public event EditLibraryCompletedEventHandler EditLibraryCompleted;
        
        /// <remarks/>
        public event AddAdminSpaceCompletedEventHandler AddAdminSpaceCompleted;
        
        /// <remarks/>
        public event InstitutionSignupCompletedEventHandler InstitutionSignupCompleted;
        
        /// <remarks/>
        public event ApplyForAccreditationCompletedEventHandler ApplyForAccreditationCompleted;
        
        /// <remarks/>
        public event ApplyForProgramAccreditationCompletedEventHandler ApplyForProgramAccreditationCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffCompletedEventHandler AddAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteAcademicStaffCompletedEventHandler DeleteAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteAllAcademicStaffCompletedEventHandler DeleteAllAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteAllLibraryStaffCompletedEventHandler DeleteAllLibraryStaffCompleted;
        
        /// <remarks/>
        public event DeleteAllNonTeachingStaffCompletedEventHandler DeleteAllNonTeachingStaffCompleted;
        
        /// <remarks/>
        public event DeleteAllPartTimeTeachingStaffCompletedEventHandler DeleteAllPartTimeTeachingStaffCompleted;
        
        /// <remarks/>
        public event DeleteAllStudentsEntriesCompletedEventHandler DeleteAllStudentsEntriesCompleted;
        
        /// <remarks/>
        public event AddNonAcademicStaffCompletedEventHandler AddNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddPartTimeAcademicStaffCompletedEventHandler AddPartTimeAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteNonAcademicStaffCompletedEventHandler DeleteNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeletePartTimeAcademicStaffCompletedEventHandler DeletePartTimeAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteResearchCompletedEventHandler DeleteResearchCompleted;
        
        /// <remarks/>
        public event DeleteGraduationCompletedEventHandler DeleteGraduationCompleted;
        
        /// <remarks/>
        public event DeleteStudentsResearchCompletedEventHandler DeleteStudentsResearchCompleted;
        
        /// <remarks/>
        public event AddInitialProgramsCompletedEventHandler AddInitialProgramsCompleted;
        
        /// <remarks/>
        public event AddReferenceMaterialCompletedEventHandler AddReferenceMaterialCompleted;
        
        /// <remarks/>
        public event AddDisciplineCaseCompletedEventHandler AddDisciplineCaseCompleted;
        
        /// <remarks/>
        public event AddSuccessfulAppealsCompletedEventHandler AddSuccessfulAppealsCompleted;
        
        /// <remarks/>
        public event EditDisciplineCaseCompletedEventHandler EditDisciplineCaseCompleted;
        
        /// <remarks/>
        public event AddExpectedActualAmountsCompletedEventHandler AddExpectedActualAmountsCompleted;
        
        /// <remarks/>
        public event DeleteExpectedActualAmountsCompletedEventHandler DeleteExpectedActualAmountsCompleted;
        
        /// <remarks/>
        public event AddCreditorsAmountsCompletedEventHandler AddCreditorsAmountsCompleted;
        
        /// <remarks/>
        public event DeleteCreditorsAmountsCompletedEventHandler DeleteCreditorsAmountsCompleted;
        
        /// <remarks/>
        public event AddDebtorsAmountsCompletedEventHandler AddDebtorsAmountsCompleted;
        
        /// <remarks/>
        public event DeleteDebtorsAmountsCompletedEventHandler DeleteDebtorsAmountsCompleted;
        
        /// <remarks/>
        public event DeleteDisciplineCaseCompletedEventHandler DeleteDisciplineCaseCompleted;
        
        /// <remarks/>
        public event DeleteAppealsCompletedEventHandler DeleteAppealsCompleted;
        
        /// <remarks/>
        public event DeleteChancellorsCompletedEventHandler DeleteChancellorsCompleted;
        
        /// <remarks/>
        public event DeleteSponsorsCompletedEventHandler DeleteSponsorsCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentsCompletedEventHandler DeleteDepartmentsCompleted;
        
        /// <remarks/>
        public event DeleteSchoolsCompletedEventHandler DeleteSchoolsCompleted;
        
        /// <remarks/>
        public event DeleteAffiliationsCompletedEventHandler DeleteAffiliationsCompleted;
        
        /// <remarks/>
        public event AddFinancialSubmissionCompletedEventHandler AddFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event DeleteFinancialSubmissionCompletedEventHandler DeleteFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event AddResearchCompletedEventHandler AddResearchCompleted;
        
        /// <remarks/>
        public event AddUniversityChancellorsCompletedEventHandler AddUniversityChancellorsCompleted;
        
        /// <remarks/>
        public event AddUniversityViceChancellorsCompletedEventHandler AddUniversityViceChancellorsCompleted;
        
        /// <remarks/>
        public event AddStudentsResearchCompletedEventHandler AddStudentsResearchCompleted;
        
        /// <remarks/>
        public event EditResearchCompletedEventHandler EditResearchCompleted;
        
        /// <remarks/>
        public event RegisterPeerReviewerCompletedEventHandler RegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerCompletedEventHandler UpdatePeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerPasswordCompletedEventHandler UpdatePeerReviewerPasswordCompleted;
        
        /// <remarks/>
        public event AddPeerAcademicQualificationsCompletedEventHandler AddPeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddPeerEmploymentRecordCompletedEventHandler AddPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event EditPeerEmploymentRecordCompletedEventHandler EditPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event DeletePeerEmploymentRecordCompletedEventHandler DeletePeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event GetInstitutionNumberCompletedEventHandler GetInstitutionNumberCompleted;
        
        /// <remarks/>
        public event GetInvitationNumberCompletedEventHandler GetInvitationNumberCompleted;
        
        /// <remarks/>
        public event GetAmendmentsNumberCompletedEventHandler GetAmendmentsNumberCompleted;
        
        /// <remarks/>
        public event GetInvitationDataSetIDCompletedEventHandler GetInvitationDataSetIDCompleted;
        
        /// <remarks/>
        public event AddOperationBudgetCompletedEventHandler AddOperationBudgetCompleted;
        
        /// <remarks/>
        public event DeleteOperationBudgetCompletedEventHandler DeleteOperationBudgetCompleted;
        
        /// <remarks/>
        public event AddLibraryBudgetDetailsCompletedEventHandler AddLibraryBudgetDetailsCompleted;
        
        /// <remarks/>
        public event DeleteLibraryBudgetDetailsCompletedEventHandler DeleteLibraryBudgetDetailsCompleted;
        
        /// <remarks/>
        public event AddResearchBudgetRecordCompletedEventHandler AddResearchBudgetRecordCompleted;
        
        /// <remarks/>
        public event DeleteResearchBudgetRecordCompletedEventHandler DeleteResearchBudgetRecordCompleted;
        
        /// <remarks/>
        public event AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler AddCurrentAssetsLiabilitiesEquitytRecordCompleted;
        
        /// <remarks/>
        public event DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler DeleteCurrentAssetsLiabilitiesEquitytRecordCompleted;
        
        /// <remarks/>
        public event AddLandCompletedEventHandler AddLandCompleted;
        
        /// <remarks/>
        public event AddFireCompletedEventHandler AddFireCompleted;
        
        /// <remarks/>
        public event AddEelevatedWaterCompletedEventHandler AddEelevatedWaterCompleted;
        
        /// <remarks/>
        public event EditEelevatedWaterCompletedEventHandler EditEelevatedWaterCompleted;
        
        /// <remarks/>
        public event DeleteEelevatedWaterCompletedEventHandler DeleteEelevatedWaterCompleted;
        
        /// <remarks/>
        public event AddUtilityServiceCompletedEventHandler AddUtilityServiceCompleted;
        
        /// <remarks/>
        public event AddPlantsEquipmentCompletedEventHandler AddPlantsEquipmentCompleted;
        
        /// <remarks/>
        public event AddRecreationCompletedEventHandler AddRecreationCompleted;
        
        /// <remarks/>
        public event AddSanitationCompletedEventHandler AddSanitationCompleted;
        
        /// <remarks/>
        public event AddAccessRoadsCompletedEventHandler AddAccessRoadsCompleted;
        
        /// <remarks/>
        public event AddLibraryCompletedEventHandler AddLibraryCompleted;
        
        /// <remarks/>
        public event DeleteLandCompletedEventHandler DeleteLandCompleted;
        
        /// <remarks/>
        public event DeleteSanitationCompletedEventHandler DeleteSanitationCompleted;
        
        /// <remarks/>
        public event DeleteUtilityServiceCompletedEventHandler DeleteUtilityServiceCompleted;
        
        /// <remarks/>
        public event DeleteLibraryCompletedEventHandler DeleteLibraryCompleted;
        
        /// <remarks/>
        public event DeleteClassificationCompletedEventHandler DeleteClassificationCompleted;
        
        /// <remarks/>
        public event DeleteLibraryServicesCompletedEventHandler DeleteLibraryServicesCompleted;
        
        /// <remarks/>
        public event DeleteLibraryFunctionalAreasCompletedEventHandler DeleteLibraryFunctionalAreasCompleted;
        
        /// <remarks/>
        public event DeleteAccessRoadsCompletedEventHandler DeleteAccessRoadsCompleted;
        
        /// <remarks/>
        public event DeleteWasteManagementCompletedEventHandler DeleteWasteManagementCompleted;
        
        /// <remarks/>
        public event DeletePlantsEquipmentsCompletedEventHandler DeletePlantsEquipmentsCompleted;
        
        /// <remarks/>
        public event DeleteRecreationCompletedEventHandler DeleteRecreationCompleted;
        
        /// <remarks/>
        public event DeleteFireCompletedEventHandler DeleteFireCompleted;
        
        /// <remarks/>
        public event DeletekeymilestoneCompletedEventHandler DeletekeymilestoneCompleted;
        
        /// <remarks/>
        public event DeleteBuildingCompletedEventHandler DeleteBuildingCompleted;
        
        /// <remarks/>
        public event DeleteReferenceCompletedEventHandler DeleteReferenceCompleted;
        
        /// <remarks/>
        public event EditLandCompletedEventHandler EditLandCompleted;
        
        /// <remarks/>
        public event EditChancellorsCompletedEventHandler EditChancellorsCompleted;
        
        /// <remarks/>
        public event EditAffiliationsCompletedEventHandler EditAffiliationsCompleted;
        
        /// <remarks/>
        public event EditSponsorCompletedEventHandler EditSponsorCompleted;
        
        /// <remarks/>
        public event EditKeyMilestonesCompletedEventHandler EditKeyMilestonesCompleted;
        
        /// <remarks/>
        public event EditSchoolCompletedEventHandler EditSchoolCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeDiplomaStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeDiplomaStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeDiplomaStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeDiplomaStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeDiplomaStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeDiplomaStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeDiplomaStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeDiplomaStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeCertificateStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeCertificateStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeCertificateStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeCertificateStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeCertificateStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeCertificateStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeCertificateStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeCertificateStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeCertificateStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeCertificateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeCertificateStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "rogrammes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityProgrammes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityProgrammes(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityProgrammes", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityProgrammesAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityProgrammesAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityProgrammesAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityProgrammesOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityProgrammesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityProgrammesOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityProgrammes", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityProgrammesOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityProgrammesOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityProgrammesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityProgrammesCompleted(this, new FnGetUniversityTotalUniversityProgrammesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityC" +
            "ampuses", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityCampuses_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityCampuses(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityCampuses", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCampusesAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityCampusesAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCampusesAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityCampusesOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityCampusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityCampusesOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityCampuses", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityCampusesOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityCampusesOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityCampusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityCampusesCompleted(this, new FnGetUniversityTotalUniversityCampusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendMailProgramApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendMailProgramApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendMailProgramApplication(string universitycode, string appno) {
            object[] results = this.Invoke("FnSendMailProgramApplication", new object[] {
                        universitycode,
                        appno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendMailProgramApplicationAsync(string universitycode, string appno) {
            this.FnSendMailProgramApplicationAsync(universitycode, appno, null);
        }
        
        /// <remarks/>
        public void FnSendMailProgramApplicationAsync(string universitycode, string appno, object userState) {
            if ((this.FnSendMailProgramApplicationOperationCompleted == null)) {
                this.FnSendMailProgramApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendMailProgramApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSendMailProgramApplication", new object[] {
                        universitycode,
                        appno}, this.FnSendMailProgramApplicationOperationCompleted, userState);
        }
        
        private void OnFnSendMailProgramApplicationOperationCompleted(object arg) {
            if ((this.FnSendMailProgramApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendMailProgramApplicationCompleted(this, new FnSendMailProgramApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitSelectedPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitSelectedPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPrograms(string universitycode, string applicationNo, string programNo) {
            object[] results = this.Invoke("FnSubmitSelectedPrograms", new object[] {
                        universitycode,
                        applicationNo,
                        programNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedProgramsAsync(string universitycode, string applicationNo, string programNo) {
            this.FnSubmitSelectedProgramsAsync(universitycode, applicationNo, programNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedProgramsAsync(string universitycode, string applicationNo, string programNo, object userState) {
            if ((this.FnSubmitSelectedProgramsOperationCompleted == null)) {
                this.FnSubmitSelectedProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedProgramsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPrograms", new object[] {
                        universitycode,
                        applicationNo,
                        programNo}, this.FnSubmitSelectedProgramsOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedProgramsOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedProgramsCompleted(this, new FnSubmitSelectedProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnTerminateApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnTerminateApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTerminateApplication(string applicationno) {
            object[] results = this.Invoke("FnTerminateApplication", new object[] {
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTerminateApplicationAsync(string applicationno) {
            this.FnTerminateApplicationAsync(applicationno, null);
        }
        
        /// <remarks/>
        public void FnTerminateApplicationAsync(string applicationno, object userState) {
            if ((this.FnTerminateApplicationOperationCompleted == null)) {
                this.FnTerminateApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTerminateApplicationOperationCompleted);
            }
            this.InvokeAsync("FnTerminateApplication", new object[] {
                        applicationno}, this.FnTerminateApplicationOperationCompleted, userState);
        }
        
        private void OnFnTerminateApplicationOperationCompleted(object arg) {
            if ((this.FnTerminateApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTerminateApplicationCompleted(this, new FnTerminateApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnRemoveSelectedPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnRemoveSelectedPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveSelectedPrograms(string universitycode, string applicationNo, string programNo) {
            object[] results = this.Invoke("FnRemoveSelectedPrograms", new object[] {
                        universitycode,
                        applicationNo,
                        programNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveSelectedProgramsAsync(string universitycode, string applicationNo, string programNo) {
            this.FnRemoveSelectedProgramsAsync(universitycode, applicationNo, programNo, null);
        }
        
        /// <remarks/>
        public void FnRemoveSelectedProgramsAsync(string universitycode, string applicationNo, string programNo, object userState) {
            if ((this.FnRemoveSelectedProgramsOperationCompleted == null)) {
                this.FnRemoveSelectedProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveSelectedProgramsOperationCompleted);
            }
            this.InvokeAsync("FnRemoveSelectedPrograms", new object[] {
                        universitycode,
                        applicationNo,
                        programNo}, this.FnRemoveSelectedProgramsOperationCompleted, userState);
        }
        
        private void OnFnRemoveSelectedProgramsOperationCompleted(object arg) {
            if ((this.FnRemoveSelectedProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveSelectedProgramsCompleted(this, new FnRemoveSelectedProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertTechnicalComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertTechnicalComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertTechnicalComments(string techno, string vendno, string applicationNo, int usertype) {
            object[] results = this.Invoke("FnInsertTechnicalComments", new object[] {
                        techno,
                        vendno,
                        applicationNo,
                        usertype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsAsync(string techno, string vendno, string applicationNo, int usertype) {
            this.FnInsertTechnicalCommentsAsync(techno, vendno, applicationNo, usertype, null);
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsAsync(string techno, string vendno, string applicationNo, int usertype, object userState) {
            if ((this.FnInsertTechnicalCommentsOperationCompleted == null)) {
                this.FnInsertTechnicalCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTechnicalCommentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertTechnicalComments", new object[] {
                        techno,
                        vendno,
                        applicationNo,
                        usertype}, this.FnInsertTechnicalCommentsOperationCompleted, userState);
        }
        
        private void OnFnInsertTechnicalCommentsOperationCompleted(object arg) {
            if ((this.FnInsertTechnicalCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTechnicalCommentsCompleted(this, new FnInsertTechnicalCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnapproveAuditCMNTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnapproveAuditCMNTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnapproveAuditCMNTeam(string documentno, string resourceno) {
            object[] results = this.Invoke("FnapproveAuditCMNTeam", new object[] {
                        documentno,
                        resourceno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnapproveAuditCMNTeamAsync(string documentno, string resourceno) {
            this.FnapproveAuditCMNTeamAsync(documentno, resourceno, null);
        }
        
        /// <remarks/>
        public void FnapproveAuditCMNTeamAsync(string documentno, string resourceno, object userState) {
            if ((this.FnapproveAuditCMNTeamOperationCompleted == null)) {
                this.FnapproveAuditCMNTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnapproveAuditCMNTeamOperationCompleted);
            }
            this.InvokeAsync("FnapproveAuditCMNTeam", new object[] {
                        documentno,
                        resourceno}, this.FnapproveAuditCMNTeamOperationCompleted, userState);
        }
        
        private void OnFnapproveAuditCMNTeamOperationCompleted(object arg) {
            if ((this.FnapproveAuditCMNTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnapproveAuditCMNTeamCompleted(this, new FnapproveAuditCMNTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnrejectAuditCMNTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnrejectAuditCMNTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnrejectAuditCMNTeam(string documentno, string resourceno, string reason) {
            object[] results = this.Invoke("FnrejectAuditCMNTeam", new object[] {
                        documentno,
                        resourceno,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnrejectAuditCMNTeamAsync(string documentno, string resourceno, string reason) {
            this.FnrejectAuditCMNTeamAsync(documentno, resourceno, reason, null);
        }
        
        /// <remarks/>
        public void FnrejectAuditCMNTeamAsync(string documentno, string resourceno, string reason, object userState) {
            if ((this.FnrejectAuditCMNTeamOperationCompleted == null)) {
                this.FnrejectAuditCMNTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnrejectAuditCMNTeamOperationCompleted);
            }
            this.InvokeAsync("FnrejectAuditCMNTeam", new object[] {
                        documentno,
                        resourceno,
                        reason}, this.FnrejectAuditCMNTeamOperationCompleted, userState);
        }
        
        private void OnFnrejectAuditCMNTeamOperationCompleted(object arg) {
            if ((this.FnrejectAuditCMNTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnrejectAuditCMNTeamCompleted(this, new FnrejectAuditCMNTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddAuditeeCMNTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddAuditeeCMNTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddAuditeeCMNTeam(string documentno, string tcontactname, string tengagementrole, string temail, string tphone) {
            object[] results = this.Invoke("FnAddAuditeeCMNTeam", new object[] {
                        documentno,
                        tcontactname,
                        tengagementrole,
                        temail,
                        tphone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddAuditeeCMNTeamAsync(string documentno, string tcontactname, string tengagementrole, string temail, string tphone) {
            this.FnAddAuditeeCMNTeamAsync(documentno, tcontactname, tengagementrole, temail, tphone, null);
        }
        
        /// <remarks/>
        public void FnAddAuditeeCMNTeamAsync(string documentno, string tcontactname, string tengagementrole, string temail, string tphone, object userState) {
            if ((this.FnAddAuditeeCMNTeamOperationCompleted == null)) {
                this.FnAddAuditeeCMNTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddAuditeeCMNTeamOperationCompleted);
            }
            this.InvokeAsync("FnAddAuditeeCMNTeam", new object[] {
                        documentno,
                        tcontactname,
                        tengagementrole,
                        temail,
                        tphone}, this.FnAddAuditeeCMNTeamOperationCompleted, userState);
        }
        
        private void OnFnAddAuditeeCMNTeamOperationCompleted(object arg) {
            if ((this.FnAddAuditeeCMNTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddAuditeeCMNTeamCompleted(this, new FnAddAuditeeCMNTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnEditAuditeeCMNTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnEditAuditeeCMNTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditAuditeeCMNTeam(int lineno, string documentno, string tcontactname, string tengagementrole, string temail, string tphone) {
            object[] results = this.Invoke("FnEditAuditeeCMNTeam", new object[] {
                        lineno,
                        documentno,
                        tcontactname,
                        tengagementrole,
                        temail,
                        tphone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditAuditeeCMNTeamAsync(int lineno, string documentno, string tcontactname, string tengagementrole, string temail, string tphone) {
            this.FnEditAuditeeCMNTeamAsync(lineno, documentno, tcontactname, tengagementrole, temail, tphone, null);
        }
        
        /// <remarks/>
        public void FnEditAuditeeCMNTeamAsync(int lineno, string documentno, string tcontactname, string tengagementrole, string temail, string tphone, object userState) {
            if ((this.FnEditAuditeeCMNTeamOperationCompleted == null)) {
                this.FnEditAuditeeCMNTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditAuditeeCMNTeamOperationCompleted);
            }
            this.InvokeAsync("FnEditAuditeeCMNTeam", new object[] {
                        lineno,
                        documentno,
                        tcontactname,
                        tengagementrole,
                        temail,
                        tphone}, this.FnEditAuditeeCMNTeamOperationCompleted, userState);
        }
        
        private void OnFnEditAuditeeCMNTeamOperationCompleted(object arg) {
            if ((this.FnEditAuditeeCMNTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditAuditeeCMNTeamCompleted(this, new FnEditAuditeeCMNTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnRemoveAuditeeCMNTeam", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnRemoveAuditeeCMNTeam_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveAuditeeCMNTeam(int lineno, string documentno) {
            object[] results = this.Invoke("FnRemoveAuditeeCMNTeam", new object[] {
                        lineno,
                        documentno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveAuditeeCMNTeamAsync(int lineno, string documentno) {
            this.FnRemoveAuditeeCMNTeamAsync(lineno, documentno, null);
        }
        
        /// <remarks/>
        public void FnRemoveAuditeeCMNTeamAsync(int lineno, string documentno, object userState) {
            if ((this.FnRemoveAuditeeCMNTeamOperationCompleted == null)) {
                this.FnRemoveAuditeeCMNTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveAuditeeCMNTeamOperationCompleted);
            }
            this.InvokeAsync("FnRemoveAuditeeCMNTeam", new object[] {
                        lineno,
                        documentno}, this.FnRemoveAuditeeCMNTeamOperationCompleted, userState);
        }
        
        private void OnFnRemoveAuditeeCMNTeamOperationCompleted(object arg) {
            if ((this.FnRemoveAuditeeCMNTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveAuditeeCMNTeamCompleted(this, new FnRemoveAuditeeCMNTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAuditEngagementLetter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAuditEngagementLetter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAuditEngagementLetter(string auditno) {
            object[] results = this.Invoke("FnAuditEngagementLetter", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAuditEngagementLetterAsync(string auditno) {
            this.FnAuditEngagementLetterAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnAuditEngagementLetterAsync(string auditno, object userState) {
            if ((this.FnAuditEngagementLetterOperationCompleted == null)) {
                this.FnAuditEngagementLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAuditEngagementLetterOperationCompleted);
            }
            this.InvokeAsync("FnAuditEngagementLetter", new object[] {
                        auditno}, this.FnAuditEngagementLetterOperationCompleted, userState);
        }
        
        private void OnFnAuditEngagementLetterOperationCompleted(object arg) {
            if ((this.FnAuditEngagementLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAuditEngagementLetterCompleted(this, new FnAuditEngagementLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddAuditAnswers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddAuditAnswers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddAuditAnswers(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype) {
            object[] results = this.Invoke("FnAddAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        openresponse,
                        questiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype) {
            this.FnAddAuditAnswersAsync(auditno, sectioncode, sectiondescription, questionid, questiondescription, openresponse, questiontype, null);
        }
        
        /// <remarks/>
        public void FnAddAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype, object userState) {
            if ((this.FnAddAuditAnswersOperationCompleted == null)) {
                this.FnAddAuditAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddAuditAnswersOperationCompleted);
            }
            this.InvokeAsync("FnAddAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        openresponse,
                        questiontype}, this.FnAddAuditAnswersOperationCompleted, userState);
        }
        
        private void OnFnAddAuditAnswersOperationCompleted(object arg) {
            if ((this.FnAddAuditAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddAuditAnswersCompleted(this, new FnAddAuditAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddLosedEndedAuditAnswers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddLosedEndedAuditAnswers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddLosedEndedAuditAnswers(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string closedresponse, int questiontype, string responseCode) {
            object[] results = this.Invoke("FnAddLosedEndedAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        closedresponse,
                        questiontype,
                        responseCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddLosedEndedAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string closedresponse, int questiontype, string responseCode) {
            this.FnAddLosedEndedAuditAnswersAsync(auditno, sectioncode, sectiondescription, questionid, questiondescription, closedresponse, questiontype, responseCode, null);
        }
        
        /// <remarks/>
        public void FnAddLosedEndedAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string closedresponse, int questiontype, string responseCode, object userState) {
            if ((this.FnAddLosedEndedAuditAnswersOperationCompleted == null)) {
                this.FnAddLosedEndedAuditAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddLosedEndedAuditAnswersOperationCompleted);
            }
            this.InvokeAsync("FnAddLosedEndedAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        closedresponse,
                        questiontype,
                        responseCode}, this.FnAddLosedEndedAuditAnswersOperationCompleted, userState);
        }
        
        private void OnFnAddLosedEndedAuditAnswersOperationCompleted(object arg) {
            if ((this.FnAddLosedEndedAuditAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddLosedEndedAuditAnswersCompleted(this, new FnAddLosedEndedAuditAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddDateAuditAnswers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddDateAuditAnswers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDateAuditAnswers(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype) {
            object[] results = this.Invoke("FnAddDateAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        openresponse,
                        questiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDateAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype) {
            this.FnAddDateAuditAnswersAsync(auditno, sectioncode, sectiondescription, questionid, questiondescription, openresponse, questiontype, null);
        }
        
        /// <remarks/>
        public void FnAddDateAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, string openresponse, int questiontype, object userState) {
            if ((this.FnAddDateAuditAnswersOperationCompleted == null)) {
                this.FnAddDateAuditAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDateAuditAnswersOperationCompleted);
            }
            this.InvokeAsync("FnAddDateAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        openresponse,
                        questiontype}, this.FnAddDateAuditAnswersOperationCompleted, userState);
        }
        
        private void OnFnAddDateAuditAnswersOperationCompleted(object arg) {
            if ((this.FnAddDateAuditAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDateAuditAnswersCompleted(this, new FnAddDateAuditAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddAttachmentAuditAnswers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddAttachmentAuditAnswers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddAttachmentAuditAnswers(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, bool attachment, int questiontype) {
            object[] results = this.Invoke("FnAddAttachmentAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        attachment,
                        questiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddAttachmentAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, bool attachment, int questiontype) {
            this.FnAddAttachmentAuditAnswersAsync(auditno, sectioncode, sectiondescription, questionid, questiondescription, attachment, questiontype, null);
        }
        
        /// <remarks/>
        public void FnAddAttachmentAuditAnswersAsync(string auditno, string sectioncode, string sectiondescription, string questionid, string questiondescription, bool attachment, int questiontype, object userState) {
            if ((this.FnAddAttachmentAuditAnswersOperationCompleted == null)) {
                this.FnAddAttachmentAuditAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddAttachmentAuditAnswersOperationCompleted);
            }
            this.InvokeAsync("FnAddAttachmentAuditAnswers", new object[] {
                        auditno,
                        sectioncode,
                        sectiondescription,
                        questionid,
                        questiondescription,
                        attachment,
                        questiontype}, this.FnAddAttachmentAuditAnswersOperationCompleted, userState);
        }
        
        private void OnFnAddAttachmentAuditAnswersOperationCompleted(object arg) {
            if ((this.FnAddAttachmentAuditAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddAttachmentAuditAnswersCompleted(this, new FnAddAttachmentAuditAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAuditInvitationPrintout", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAuditInvitationPrintout_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAuditInvitationPrintout(string auditno) {
            object[] results = this.Invoke("FnAuditInvitationPrintout", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAuditInvitationPrintoutAsync(string auditno) {
            this.FnAuditInvitationPrintoutAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnAuditInvitationPrintoutAsync(string auditno, object userState) {
            if ((this.FnAuditInvitationPrintoutOperationCompleted == null)) {
                this.FnAuditInvitationPrintoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAuditInvitationPrintoutOperationCompleted);
            }
            this.InvokeAsync("FnAuditInvitationPrintout", new object[] {
                        auditno}, this.FnAuditInvitationPrintoutOperationCompleted, userState);
        }
        
        private void OnFnAuditInvitationPrintoutOperationCompleted(object arg) {
            if ((this.FnAuditInvitationPrintoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAuditInvitationPrintoutCompleted(this, new FnAuditInvitationPrintoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnViewRoadmapPrintout", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnViewRoadmapPrintout_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnViewRoadmapPrintout(string auditno) {
            object[] results = this.Invoke("FnViewRoadmapPrintout", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnViewRoadmapPrintoutAsync(string auditno) {
            this.FnViewRoadmapPrintoutAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnViewRoadmapPrintoutAsync(string auditno, object userState) {
            if ((this.FnViewRoadmapPrintoutOperationCompleted == null)) {
                this.FnViewRoadmapPrintoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnViewRoadmapPrintoutOperationCompleted);
            }
            this.InvokeAsync("FnViewRoadmapPrintout", new object[] {
                        auditno}, this.FnViewRoadmapPrintoutOperationCompleted, userState);
        }
        
        private void OnFnViewRoadmapPrintoutOperationCompleted(object arg) {
            if ((this.FnViewRoadmapPrintoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnViewRoadmapPrintoutCompleted(this, new FnViewRoadmapPrintoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitPeerFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitPeerFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPeerFeedback(string feedbackNo, string peercode, string jobno) {
            object[] results = this.Invoke("FnSubmitPeerFeedback", new object[] {
                        feedbackNo,
                        peercode,
                        jobno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackAsync(string feedbackNo, string peercode, string jobno) {
            this.FnSubmitPeerFeedbackAsync(feedbackNo, peercode, jobno, null);
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackAsync(string feedbackNo, string peercode, string jobno, object userState) {
            if ((this.FnSubmitPeerFeedbackOperationCompleted == null)) {
                this.FnSubmitPeerFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPeerFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPeerFeedback", new object[] {
                        feedbackNo,
                        peercode,
                        jobno}, this.FnSubmitPeerFeedbackOperationCompleted, userState);
        }
        
        private void OnFnSubmitPeerFeedbackOperationCompleted(object arg) {
            if ((this.FnSubmitPeerFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPeerFeedbackCompleted(this, new FnSubmitPeerFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitPeerFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitPeerFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPeerFeedbackLines(string feedbackno, string component, decimal score) {
            object[] results = this.Invoke("FnSubmitPeerFeedbackLines", new object[] {
                        feedbackno,
                        component,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackLinesAsync(string feedbackno, string component, decimal score) {
            this.FnSubmitPeerFeedbackLinesAsync(feedbackno, component, score, null);
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackLinesAsync(string feedbackno, string component, decimal score, object userState) {
            if ((this.FnSubmitPeerFeedbackLinesOperationCompleted == null)) {
                this.FnSubmitPeerFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPeerFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPeerFeedbackLines", new object[] {
                        feedbackno,
                        component,
                        score}, this.FnSubmitPeerFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitPeerFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnSubmitPeerFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPeerFeedbackLinesCompleted(this, new FnSubmitPeerFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendCueWorkorderRatingEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendCueWorkorderRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendCueWorkorderRatingEmail(string code) {
            object[] results = this.Invoke("FnSendCueWorkorderRatingEmail", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendCueWorkorderRatingEmailAsync(string code) {
            this.FnSendCueWorkorderRatingEmailAsync(code, null);
        }
        
        /// <remarks/>
        public void FnSendCueWorkorderRatingEmailAsync(string code, object userState) {
            if ((this.FnSendCueWorkorderRatingEmailOperationCompleted == null)) {
                this.FnSendCueWorkorderRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendCueWorkorderRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendCueWorkorderRatingEmail", new object[] {
                        code}, this.FnSendCueWorkorderRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendCueWorkorderRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendCueWorkorderRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendCueWorkorderRatingEmailCompleted(this, new FnSendCueWorkorderRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendPeerWorkorderRatingEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendPeerWorkorderRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerWorkorderRatingEmail(string code) {
            object[] results = this.Invoke("FnSendPeerWorkorderRatingEmail", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerWorkorderRatingEmailAsync(string code) {
            this.FnSendPeerWorkorderRatingEmailAsync(code, null);
        }
        
        /// <remarks/>
        public void FnSendPeerWorkorderRatingEmailAsync(string code, object userState) {
            if ((this.FnSendPeerWorkorderRatingEmailOperationCompleted == null)) {
                this.FnSendPeerWorkorderRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerWorkorderRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerWorkorderRatingEmail", new object[] {
                        code}, this.FnSendPeerWorkorderRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendPeerWorkorderRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendPeerWorkorderRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerWorkorderRatingEmailCompleted(this, new FnSendPeerWorkorderRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertAuditRoadmapLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertAuditRoadmapLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertAuditRoadmapLines(string roadmapNo, string sectioncode, string remarks, int txtstatus, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectivedate, bool attachment) {
            object[] results = this.Invoke("FnInsertAuditRoadmapLines", new object[] {
                        roadmapNo,
                        sectioncode,
                        remarks,
                        txtstatus,
                        effectivedate,
                        attachment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertAuditRoadmapLinesAsync(string roadmapNo, string sectioncode, string remarks, int txtstatus, System.DateTime effectivedate, bool attachment) {
            this.FnInsertAuditRoadmapLinesAsync(roadmapNo, sectioncode, remarks, txtstatus, effectivedate, attachment, null);
        }
        
        /// <remarks/>
        public void FnInsertAuditRoadmapLinesAsync(string roadmapNo, string sectioncode, string remarks, int txtstatus, System.DateTime effectivedate, bool attachment, object userState) {
            if ((this.FnInsertAuditRoadmapLinesOperationCompleted == null)) {
                this.FnInsertAuditRoadmapLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAuditRoadmapLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertAuditRoadmapLines", new object[] {
                        roadmapNo,
                        sectioncode,
                        remarks,
                        txtstatus,
                        effectivedate,
                        attachment}, this.FnInsertAuditRoadmapLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertAuditRoadmapLinesOperationCompleted(object arg) {
            if ((this.FnInsertAuditRoadmapLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAuditRoadmapLinesCompleted(this, new FnInsertAuditRoadmapLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitRoadmap", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitRoadmap_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitRoadmap(string roadmapno, string universitycode) {
            object[] results = this.Invoke("FnSubmitRoadmap", new object[] {
                        roadmapno,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitRoadmapAsync(string roadmapno, string universitycode) {
            this.FnSubmitRoadmapAsync(roadmapno, universitycode, null);
        }
        
        /// <remarks/>
        public void FnSubmitRoadmapAsync(string roadmapno, string universitycode, object userState) {
            if ((this.FnSubmitRoadmapOperationCompleted == null)) {
                this.FnSubmitRoadmapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitRoadmapOperationCompleted);
            }
            this.InvokeAsync("FnSubmitRoadmap", new object[] {
                        roadmapno,
                        universitycode}, this.FnSubmitRoadmapOperationCompleted, userState);
        }
        
        private void OnFnSubmitRoadmapOperationCompleted(object arg) {
            if ((this.FnSubmitRoadmapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitRoadmapCompleted(this, new FnSubmitRoadmapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnCheckUniversityBalance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnCheckUniversityBalance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCheckUniversityBalance(string universitycode) {
            object[] results = this.Invoke("FnCheckUniversityBalance", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckUniversityBalanceAsync(string universitycode) {
            this.FnCheckUniversityBalanceAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FnCheckUniversityBalanceAsync(string universitycode, object userState) {
            if ((this.FnCheckUniversityBalanceOperationCompleted == null)) {
                this.FnCheckUniversityBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckUniversityBalanceOperationCompleted);
            }
            this.InvokeAsync("FnCheckUniversityBalance", new object[] {
                        universitycode}, this.FnCheckUniversityBalanceOperationCompleted, userState);
        }
        
        private void OnFnCheckUniversityBalanceOperationCompleted(object arg) {
            if ((this.FnCheckUniversityBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckUniversityBalanceCompleted(this, new FnCheckUniversityBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendNotification(string universitycode, string accreditationno) {
            object[] results = this.Invoke("FnSendNotification", new object[] {
                        universitycode,
                        accreditationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendNotificationAsync(string universitycode, string accreditationno) {
            this.FnSendNotificationAsync(universitycode, accreditationno, null);
        }
        
        /// <remarks/>
        public void FnSendNotificationAsync(string universitycode, string accreditationno, object userState) {
            if ((this.FnSendNotificationOperationCompleted == null)) {
                this.FnSendNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendNotification", new object[] {
                        universitycode,
                        accreditationno}, this.FnSendNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendNotificationOperationCompleted(object arg) {
            if ((this.FnSendNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendNotificationCompleted(this, new FnSendNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendUniversityNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendUniversityNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendUniversityNotification(string univesirtycode, string applicationno) {
            object[] results = this.Invoke("FnSendUniversityNotification", new object[] {
                        univesirtycode,
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendUniversityNotificationAsync(string univesirtycode, string applicationno) {
            this.FnSendUniversityNotificationAsync(univesirtycode, applicationno, null);
        }
        
        /// <remarks/>
        public void FnSendUniversityNotificationAsync(string univesirtycode, string applicationno, object userState) {
            if ((this.FnSendUniversityNotificationOperationCompleted == null)) {
                this.FnSendUniversityNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendUniversityNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendUniversityNotification", new object[] {
                        univesirtycode,
                        applicationno}, this.FnSendUniversityNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendUniversityNotificationOperationCompleted(object arg) {
            if ((this.FnSendUniversityNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendUniversityNotificationCompleted(this, new FnSendUniversityNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendCueNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendCueNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendCueNotification(string univesirtycode, string applicationno) {
            object[] results = this.Invoke("FnSendCueNotification", new object[] {
                        univesirtycode,
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendCueNotificationAsync(string univesirtycode, string applicationno) {
            this.FnSendCueNotificationAsync(univesirtycode, applicationno, null);
        }
        
        /// <remarks/>
        public void FnSendCueNotificationAsync(string univesirtycode, string applicationno, object userState) {
            if ((this.FnSendCueNotificationOperationCompleted == null)) {
                this.FnSendCueNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendCueNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendCueNotification", new object[] {
                        univesirtycode,
                        applicationno}, this.FnSendCueNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendCueNotificationOperationCompleted(object arg) {
            if ((this.FnSendCueNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendCueNotificationCompleted(this, new FnSendCueNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendQAApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendQAApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendQAApprovalRequest(string unicode) {
            object[] results = this.Invoke("SendQAApprovalRequest", new object[] {
                        unicode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendQAApprovalRequestAsync(string unicode) {
            this.SendQAApprovalRequestAsync(unicode, null);
        }
        
        /// <remarks/>
        public void SendQAApprovalRequestAsync(string unicode, object userState) {
            if ((this.SendQAApprovalRequestOperationCompleted == null)) {
                this.SendQAApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQAApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendQAApprovalRequest", new object[] {
                        unicode}, this.SendQAApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendQAApprovalRequestOperationCompleted(object arg) {
            if ((this.SendQAApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQAApprovalRequestCompleted(this, new SendQAApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelQAApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelQAApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelQAApprovalRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelQAApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelQAApprovalRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelQAApprovalRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelQAApprovalRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelQAApprovalRequestOperationCompleted == null)) {
                this.CancelQAApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelQAApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelQAApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelQAApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelQAApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelQAApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelQAApprovalRequestCompleted(this, new CancelQAApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveQARejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveQARejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveQARejectRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveQARejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveQARejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveQARejectRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveQARejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveQARejectRequestOperationCompleted == null)) {
                this.ApproveQARejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveQARejectRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveQARejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveQARejectRequestOperationCompleted, userState);
        }
        
        private void OnApproveQARejectRequestOperationCompleted(object arg) {
            if ((this.ApproveQARejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveQARejectRequestCompleted(this, new ApproveQARejectRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:QAdataClerkEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="QAdataClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string QAdataClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("QAdataClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QAdataClerkEmailRequestAsync(string usercode, string password) {
            this.QAdataClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void QAdataClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.QAdataClerkEmailRequestOperationCompleted == null)) {
                this.QAdataClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQAdataClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("QAdataClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.QAdataClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnQAdataClerkEmailRequestOperationCompleted(object arg) {
            if ((this.QAdataClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QAdataClerkEmailRequestCompleted(this, new QAdataClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:QACancelClerkEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="QACancelClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string QACancelClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("QACancelClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QACancelClerkEmailRequestAsync(string usercode, string password) {
            this.QACancelClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void QACancelClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.QACancelClerkEmailRequestOperationCompleted == null)) {
                this.QACancelClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQACancelClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("QACancelClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.QACancelClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnQACancelClerkEmailRequestOperationCompleted(object arg) {
            if ((this.QACancelClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QACancelClerkEmailRequestCompleted(this, new QACancelClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:QAdvcApprovalEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="QAdvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string QAdvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("QAdvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QAdvcApprovalEmailRequestAsync(string usercode, string password) {
            this.QAdvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void QAdvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.QAdvcApprovalEmailRequestOperationCompleted == null)) {
                this.QAdvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQAdvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("QAdvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.QAdvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnQAdvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.QAdvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QAdvcApprovalEmailRequestCompleted(this, new QAdvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:QAvcApprovalEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="QAvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string QAvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("QAvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QAvcApprovalEmailRequestAsync(string usercode, string password) {
            this.QAvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void QAvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.QAvcApprovalEmailRequestOperationCompleted == null)) {
                this.QAvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQAvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("QAvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.QAvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnQAvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.QAvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QAvcApprovalEmailRequestCompleted(this, new QAvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:QAdvcfinalvcApprovalEmailReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="QAdvcfinalvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string QAdvcfinalvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("QAdvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QAdvcfinalvcApprovalEmailRequestAsync(string usercode, string password) {
            this.QAdvcfinalvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void QAdvcfinalvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.QAdvcfinalvcApprovalEmailRequestOperationCompleted == null)) {
                this.QAdvcfinalvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQAdvcfinalvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("QAdvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.QAdvcfinalvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnQAdvcfinalvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.QAdvcfinalvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QAdvcfinalvcApprovalEmailRequestCompleted(this, new QAdvcfinalvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendAuditRoadmapCueNotificati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendAuditRoadmapCueNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendAuditRoadmapCueNotification(string univesirtycode, string roadmapno) {
            object[] results = this.Invoke("FnSendAuditRoadmapCueNotification", new object[] {
                        univesirtycode,
                        roadmapno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendAuditRoadmapCueNotificationAsync(string univesirtycode, string roadmapno) {
            this.FnSendAuditRoadmapCueNotificationAsync(univesirtycode, roadmapno, null);
        }
        
        /// <remarks/>
        public void FnSendAuditRoadmapCueNotificationAsync(string univesirtycode, string roadmapno, object userState) {
            if ((this.FnSendAuditRoadmapCueNotificationOperationCompleted == null)) {
                this.FnSendAuditRoadmapCueNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendAuditRoadmapCueNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendAuditRoadmapCueNotification", new object[] {
                        univesirtycode,
                        roadmapno}, this.FnSendAuditRoadmapCueNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendAuditRoadmapCueNotificationOperationCompleted(object arg) {
            if ((this.FnSendAuditRoadmapCueNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendAuditRoadmapCueNotificationCompleted(this, new FnSendAuditRoadmapCueNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendAuditRoadmapUniversityNot" +
            "ification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendAuditRoadmapUniversityNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendAuditRoadmapUniversityNotification(string univesirtycode, string roadmapno) {
            object[] results = this.Invoke("FnSendAuditRoadmapUniversityNotification", new object[] {
                        univesirtycode,
                        roadmapno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendAuditRoadmapUniversityNotificationAsync(string univesirtycode, string roadmapno) {
            this.FnSendAuditRoadmapUniversityNotificationAsync(univesirtycode, roadmapno, null);
        }
        
        /// <remarks/>
        public void FnSendAuditRoadmapUniversityNotificationAsync(string univesirtycode, string roadmapno, object userState) {
            if ((this.FnSendAuditRoadmapUniversityNotificationOperationCompleted == null)) {
                this.FnSendAuditRoadmapUniversityNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendAuditRoadmapUniversityNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendAuditRoadmapUniversityNotification", new object[] {
                        univesirtycode,
                        roadmapno}, this.FnSendAuditRoadmapUniversityNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendAuditRoadmapUniversityNotificationOperationCompleted(object arg) {
            if ((this.FnSendAuditRoadmapUniversityNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendAuditRoadmapUniversityNotificationCompleted(this, new FnSendAuditRoadmapUniversityNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnProgrammeUserHelpEmailRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnProgrammeUserHelpEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnProgrammeUserHelpEmailRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnProgrammeUserHelpEmailRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnProgrammeUserHelpEmailRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnProgrammeUserHelpEmailRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnProgrammeUserHelpEmailRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnProgrammeUserHelpEmailRequestOperationCompleted == null)) {
                this.FnProgrammeUserHelpEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProgrammeUserHelpEmailRequestOperationCompleted);
            }
            this.InvokeAsync("FnProgrammeUserHelpEmailRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnProgrammeUserHelpEmailRequestOperationCompleted, userState);
        }
        
        private void OnFnProgrammeUserHelpEmailRequestOperationCompleted(object arg) {
            if ((this.FnProgrammeUserHelpEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProgrammeUserHelpEmailRequestCompleted(this, new FnProgrammeUserHelpEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInstitutionUserHelpEmailReque" +
            "st", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInstitutionUserHelpEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInstitutionUserHelpEmailRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnInstitutionUserHelpEmailRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInstitutionUserHelpEmailRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnInstitutionUserHelpEmailRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnInstitutionUserHelpEmailRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnInstitutionUserHelpEmailRequestOperationCompleted == null)) {
                this.FnInstitutionUserHelpEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInstitutionUserHelpEmailRequestOperationCompleted);
            }
            this.InvokeAsync("FnInstitutionUserHelpEmailRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnInstitutionUserHelpEmailRequestOperationCompleted, userState);
        }
        
        private void OnFnInstitutionUserHelpEmailRequestOperationCompleted(object arg) {
            if ((this.FnInstitutionUserHelpEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInstitutionUserHelpEmailRequestCompleted(this, new FnInstitutionUserHelpEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitQAInvitation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitQAInvitation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitQAInvitation(string sARno, string universityCode) {
            object[] results = this.Invoke("FnSubmitQAInvitation", new object[] {
                        sARno,
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitQAInvitationAsync(string sARno, string universityCode) {
            this.FnSubmitQAInvitationAsync(sARno, universityCode, null);
        }
        
        /// <remarks/>
        public void FnSubmitQAInvitationAsync(string sARno, string universityCode, object userState) {
            if ((this.FnSubmitQAInvitationOperationCompleted == null)) {
                this.FnSubmitQAInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitQAInvitationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitQAInvitation", new object[] {
                        sARno,
                        universityCode}, this.FnSubmitQAInvitationOperationCompleted, userState);
        }
        
        private void OnFnSubmitQAInvitationOperationCompleted(object arg) {
            if ((this.FnSubmitQAInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitQAInvitationCompleted(this, new FnSubmitQAInvitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendQaInvitationEmailToCUE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendQaInvitationEmailToCUE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendQaInvitationEmailToCUE(string sARNo, string universitycode) {
            object[] results = this.Invoke("FnSendQaInvitationEmailToCUE", new object[] {
                        sARNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendQaInvitationEmailToCUEAsync(string sARNo, string universitycode) {
            this.FnSendQaInvitationEmailToCUEAsync(sARNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FnSendQaInvitationEmailToCUEAsync(string sARNo, string universitycode, object userState) {
            if ((this.FnSendQaInvitationEmailToCUEOperationCompleted == null)) {
                this.FnSendQaInvitationEmailToCUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendQaInvitationEmailToCUEOperationCompleted);
            }
            this.InvokeAsync("FnSendQaInvitationEmailToCUE", new object[] {
                        sARNo,
                        universitycode}, this.FnSendQaInvitationEmailToCUEOperationCompleted, userState);
        }
        
        private void OnFnSendQaInvitationEmailToCUEOperationCompleted(object arg) {
            if ((this.FnSendQaInvitationEmailToCUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendQaInvitationEmailToCUECompleted(this, new FnSendQaInvitationEmailToCUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendQaInvitationEmailToUniver" +
            "sity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendQaInvitationEmailToUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendQaInvitationEmailToUniversity(string sARNo, string universitycode) {
            object[] results = this.Invoke("FnSendQaInvitationEmailToUniversity", new object[] {
                        sARNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendQaInvitationEmailToUniversityAsync(string sARNo, string universitycode) {
            this.FnSendQaInvitationEmailToUniversityAsync(sARNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FnSendQaInvitationEmailToUniversityAsync(string sARNo, string universitycode, object userState) {
            if ((this.FnSendQaInvitationEmailToUniversityOperationCompleted == null)) {
                this.FnSendQaInvitationEmailToUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendQaInvitationEmailToUniversityOperationCompleted);
            }
            this.InvokeAsync("FnSendQaInvitationEmailToUniversity", new object[] {
                        sARNo,
                        universitycode}, this.FnSendQaInvitationEmailToUniversityOperationCompleted, userState);
        }
        
        private void OnFnSendQaInvitationEmailToUniversityOperationCompleted(object arg) {
            if ((this.FnSendQaInvitationEmailToUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendQaInvitationEmailToUniversityCompleted(this, new FnSendQaInvitationEmailToUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitQASARResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitQASARResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitQASARResponse(string sARno, string universityCode) {
            object[] results = this.Invoke("FnSubmitQASARResponse", new object[] {
                        sARno,
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitQASARResponseAsync(string sARno, string universityCode) {
            this.FnSubmitQASARResponseAsync(sARno, universityCode, null);
        }
        
        /// <remarks/>
        public void FnSubmitQASARResponseAsync(string sARno, string universityCode, object userState) {
            if ((this.FnSubmitQASARResponseOperationCompleted == null)) {
                this.FnSubmitQASARResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitQASARResponseOperationCompleted);
            }
            this.InvokeAsync("FnSubmitQASARResponse", new object[] {
                        sARno,
                        universityCode}, this.FnSubmitQASARResponseOperationCompleted, userState);
        }
        
        private void OnFnSubmitQASARResponseOperationCompleted(object arg) {
            if ((this.FnSubmitQASARResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitQASARResponseCompleted(this, new FnSubmitQASARResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendQaSARResponseEmailToCUE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendQaSARResponseEmailToCUE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendQaSARResponseEmailToCUE(string sARNo, string universitycode) {
            object[] results = this.Invoke("FnSendQaSARResponseEmailToCUE", new object[] {
                        sARNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendQaSARResponseEmailToCUEAsync(string sARNo, string universitycode) {
            this.FnSendQaSARResponseEmailToCUEAsync(sARNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FnSendQaSARResponseEmailToCUEAsync(string sARNo, string universitycode, object userState) {
            if ((this.FnSendQaSARResponseEmailToCUEOperationCompleted == null)) {
                this.FnSendQaSARResponseEmailToCUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendQaSARResponseEmailToCUEOperationCompleted);
            }
            this.InvokeAsync("FnSendQaSARResponseEmailToCUE", new object[] {
                        sARNo,
                        universitycode}, this.FnSendQaSARResponseEmailToCUEOperationCompleted, userState);
        }
        
        private void OnFnSendQaSARResponseEmailToCUEOperationCompleted(object arg) {
            if ((this.FnSendQaSARResponseEmailToCUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendQaSARResponseEmailToCUECompleted(this, new FnSendQaSARResponseEmailToCUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendQaSARResponseEmailToUnive" +
            "rsity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendQaSARResponseEmailToUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendQaSARResponseEmailToUniversity(ref string sARNo, string universitycode) {
            object[] results = this.Invoke("FnSendQaSARResponseEmailToUniversity", new object[] {
                        sARNo,
                        universitycode});
            sARNo = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendQaSARResponseEmailToUniversityAsync(string sARNo, string universitycode) {
            this.FnSendQaSARResponseEmailToUniversityAsync(sARNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FnSendQaSARResponseEmailToUniversityAsync(string sARNo, string universitycode, object userState) {
            if ((this.FnSendQaSARResponseEmailToUniversityOperationCompleted == null)) {
                this.FnSendQaSARResponseEmailToUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendQaSARResponseEmailToUniversityOperationCompleted);
            }
            this.InvokeAsync("FnSendQaSARResponseEmailToUniversity", new object[] {
                        sARNo,
                        universitycode}, this.FnSendQaSARResponseEmailToUniversityOperationCompleted, userState);
        }
        
        private void OnFnSendQaSARResponseEmailToUniversityOperationCompleted(object arg) {
            if ((this.FnSendQaSARResponseEmailToUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendQaSARResponseEmailToUniversityCompleted(this, new FnSendQaSARResponseEmailToUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnCreateCorrectionOfFuctualErro" +
            "rs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnCreateCorrectionOfFuctualErrors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateCorrectionOfFuctualErrors(string headeNo, string projectNo, string universityCode) {
            object[] results = this.Invoke("FnCreateCorrectionOfFuctualErrors", new object[] {
                        headeNo,
                        projectNo,
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateCorrectionOfFuctualErrorsAsync(string headeNo, string projectNo, string universityCode) {
            this.FnCreateCorrectionOfFuctualErrorsAsync(headeNo, projectNo, universityCode, null);
        }
        
        /// <remarks/>
        public void FnCreateCorrectionOfFuctualErrorsAsync(string headeNo, string projectNo, string universityCode, object userState) {
            if ((this.FnCreateCorrectionOfFuctualErrorsOperationCompleted == null)) {
                this.FnCreateCorrectionOfFuctualErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateCorrectionOfFuctualErrorsOperationCompleted);
            }
            this.InvokeAsync("FnCreateCorrectionOfFuctualErrors", new object[] {
                        headeNo,
                        projectNo,
                        universityCode}, this.FnCreateCorrectionOfFuctualErrorsOperationCompleted, userState);
        }
        
        private void OnFnCreateCorrectionOfFuctualErrorsOperationCompleted(object arg) {
            if ((this.FnCreateCorrectionOfFuctualErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateCorrectionOfFuctualErrorsCompleted(this, new FnCreateCorrectionOfFuctualErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertCorrectionOfFuctualErro" +
            "rsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertCorrectionOfFuctualErrorsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertCorrectionOfFuctualErrorsLines(string headerNo, string sectionCode, int findingResponse, string institutionResponse) {
            object[] results = this.Invoke("FnInsertCorrectionOfFuctualErrorsLines", new object[] {
                        headerNo,
                        sectionCode,
                        findingResponse,
                        institutionResponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertCorrectionOfFuctualErrorsLinesAsync(string headerNo, string sectionCode, int findingResponse, string institutionResponse) {
            this.FnInsertCorrectionOfFuctualErrorsLinesAsync(headerNo, sectionCode, findingResponse, institutionResponse, null);
        }
        
        /// <remarks/>
        public void FnInsertCorrectionOfFuctualErrorsLinesAsync(string headerNo, string sectionCode, int findingResponse, string institutionResponse, object userState) {
            if ((this.FnInsertCorrectionOfFuctualErrorsLinesOperationCompleted == null)) {
                this.FnInsertCorrectionOfFuctualErrorsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertCorrectionOfFuctualErrorsLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertCorrectionOfFuctualErrorsLines", new object[] {
                        headerNo,
                        sectionCode,
                        findingResponse,
                        institutionResponse}, this.FnInsertCorrectionOfFuctualErrorsLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertCorrectionOfFuctualErrorsLinesOperationCompleted(object arg) {
            if ((this.FnInsertCorrectionOfFuctualErrorsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertCorrectionOfFuctualErrorsLinesCompleted(this, new FnInsertCorrectionOfFuctualErrorsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnCheckAuditPaymentDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnCheckAuditPaymentDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCheckAuditPaymentDocument(string sARNo, bool paymentDocument) {
            object[] results = this.Invoke("FnCheckAuditPaymentDocument", new object[] {
                        sARNo,
                        paymentDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckAuditPaymentDocumentAsync(string sARNo, bool paymentDocument) {
            this.FnCheckAuditPaymentDocumentAsync(sARNo, paymentDocument, null);
        }
        
        /// <remarks/>
        public void FnCheckAuditPaymentDocumentAsync(string sARNo, bool paymentDocument, object userState) {
            if ((this.FnCheckAuditPaymentDocumentOperationCompleted == null)) {
                this.FnCheckAuditPaymentDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckAuditPaymentDocumentOperationCompleted);
            }
            this.InvokeAsync("FnCheckAuditPaymentDocument", new object[] {
                        sARNo,
                        paymentDocument}, this.FnCheckAuditPaymentDocumentOperationCompleted, userState);
        }
        
        private void OnFnCheckAuditPaymentDocumentOperationCompleted(object arg) {
            if ((this.FnCheckAuditPaymentDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckAuditPaymentDocumentCompleted(this, new FnCheckAuditPaymentDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetAuditFindings", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetAuditFindings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetAuditFindings(string feedbackNo) {
            object[] results = this.Invoke("FngetAuditFindings", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetAuditFindingsAsync(string feedbackNo) {
            this.FngetAuditFindingsAsync(feedbackNo, null);
        }
        
        /// <remarks/>
        public void FngetAuditFindingsAsync(string feedbackNo, object userState) {
            if ((this.FngetAuditFindingsOperationCompleted == null)) {
                this.FngetAuditFindingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetAuditFindingsOperationCompleted);
            }
            this.InvokeAsync("FngetAuditFindings", new object[] {
                        feedbackNo}, this.FngetAuditFindingsOperationCompleted, userState);
        }
        
        private void OnFngetAuditFindingsOperationCompleted(object arg) {
            if ((this.FngetAuditFindingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetAuditFindingsCompleted(this, new FngetAuditFindingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetAccademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetAccademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAccademicStaff(string universityCode) {
            object[] results = this.Invoke("FnGetAccademicStaff", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAccademicStaffAsync(string universityCode) {
            this.FnGetAccademicStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetAccademicStaffAsync(string universityCode, object userState) {
            if ((this.FnGetAccademicStaffOperationCompleted == null)) {
                this.FnGetAccademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAccademicStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetAccademicStaff", new object[] {
                        universityCode}, this.FnGetAccademicStaffOperationCompleted, userState);
        }
        
        private void OnFnGetAccademicStaffOperationCompleted(object arg) {
            if ((this.FnGetAccademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAccademicStaffCompleted(this, new FnGetAccademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetNonTeachingStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetNonTeachingStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetNonTeachingStaff(string universityCode) {
            object[] results = this.Invoke("FnGetNonTeachingStaff", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetNonTeachingStaffAsync(string universityCode) {
            this.FnGetNonTeachingStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetNonTeachingStaffAsync(string universityCode, object userState) {
            if ((this.FnGetNonTeachingStaffOperationCompleted == null)) {
                this.FnGetNonTeachingStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetNonTeachingStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetNonTeachingStaff", new object[] {
                        universityCode}, this.FnGetNonTeachingStaffOperationCompleted, userState);
        }
        
        private void OnFnGetNonTeachingStaffOperationCompleted(object arg) {
            if ((this.FnGetNonTeachingStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetNonTeachingStaffCompleted(this, new FnGetNonTeachingStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLibraryStaff(string universityCode) {
            object[] results = this.Invoke("FnGetLibraryStaff", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLibraryStaffAsync(string universityCode) {
            this.FnGetLibraryStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetLibraryStaffAsync(string universityCode, object userState) {
            if ((this.FnGetLibraryStaffOperationCompleted == null)) {
                this.FnGetLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetLibraryStaff", new object[] {
                        universityCode}, this.FnGetLibraryStaffOperationCompleted, userState);
        }
        
        private void OnFnGetLibraryStaffOperationCompleted(object arg) {
            if ((this.FnGetLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLibraryStaffCompleted(this, new FnGetLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetPartTimeTeachingStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetPartTimeTeachingStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPartTimeTeachingStaff(string universityCode) {
            object[] results = this.Invoke("FnGetPartTimeTeachingStaff", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPartTimeTeachingStaffAsync(string universityCode) {
            this.FnGetPartTimeTeachingStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetPartTimeTeachingStaffAsync(string universityCode, object userState) {
            if ((this.FnGetPartTimeTeachingStaffOperationCompleted == null)) {
                this.FnGetPartTimeTeachingStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPartTimeTeachingStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetPartTimeTeachingStaff", new object[] {
                        universityCode}, this.FnGetPartTimeTeachingStaffOperationCompleted, userState);
        }
        
        private void OnFnGetPartTimeTeachingStaffOperationCompleted(object arg) {
            if ((this.FnGetPartTimeTeachingStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPartTimeTeachingStaffCompleted(this, new FnGetPartTimeTeachingStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetTerminatedPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetTerminatedPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetTerminatedPrograms(string universityCode) {
            object[] results = this.Invoke("FnGetTerminatedPrograms", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetTerminatedProgramsAsync(string universityCode) {
            this.FnGetTerminatedProgramsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetTerminatedProgramsAsync(string universityCode, object userState) {
            if ((this.FnGetTerminatedProgramsOperationCompleted == null)) {
                this.FnGetTerminatedProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetTerminatedProgramsOperationCompleted);
            }
            this.InvokeAsync("FnGetTerminatedPrograms", new object[] {
                        universityCode}, this.FnGetTerminatedProgramsOperationCompleted, userState);
        }
        
        private void OnFnGetTerminatedProgramsOperationCompleted(object arg) {
            if ((this.FnGetTerminatedProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetTerminatedProgramsCompleted(this, new FnGetTerminatedProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetStaffCounter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetStaffCounter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetStaffCounter(string universityCode) {
            object[] results = this.Invoke("FnGetStaffCounter", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetStaffCounterAsync(string universityCode) {
            this.FnGetStaffCounterAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetStaffCounterAsync(string universityCode, object userState) {
            if ((this.FnGetStaffCounterOperationCompleted == null)) {
                this.FnGetStaffCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetStaffCounterOperationCompleted);
            }
            this.InvokeAsync("FnGetStaffCounter", new object[] {
                        universityCode}, this.FnGetStaffCounterOperationCompleted, userState);
        }
        
        private void OnFnGetStaffCounterOperationCompleted(object arg) {
            if ((this.FnGetStaffCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetStaffCounterCompleted(this, new FnGetStaffCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeOutcomes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeOutcomes(string accNo) {
            object[] results = this.Invoke("FnGetProgrammeOutcomes", new object[] {
                        accNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeOutcomesAsync(string accNo) {
            this.FnGetProgrammeOutcomesAsync(accNo, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeOutcomesAsync(string accNo, object userState) {
            if ((this.FnGetProgrammeOutcomesOperationCompleted == null)) {
                this.FnGetProgrammeOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeOutcomes", new object[] {
                        accNo}, this.FnGetProgrammeOutcomesOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeOutcomesOperationCompleted(object arg) {
            if ((this.FnGetProgrammeOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeOutcomesCompleted(this, new FnGetProgrammeOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetOpenPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetOpenPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetOpenPrograms(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetOpenPrograms", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetOpenProgramsAsync(string accNo, string uniCode) {
            this.FnGetOpenProgramsAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetOpenProgramsAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetOpenProgramsOperationCompleted == null)) {
                this.FnGetOpenProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetOpenProgramsOperationCompleted);
            }
            this.InvokeAsync("FnGetOpenPrograms", new object[] {
                        accNo,
                        uniCode}, this.FnGetOpenProgramsOperationCompleted, userState);
        }
        
        private void OnFnGetOpenProgramsOperationCompleted(object arg) {
            if ((this.FnGetOpenProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetOpenProgramsCompleted(this, new FnGetOpenProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetOpenPrograms1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetOpenPrograms1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetOpenPrograms1(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetOpenPrograms1", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetOpenPrograms1Async(string accNo, string uniCode) {
            this.FnGetOpenPrograms1Async(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetOpenPrograms1Async(string accNo, string uniCode, object userState) {
            if ((this.FnGetOpenPrograms1OperationCompleted == null)) {
                this.FnGetOpenPrograms1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetOpenPrograms1OperationCompleted);
            }
            this.InvokeAsync("FnGetOpenPrograms1", new object[] {
                        accNo,
                        uniCode}, this.FnGetOpenPrograms1OperationCompleted, userState);
        }
        
        private void OnFnGetOpenPrograms1OperationCompleted(object arg) {
            if ((this.FnGetOpenPrograms1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetOpenPrograms1Completed(this, new FnGetOpenPrograms1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertProgrammeOutcome1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertProgrammeOutcome1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertProgrammeOutcome1(string uniNo, string programNo, string courseOutcome) {
            object[] results = this.Invoke("FnInsertProgrammeOutcome1", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome1Async(string uniNo, string programNo, string courseOutcome) {
            this.FnInsertProgrammeOutcome1Async(uniNo, programNo, courseOutcome, null);
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome1Async(string uniNo, string programNo, string courseOutcome, object userState) {
            if ((this.FnInsertProgrammeOutcome1OperationCompleted == null)) {
                this.FnInsertProgrammeOutcome1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProgrammeOutcome1OperationCompleted);
            }
            this.InvokeAsync("FnInsertProgrammeOutcome1", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome}, this.FnInsertProgrammeOutcome1OperationCompleted, userState);
        }
        
        private void OnFnInsertProgrammeOutcome1OperationCompleted(object arg) {
            if ((this.FnInsertProgrammeOutcome1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProgrammeOutcome1Completed(this, new FnInsertProgrammeOutcome1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertProgrammeOutcome2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertProgrammeOutcome2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertProgrammeOutcome2(string uniNo, string programNo, string courseOutcome) {
            object[] results = this.Invoke("FnInsertProgrammeOutcome2", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome2Async(string uniNo, string programNo, string courseOutcome) {
            this.FnInsertProgrammeOutcome2Async(uniNo, programNo, courseOutcome, null);
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome2Async(string uniNo, string programNo, string courseOutcome, object userState) {
            if ((this.FnInsertProgrammeOutcome2OperationCompleted == null)) {
                this.FnInsertProgrammeOutcome2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProgrammeOutcome2OperationCompleted);
            }
            this.InvokeAsync("FnInsertProgrammeOutcome2", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome}, this.FnInsertProgrammeOutcome2OperationCompleted, userState);
        }
        
        private void OnFnInsertProgrammeOutcome2OperationCompleted(object arg) {
            if ((this.FnInsertProgrammeOutcome2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProgrammeOutcome2Completed(this, new FnInsertProgrammeOutcome2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertProgrammeOutcome3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertProgrammeOutcome3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertProgrammeOutcome3(string uniNo, string programNo, string courseOutcome) {
            object[] results = this.Invoke("FnInsertProgrammeOutcome3", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome3Async(string uniNo, string programNo, string courseOutcome) {
            this.FnInsertProgrammeOutcome3Async(uniNo, programNo, courseOutcome, null);
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome3Async(string uniNo, string programNo, string courseOutcome, object userState) {
            if ((this.FnInsertProgrammeOutcome3OperationCompleted == null)) {
                this.FnInsertProgrammeOutcome3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProgrammeOutcome3OperationCompleted);
            }
            this.InvokeAsync("FnInsertProgrammeOutcome3", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome}, this.FnInsertProgrammeOutcome3OperationCompleted, userState);
        }
        
        private void OnFnInsertProgrammeOutcome3OperationCompleted(object arg) {
            if ((this.FnInsertProgrammeOutcome3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProgrammeOutcome3Completed(this, new FnInsertProgrammeOutcome3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertProgrammeOutcome4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertProgrammeOutcome4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertProgrammeOutcome4(string uniNo, string programNo, string courseOutcome) {
            object[] results = this.Invoke("FnInsertProgrammeOutcome4", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome4Async(string uniNo, string programNo, string courseOutcome) {
            this.FnInsertProgrammeOutcome4Async(uniNo, programNo, courseOutcome, null);
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome4Async(string uniNo, string programNo, string courseOutcome, object userState) {
            if ((this.FnInsertProgrammeOutcome4OperationCompleted == null)) {
                this.FnInsertProgrammeOutcome4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProgrammeOutcome4OperationCompleted);
            }
            this.InvokeAsync("FnInsertProgrammeOutcome4", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome}, this.FnInsertProgrammeOutcome4OperationCompleted, userState);
        }
        
        private void OnFnInsertProgrammeOutcome4OperationCompleted(object arg) {
            if ((this.FnInsertProgrammeOutcome4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProgrammeOutcome4Completed(this, new FnInsertProgrammeOutcome4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertProgrammeOutcome5", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertProgrammeOutcome5_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertProgrammeOutcome5(string uniNo, string programNo, string courseOutcome) {
            object[] results = this.Invoke("FnInsertProgrammeOutcome5", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome5Async(string uniNo, string programNo, string courseOutcome) {
            this.FnInsertProgrammeOutcome5Async(uniNo, programNo, courseOutcome, null);
        }
        
        /// <remarks/>
        public void FnInsertProgrammeOutcome5Async(string uniNo, string programNo, string courseOutcome, object userState) {
            if ((this.FnInsertProgrammeOutcome5OperationCompleted == null)) {
                this.FnInsertProgrammeOutcome5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProgrammeOutcome5OperationCompleted);
            }
            this.InvokeAsync("FnInsertProgrammeOutcome5", new object[] {
                        uniNo,
                        programNo,
                        courseOutcome}, this.FnInsertProgrammeOutcome5OperationCompleted, userState);
        }
        
        private void OnFnInsertProgrammeOutcome5OperationCompleted(object arg) {
            if ((this.FnInsertProgrammeOutcome5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProgrammeOutcome5Completed(this, new FnInsertProgrammeOutcome5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnNewProgrammeDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnNewProgrammeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewProgrammeDetails(string docno, string unino, string pname, int plevel, string pdomain, decimal pduration) {
            object[] results = this.Invoke("FnNewProgrammeDetails", new object[] {
                        docno,
                        unino,
                        pname,
                        plevel,
                        pdomain,
                        pduration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewProgrammeDetailsAsync(string docno, string unino, string pname, int plevel, string pdomain, decimal pduration) {
            this.FnNewProgrammeDetailsAsync(docno, unino, pname, plevel, pdomain, pduration, null);
        }
        
        /// <remarks/>
        public void FnNewProgrammeDetailsAsync(string docno, string unino, string pname, int plevel, string pdomain, decimal pduration, object userState) {
            if ((this.FnNewProgrammeDetailsOperationCompleted == null)) {
                this.FnNewProgrammeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewProgrammeDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewProgrammeDetails", new object[] {
                        docno,
                        unino,
                        pname,
                        plevel,
                        pdomain,
                        pduration}, this.FnNewProgrammeDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewProgrammeDetailsOperationCompleted(object arg) {
            if ((this.FnNewProgrammeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewProgrammeDetailsCompleted(this, new FnNewProgrammeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertRecommendationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertRecommendationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRecommendationLines(string docNo, int lineNo, string feedback, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, int docstatus) {
            object[] results = this.Invoke("FnInsertRecommendationLines", new object[] {
                        docNo,
                        lineNo,
                        feedback,
                        date,
                        docstatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRecommendationLinesAsync(string docNo, int lineNo, string feedback, System.DateTime date, int docstatus) {
            this.FnInsertRecommendationLinesAsync(docNo, lineNo, feedback, date, docstatus, null);
        }
        
        /// <remarks/>
        public void FnInsertRecommendationLinesAsync(string docNo, int lineNo, string feedback, System.DateTime date, int docstatus, object userState) {
            if ((this.FnInsertRecommendationLinesOperationCompleted == null)) {
                this.FnInsertRecommendationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRecommendationLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertRecommendationLines", new object[] {
                        docNo,
                        lineNo,
                        feedback,
                        date,
                        docstatus}, this.FnInsertRecommendationLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertRecommendationLinesOperationCompleted(object arg) {
            if ((this.FnInsertRecommendationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRecommendationLinesCompleted(this, new FnInsertRecommendationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitRecommendationToCUE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitRecommendationToCUE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitRecommendationToCUE(string docNo) {
            object[] results = this.Invoke("FnSubmitRecommendationToCUE", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitRecommendationToCUEAsync(string docNo) {
            this.FnSubmitRecommendationToCUEAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitRecommendationToCUEAsync(string docNo, object userState) {
            if ((this.FnSubmitRecommendationToCUEOperationCompleted == null)) {
                this.FnSubmitRecommendationToCUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitRecommendationToCUEOperationCompleted);
            }
            this.InvokeAsync("FnSubmitRecommendationToCUE", new object[] {
                        docNo}, this.FnSubmitRecommendationToCUEOperationCompleted, userState);
        }
        
        private void OnFnSubmitRecommendationToCUEOperationCompleted(object arg) {
            if ((this.FnSubmitRecommendationToCUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitRecommendationToCUECompleted(this, new FnSubmitRecommendationToCUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateCuriculum", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateCuriculum_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCuriculum(string docNo) {
            object[] results = this.Invoke("FnGenerateCuriculum", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCuriculumAsync(string docNo) {
            this.FnGenerateCuriculumAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCuriculumAsync(string docNo, object userState) {
            if ((this.FnGenerateCuriculumOperationCompleted == null)) {
                this.FnGenerateCuriculumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCuriculumOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCuriculum", new object[] {
                        docNo}, this.FnGenerateCuriculumOperationCompleted, userState);
        }
        
        private void OnFnGenerateCuriculumOperationCompleted(object arg) {
            if ((this.FnGenerateCuriculumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCuriculumCompleted(this, new FnGenerateCuriculumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammePhilosopy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammePhilosopy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammePhilosopy(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammePhilosopy", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammePhilosopyAsync(string accNo, string uniCode) {
            this.FnGetProgrammePhilosopyAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammePhilosopyAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammePhilosopyOperationCompleted == null)) {
                this.FnGetProgrammePhilosopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammePhilosopyOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammePhilosopy", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammePhilosopyOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammePhilosopyOperationCompleted(object arg) {
            if ((this.FnGetProgrammePhilosopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammePhilosopyCompleted(this, new FnGetProgrammePhilosopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeAdmissionRequirem" +
            "ents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeAdmissionRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeAdmissionRequirements(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeAdmissionRequirements", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeAdmissionRequirementsAsync(string accNo, string uniCode) {
            this.FnGetProgrammeAdmissionRequirementsAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeAdmissionRequirementsAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeAdmissionRequirementsOperationCompleted == null)) {
                this.FnGetProgrammeAdmissionRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeAdmissionRequirementsOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeAdmissionRequirements", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeAdmissionRequirementsOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeAdmissionRequirementsOperationCompleted(object arg) {
            if ((this.FnGetProgrammeAdmissionRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeAdmissionRequirementsCompleted(this, new FnGetProgrammeAdmissionRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeGoal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeGoal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeGoal(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeGoal", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeGoalAsync(string accNo, string uniCode) {
            this.FnGetProgrammeGoalAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeGoalAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeGoalOperationCompleted == null)) {
                this.FnGetProgrammeGoalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeGoalOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeGoal", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeGoalOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeGoalOperationCompleted(object arg) {
            if ((this.FnGetProgrammeGoalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeGoalCompleted(this, new FnGetProgrammeGoalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeCourseRequirement" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeCourseRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeCourseRequirement(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeCourseRequirement", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeCourseRequirementAsync(string accNo, string uniCode) {
            this.FnGetProgrammeCourseRequirementAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeCourseRequirementAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeCourseRequirementOperationCompleted == null)) {
                this.FnGetProgrammeCourseRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeCourseRequirementOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeCourseRequirement", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeCourseRequirementOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeCourseRequirementOperationCompleted(object arg) {
            if ((this.FnGetProgrammeCourseRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeCourseRequirementCompleted(this, new FnGetProgrammeCourseRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeCourseEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeCourseEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeCourseEvaluation(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeCourseEvaluation", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeCourseEvaluationAsync(string accNo, string uniCode) {
            this.FnGetProgrammeCourseEvaluationAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeCourseEvaluationAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeCourseEvaluationOperationCompleted == null)) {
                this.FnGetProgrammeCourseEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeCourseEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeCourseEvaluation", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeCourseEvaluationOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeCourseEvaluationOperationCompleted(object arg) {
            if ((this.FnGetProgrammeCourseEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeCourseEvaluationCompleted(this, new FnGetProgrammeCourseEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeRequirementCredit" +
            "Transfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeRequirementCreditTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeRequirementCreditTransfer(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeRequirementCreditTransfer", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeRequirementCreditTransferAsync(string accNo, string uniCode) {
            this.FnGetProgrammeRequirementCreditTransferAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeRequirementCreditTransferAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeRequirementCreditTransferOperationCompleted == null)) {
                this.FnGetProgrammeRequirementCreditTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeRequirementCreditTransferOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeRequirementCreditTransfer", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeRequirementCreditTransferOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeRequirementCreditTransferOperationCompleted(object arg) {
            if ((this.FnGetProgrammeRequirementCreditTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeRequirementCreditTransferCompleted(this, new FnGetProgrammeRequirementCreditTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeStudentAssPolicy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeStudentAssPolicy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeStudentAssPolicy(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeStudentAssPolicy", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeStudentAssPolicyAsync(string accNo, string uniCode) {
            this.FnGetProgrammeStudentAssPolicyAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeStudentAssPolicyAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeStudentAssPolicyOperationCompleted == null)) {
                this.FnGetProgrammeStudentAssPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeStudentAssPolicyOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeStudentAssPolicy", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeStudentAssPolicyOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeStudentAssPolicyOperationCompleted(object arg) {
            if ((this.FnGetProgrammeStudentAssPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeStudentAssPolicyCompleted(this, new FnGetProgrammeStudentAssPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeExaminationRequla" +
            "tions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeExaminationRequlations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeExaminationRequlations(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeExaminationRequlations", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeExaminationRequlationsAsync(string accNo, string uniCode) {
            this.FnGetProgrammeExaminationRequlationsAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeExaminationRequlationsAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeExaminationRequlationsOperationCompleted == null)) {
                this.FnGetProgrammeExaminationRequlationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeExaminationRequlationsOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeExaminationRequlations", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeExaminationRequlationsOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeExaminationRequlationsOperationCompleted(object arg) {
            if ((this.FnGetProgrammeExaminationRequlationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeExaminationRequlationsCompleted(this, new FnGetProgrammeExaminationRequlationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeModerationOfExami" +
            "nations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeModerationOfExaminations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeModerationOfExaminations(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeModerationOfExaminations", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeModerationOfExaminationsAsync(string accNo, string uniCode) {
            this.FnGetProgrammeModerationOfExaminationsAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeModerationOfExaminationsAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeModerationOfExaminationsOperationCompleted == null)) {
                this.FnGetProgrammeModerationOfExaminationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeModerationOfExaminationsOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeModerationOfExaminations", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeModerationOfExaminationsOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeModerationOfExaminationsOperationCompleted(object arg) {
            if ((this.FnGetProgrammeModerationOfExaminationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeModerationOfExaminationsCompleted(this, new FnGetProgrammeModerationOfExaminationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeProgramManagement" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeProgramManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeProgramManagement(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeProgramManagement", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeProgramManagementAsync(string accNo, string uniCode) {
            this.FnGetProgrammeProgramManagementAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeProgramManagementAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeProgramManagementOperationCompleted == null)) {
                this.FnGetProgrammeProgramManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeProgramManagementOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeProgramManagement", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeProgramManagementOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeProgramManagementOperationCompleted(object arg) {
            if ((this.FnGetProgrammeProgramManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeProgramManagementCompleted(this, new FnGetProgrammeProgramManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeGraduationRequire" +
            "ments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeGraduationRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeGraduationRequirements(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeGraduationRequirements", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeGraduationRequirementsAsync(string accNo, string uniCode) {
            this.FnGetProgrammeGraduationRequirementsAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeGraduationRequirementsAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeGraduationRequirementsOperationCompleted == null)) {
                this.FnGetProgrammeGraduationRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeGraduationRequirementsOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeGraduationRequirements", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeGraduationRequirementsOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeGraduationRequirementsOperationCompleted(object arg) {
            if ((this.FnGetProgrammeGraduationRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeGraduationRequirementsCompleted(this, new FnGetProgrammeGraduationRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgrammeDescriptionOfThes" +
            "is", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgrammeDescriptionOfThesis_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgrammeDescriptionOfThesis(string accNo, string uniCode) {
            object[] results = this.Invoke("FnGetProgrammeDescriptionOfThesis", new object[] {
                        accNo,
                        uniCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgrammeDescriptionOfThesisAsync(string accNo, string uniCode) {
            this.FnGetProgrammeDescriptionOfThesisAsync(accNo, uniCode, null);
        }
        
        /// <remarks/>
        public void FnGetProgrammeDescriptionOfThesisAsync(string accNo, string uniCode, object userState) {
            if ((this.FnGetProgrammeDescriptionOfThesisOperationCompleted == null)) {
                this.FnGetProgrammeDescriptionOfThesisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgrammeDescriptionOfThesisOperationCompleted);
            }
            this.InvokeAsync("FnGetProgrammeDescriptionOfThesis", new object[] {
                        accNo,
                        uniCode}, this.FnGetProgrammeDescriptionOfThesisOperationCompleted, userState);
        }
        
        private void OnFnGetProgrammeDescriptionOfThesisOperationCompleted(object arg) {
            if ((this.FnGetProgrammeDescriptionOfThesisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgrammeDescriptionOfThesisCompleted(this, new FnGetProgrammeDescriptionOfThesisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetAuditLineDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetAuditLineDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAuditLineDescription(string docNo, string sectionCode) {
            object[] results = this.Invoke("FnGetAuditLineDescription", new object[] {
                        docNo,
                        sectionCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAuditLineDescriptionAsync(string docNo, string sectionCode) {
            this.FnGetAuditLineDescriptionAsync(docNo, sectionCode, null);
        }
        
        /// <remarks/>
        public void FnGetAuditLineDescriptionAsync(string docNo, string sectionCode, object userState) {
            if ((this.FnGetAuditLineDescriptionOperationCompleted == null)) {
                this.FnGetAuditLineDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAuditLineDescriptionOperationCompleted);
            }
            this.InvokeAsync("FnGetAuditLineDescription", new object[] {
                        docNo,
                        sectionCode}, this.FnGetAuditLineDescriptionOperationCompleted, userState);
        }
        
        private void OnFnGetAuditLineDescriptionOperationCompleted(object arg) {
            if ((this.FnGetAuditLineDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAuditLineDescriptionCompleted(this, new FnGetAuditLineDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetAllAuditLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetAllAuditLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAllAuditLines(string docNo) {
            object[] results = this.Invoke("FnGetAllAuditLines", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesAsync(string docNo) {
            this.FnGetAllAuditLinesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesAsync(string docNo, object userState) {
            if ((this.FnGetAllAuditLinesOperationCompleted == null)) {
                this.FnGetAllAuditLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAllAuditLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetAllAuditLines", new object[] {
                        docNo}, this.FnGetAllAuditLinesOperationCompleted, userState);
        }
        
        private void OnFnGetAllAuditLinesOperationCompleted(object arg) {
            if ((this.FnGetAllAuditLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAllAuditLinesCompleted(this, new FnGetAllAuditLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateSAR", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateSAR_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateSAR(string docNo) {
            object[] results = this.Invoke("FnGenerateSAR", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateSARAsync(string docNo) {
            this.FnGenerateSARAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateSARAsync(string docNo, object userState) {
            if ((this.FnGenerateSAROperationCompleted == null)) {
                this.FnGenerateSAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateSAROperationCompleted);
            }
            this.InvokeAsync("FnGenerateSAR", new object[] {
                        docNo}, this.FnGenerateSAROperationCompleted, userState);
        }
        
        private void OnFnGenerateSAROperationCompleted(object arg) {
            if ((this.FnGenerateSARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateSARCompleted(this, new FnGenerateSARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetAllAuditLinesEach", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetAllAuditLinesEach_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAllAuditLinesEach(string docNo, string sectionId) {
            object[] results = this.Invoke("FnGetAllAuditLinesEach", new object[] {
                        docNo,
                        sectionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesEachAsync(string docNo, string sectionId) {
            this.FnGetAllAuditLinesEachAsync(docNo, sectionId, null);
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesEachAsync(string docNo, string sectionId, object userState) {
            if ((this.FnGetAllAuditLinesEachOperationCompleted == null)) {
                this.FnGetAllAuditLinesEachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAllAuditLinesEachOperationCompleted);
            }
            this.InvokeAsync("FnGetAllAuditLinesEach", new object[] {
                        docNo,
                        sectionId}, this.FnGetAllAuditLinesEachOperationCompleted, userState);
        }
        
        private void OnFnGetAllAuditLinesEachOperationCompleted(object arg) {
            if ((this.FnGetAllAuditLinesEachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAllAuditLinesEachCompleted(this, new FnGetAllAuditLinesEachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetAllAuditLinesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetAllAuditLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAllAuditLinesDetails(string docNo, string sectionId, string questionId) {
            object[] results = this.Invoke("FnGetAllAuditLinesDetails", new object[] {
                        docNo,
                        sectionId,
                        questionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesDetailsAsync(string docNo, string sectionId, string questionId) {
            this.FnGetAllAuditLinesDetailsAsync(docNo, sectionId, questionId, null);
        }
        
        /// <remarks/>
        public void FnGetAllAuditLinesDetailsAsync(string docNo, string sectionId, string questionId, object userState) {
            if ((this.FnGetAllAuditLinesDetailsOperationCompleted == null)) {
                this.FnGetAllAuditLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAllAuditLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnGetAllAuditLinesDetails", new object[] {
                        docNo,
                        sectionId,
                        questionId}, this.FnGetAllAuditLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnGetAllAuditLinesDetailsOperationCompleted(object arg) {
            if ((this.FnGetAllAuditLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAllAuditLinesDetailsCompleted(this, new FnGetAllAuditLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSaveAuditOpenEnded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSaveAuditOpenEnded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAuditOpenEnded(string docNo, int lineno, string sectioncode, string questionid, string answer, string filename) {
            object[] results = this.Invoke("FnSaveAuditOpenEnded", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer,
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAuditOpenEndedAsync(string docNo, int lineno, string sectioncode, string questionid, string answer, string filename) {
            this.FnSaveAuditOpenEndedAsync(docNo, lineno, sectioncode, questionid, answer, filename, null);
        }
        
        /// <remarks/>
        public void FnSaveAuditOpenEndedAsync(string docNo, int lineno, string sectioncode, string questionid, string answer, string filename, object userState) {
            if ((this.FnSaveAuditOpenEndedOperationCompleted == null)) {
                this.FnSaveAuditOpenEndedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAuditOpenEndedOperationCompleted);
            }
            this.InvokeAsync("FnSaveAuditOpenEnded", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer,
                        filename}, this.FnSaveAuditOpenEndedOperationCompleted, userState);
        }
        
        private void OnFnSaveAuditOpenEndedOperationCompleted(object arg) {
            if ((this.FnSaveAuditOpenEndedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAuditOpenEndedCompleted(this, new FnSaveAuditOpenEndedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSaveAuditDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSaveAuditDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAuditDate(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            object[] results = this.Invoke("FnSaveAuditDate", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAuditDateAsync(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            this.FnSaveAuditDateAsync(docNo, lineno, sectioncode, questionid, answer, null);
        }
        
        /// <remarks/>
        public void FnSaveAuditDateAsync(string docNo, int lineno, string sectioncode, string questionid, string answer, object userState) {
            if ((this.FnSaveAuditDateOperationCompleted == null)) {
                this.FnSaveAuditDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAuditDateOperationCompleted);
            }
            this.InvokeAsync("FnSaveAuditDate", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer}, this.FnSaveAuditDateOperationCompleted, userState);
        }
        
        private void OnFnSaveAuditDateOperationCompleted(object arg) {
            if ((this.FnSaveAuditDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAuditDateCompleted(this, new FnSaveAuditDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSaveAuditClosedEnded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSaveAuditClosedEnded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAuditClosedEnded(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            object[] results = this.Invoke("FnSaveAuditClosedEnded", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAuditClosedEndedAsync(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            this.FnSaveAuditClosedEndedAsync(docNo, lineno, sectioncode, questionid, answer, null);
        }
        
        /// <remarks/>
        public void FnSaveAuditClosedEndedAsync(string docNo, int lineno, string sectioncode, string questionid, string answer, object userState) {
            if ((this.FnSaveAuditClosedEndedOperationCompleted == null)) {
                this.FnSaveAuditClosedEndedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAuditClosedEndedOperationCompleted);
            }
            this.InvokeAsync("FnSaveAuditClosedEnded", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer}, this.FnSaveAuditClosedEndedOperationCompleted, userState);
        }
        
        private void OnFnSaveAuditClosedEndedOperationCompleted(object arg) {
            if ((this.FnSaveAuditClosedEndedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAuditClosedEndedCompleted(this, new FnSaveAuditClosedEndedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSaveAuditAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSaveAuditAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAuditAttachment(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            object[] results = this.Invoke("FnSaveAuditAttachment", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAuditAttachmentAsync(string docNo, int lineno, string sectioncode, string questionid, string answer) {
            this.FnSaveAuditAttachmentAsync(docNo, lineno, sectioncode, questionid, answer, null);
        }
        
        /// <remarks/>
        public void FnSaveAuditAttachmentAsync(string docNo, int lineno, string sectioncode, string questionid, string answer, object userState) {
            if ((this.FnSaveAuditAttachmentOperationCompleted == null)) {
                this.FnSaveAuditAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAuditAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnSaveAuditAttachment", new object[] {
                        docNo,
                        lineno,
                        sectioncode,
                        questionid,
                        answer}, this.FnSaveAuditAttachmentOperationCompleted, userState);
        }
        
        private void OnFnSaveAuditAttachmentOperationCompleted(object arg) {
            if ((this.FnSaveAuditAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAuditAttachmentCompleted(this, new FnSaveAuditAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgramUnits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgramUnits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgramUnits(string programNo) {
            object[] results = this.Invoke("FnGetProgramUnits", new object[] {
                        programNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgramUnitsAsync(string programNo) {
            this.FnGetProgramUnitsAsync(programNo, null);
        }
        
        /// <remarks/>
        public void FnGetProgramUnitsAsync(string programNo, object userState) {
            if ((this.FnGetProgramUnitsOperationCompleted == null)) {
                this.FnGetProgramUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgramUnitsOperationCompleted);
            }
            this.InvokeAsync("FnGetProgramUnits", new object[] {
                        programNo}, this.FnGetProgramUnitsOperationCompleted, userState);
        }
        
        private void OnFnGetProgramUnitsOperationCompleted(object arg) {
            if ((this.FnGetProgramUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgramUnitsCompleted(this, new FnGetProgramUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProgramUnits2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProgramUnits2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProgramUnits2(string programNo) {
            object[] results = this.Invoke("FnGetProgramUnits2", new object[] {
                        programNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProgramUnits2Async(string programNo) {
            this.FnGetProgramUnits2Async(programNo, null);
        }
        
        /// <remarks/>
        public void FnGetProgramUnits2Async(string programNo, object userState) {
            if ((this.FnGetProgramUnits2OperationCompleted == null)) {
                this.FnGetProgramUnits2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProgramUnits2OperationCompleted);
            }
            this.InvokeAsync("FnGetProgramUnits2", new object[] {
                        programNo}, this.FnGetProgramUnits2OperationCompleted, userState);
        }
        
        private void OnFnGetProgramUnits2OperationCompleted(object arg) {
            if ((this.FnGetProgramUnits2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProgramUnits2Completed(this, new FnGetProgramUnits2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateOverallReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateOverallReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateOverallReport(string docNo) {
            object[] results = this.Invoke("FnGenerateOverallReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateOverallReportAsync(string docNo) {
            this.FnGenerateOverallReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateOverallReportAsync(string docNo, object userState) {
            if ((this.FnGenerateOverallReportOperationCompleted == null)) {
                this.FnGenerateOverallReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateOverallReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateOverallReport", new object[] {
                        docNo}, this.FnGenerateOverallReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateOverallReportOperationCompleted(object arg) {
            if ((this.FnGenerateOverallReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateOverallReportCompleted(this, new FnGenerateOverallReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnCreatePortalUsers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnCreatePortalUsers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatePortalUsers(int entryNo, string custNo, int usertype, string fullname, string email, string mobilephone) {
            object[] results = this.Invoke("FnCreatePortalUsers", new object[] {
                        entryNo,
                        custNo,
                        usertype,
                        fullname,
                        email,
                        mobilephone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatePortalUsersAsync(int entryNo, string custNo, int usertype, string fullname, string email, string mobilephone) {
            this.FnCreatePortalUsersAsync(entryNo, custNo, usertype, fullname, email, mobilephone, null);
        }
        
        /// <remarks/>
        public void FnCreatePortalUsersAsync(int entryNo, string custNo, int usertype, string fullname, string email, string mobilephone, object userState) {
            if ((this.FnCreatePortalUsersOperationCompleted == null)) {
                this.FnCreatePortalUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatePortalUsersOperationCompleted);
            }
            this.InvokeAsync("FnCreatePortalUsers", new object[] {
                        entryNo,
                        custNo,
                        usertype,
                        fullname,
                        email,
                        mobilephone}, this.FnCreatePortalUsersOperationCompleted, userState);
        }
        
        private void OnFnCreatePortalUsersOperationCompleted(object arg) {
            if ((this.FnCreatePortalUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatePortalUsersCompleted(this, new FnCreatePortalUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnActivatePortalUser", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnActivatePortalUser_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnActivatePortalUser(int entryNo, string custNo) {
            object[] results = this.Invoke("FnActivatePortalUser", new object[] {
                        entryNo,
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivatePortalUserAsync(int entryNo, string custNo) {
            this.FnActivatePortalUserAsync(entryNo, custNo, null);
        }
        
        /// <remarks/>
        public void FnActivatePortalUserAsync(int entryNo, string custNo, object userState) {
            if ((this.FnActivatePortalUserOperationCompleted == null)) {
                this.FnActivatePortalUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivatePortalUserOperationCompleted);
            }
            this.InvokeAsync("FnActivatePortalUser", new object[] {
                        entryNo,
                        custNo}, this.FnActivatePortalUserOperationCompleted, userState);
        }
        
        private void OnFnActivatePortalUserOperationCompleted(object arg) {
            if ((this.FnActivatePortalUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivatePortalUserCompleted(this, new FnActivatePortalUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnDeActivatePortalUser", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnDeActivatePortalUser_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeActivatePortalUser(int entryNo, string custNo) {
            object[] results = this.Invoke("FnDeActivatePortalUser", new object[] {
                        entryNo,
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeActivatePortalUserAsync(int entryNo, string custNo) {
            this.FnDeActivatePortalUserAsync(entryNo, custNo, null);
        }
        
        /// <remarks/>
        public void FnDeActivatePortalUserAsync(int entryNo, string custNo, object userState) {
            if ((this.FnDeActivatePortalUserOperationCompleted == null)) {
                this.FnDeActivatePortalUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeActivatePortalUserOperationCompleted);
            }
            this.InvokeAsync("FnDeActivatePortalUser", new object[] {
                        entryNo,
                        custNo}, this.FnDeActivatePortalUserOperationCompleted, userState);
        }
        
        private void OnFnDeActivatePortalUserOperationCompleted(object arg) {
            if ((this.FnDeActivatePortalUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeActivatePortalUserCompleted(this, new FnDeActivatePortalUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendOTP(int entryNo) {
            object[] results = this.Invoke("FnSendOTP", new object[] {
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendOTPAsync(int entryNo) {
            this.FnSendOTPAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void FnSendOTPAsync(int entryNo, object userState) {
            if ((this.FnSendOTPOperationCompleted == null)) {
                this.FnSendOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendOTPOperationCompleted);
            }
            this.InvokeAsync("FnSendOTP", new object[] {
                        entryNo}, this.FnSendOTPOperationCompleted, userState);
        }
        
        private void OnFnSendOTPOperationCompleted(object arg) {
            if ((this.FnSendOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendOTPCompleted(this, new FnSendOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitICTHelpDeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitICTHelpDeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitICTHelpDeskRequest(string docNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime daterequested, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timerequested, string universityNo, string username, string useremail, string category, string description, bool hasAttachment) {
            object[] results = this.Invoke("FnSubmitICTHelpDeskRequest", new object[] {
                        docNo,
                        daterequested,
                        timerequested,
                        universityNo,
                        username,
                        useremail,
                        category,
                        description,
                        hasAttachment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitICTHelpDeskRequestAsync(string docNo, System.DateTime daterequested, System.DateTime timerequested, string universityNo, string username, string useremail, string category, string description, bool hasAttachment) {
            this.FnSubmitICTHelpDeskRequestAsync(docNo, daterequested, timerequested, universityNo, username, useremail, category, description, hasAttachment, null);
        }
        
        /// <remarks/>
        public void FnSubmitICTHelpDeskRequestAsync(string docNo, System.DateTime daterequested, System.DateTime timerequested, string universityNo, string username, string useremail, string category, string description, bool hasAttachment, object userState) {
            if ((this.FnSubmitICTHelpDeskRequestOperationCompleted == null)) {
                this.FnSubmitICTHelpDeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitICTHelpDeskRequestOperationCompleted);
            }
            this.InvokeAsync("FnSubmitICTHelpDeskRequest", new object[] {
                        docNo,
                        daterequested,
                        timerequested,
                        universityNo,
                        username,
                        useremail,
                        category,
                        description,
                        hasAttachment}, this.FnSubmitICTHelpDeskRequestOperationCompleted, userState);
        }
        
        private void OnFnSubmitICTHelpDeskRequestOperationCompleted(object arg) {
            if ((this.FnSubmitICTHelpDeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitICTHelpDeskRequestCompleted(this, new FnSubmitICTHelpDeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendHELPDeskNotificationToCue" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendHELPDeskNotificationToCue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendHELPDeskNotificationToCue(string docNo) {
            object[] results = this.Invoke("FnSendHELPDeskNotificationToCue", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendHELPDeskNotificationToCueAsync(string docNo) {
            this.FnSendHELPDeskNotificationToCueAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSendHELPDeskNotificationToCueAsync(string docNo, object userState) {
            if ((this.FnSendHELPDeskNotificationToCueOperationCompleted == null)) {
                this.FnSendHELPDeskNotificationToCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendHELPDeskNotificationToCueOperationCompleted);
            }
            this.InvokeAsync("FnSendHELPDeskNotificationToCue", new object[] {
                        docNo}, this.FnSendHELPDeskNotificationToCueOperationCompleted, userState);
        }
        
        private void OnFnSendHELPDeskNotificationToCueOperationCompleted(object arg) {
            if ((this.FnSendHELPDeskNotificationToCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendHELPDeskNotificationToCueCompleted(this, new FnSendHELPDeskNotificationToCueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetHelpdeskRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetHelpdeskRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetHelpdeskRequests(string universityCode, string useremail) {
            object[] results = this.Invoke("FnGetHelpdeskRequests", new object[] {
                        universityCode,
                        useremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetHelpdeskRequestsAsync(string universityCode, string useremail) {
            this.FnGetHelpdeskRequestsAsync(universityCode, useremail, null);
        }
        
        /// <remarks/>
        public void FnGetHelpdeskRequestsAsync(string universityCode, string useremail, object userState) {
            if ((this.FnGetHelpdeskRequestsOperationCompleted == null)) {
                this.FnGetHelpdeskRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetHelpdeskRequestsOperationCompleted);
            }
            this.InvokeAsync("FnGetHelpdeskRequests", new object[] {
                        universityCode,
                        useremail}, this.FnGetHelpdeskRequestsOperationCompleted, userState);
        }
        
        private void OnFnGetHelpdeskRequestsOperationCompleted(object arg) {
            if ((this.FnGetHelpdeskRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetHelpdeskRequestsCompleted(this, new FnGetHelpdeskRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetResolvedHelpdeskRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetResolvedHelpdeskRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetResolvedHelpdeskRequests(string universityCode, string useremail) {
            object[] results = this.Invoke("FnGetResolvedHelpdeskRequests", new object[] {
                        universityCode,
                        useremail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetResolvedHelpdeskRequestsAsync(string universityCode, string useremail) {
            this.FnGetResolvedHelpdeskRequestsAsync(universityCode, useremail, null);
        }
        
        /// <remarks/>
        public void FnGetResolvedHelpdeskRequestsAsync(string universityCode, string useremail, object userState) {
            if ((this.FnGetResolvedHelpdeskRequestsOperationCompleted == null)) {
                this.FnGetResolvedHelpdeskRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetResolvedHelpdeskRequestsOperationCompleted);
            }
            this.InvokeAsync("FnGetResolvedHelpdeskRequests", new object[] {
                        universityCode,
                        useremail}, this.FnGetResolvedHelpdeskRequestsOperationCompleted, userState);
        }
        
        private void OnFnGetResolvedHelpdeskRequestsOperationCompleted(object arg) {
            if ((this.FnGetResolvedHelpdeskRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetResolvedHelpdeskRequestsCompleted(this, new FnGetResolvedHelpdeskRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetSARCompletenessLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetSARCompletenessLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSARCompletenessLines(string docNo) {
            object[] results = this.Invoke("FnGetSARCompletenessLines", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSARCompletenessLinesAsync(string docNo) {
            this.FnGetSARCompletenessLinesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGetSARCompletenessLinesAsync(string docNo, object userState) {
            if ((this.FnGetSARCompletenessLinesOperationCompleted == null)) {
                this.FnGetSARCompletenessLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSARCompletenessLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetSARCompletenessLines", new object[] {
                        docNo}, this.FnGetSARCompletenessLinesOperationCompleted, userState);
        }
        
        private void OnFnGetSARCompletenessLinesOperationCompleted(object arg) {
            if ((this.FnGetSARCompletenessLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSARCompletenessLinesCompleted(this, new FnGetSARCompletenessLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateCorrectionFactualErro" +
            "rs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateCorrectionFactualErrors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCorrectionFactualErrors(string docNo) {
            object[] results = this.Invoke("FnGenerateCorrectionFactualErrors", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCorrectionFactualErrorsAsync(string docNo) {
            this.FnGenerateCorrectionFactualErrorsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCorrectionFactualErrorsAsync(string docNo, object userState) {
            if ((this.FnGenerateCorrectionFactualErrorsOperationCompleted == null)) {
                this.FnGenerateCorrectionFactualErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCorrectionFactualErrorsOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCorrectionFactualErrors", new object[] {
                        docNo}, this.FnGenerateCorrectionFactualErrorsOperationCompleted, userState);
        }
        
        private void OnFnGenerateCorrectionFactualErrorsOperationCompleted(object arg) {
            if ((this.FnGenerateCorrectionFactualErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCorrectionFactualErrorsCompleted(this, new FnGenerateCorrectionFactualErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitCorrectionFactualErrors" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitCorrectionFactualErrors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitCorrectionFactualErrors(string docNo) {
            object[] results = this.Invoke("FnSubmitCorrectionFactualErrors", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitCorrectionFactualErrorsAsync(string docNo) {
            this.FnSubmitCorrectionFactualErrorsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitCorrectionFactualErrorsAsync(string docNo, object userState) {
            if ((this.FnSubmitCorrectionFactualErrorsOperationCompleted == null)) {
                this.FnSubmitCorrectionFactualErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitCorrectionFactualErrorsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitCorrectionFactualErrors", new object[] {
                        docNo}, this.FnSubmitCorrectionFactualErrorsOperationCompleted, userState);
        }
        
        private void OnFnSubmitCorrectionFactualErrorsOperationCompleted(object arg) {
            if ((this.FnSubmitCorrectionFactualErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitCorrectionFactualErrorsCompleted(this, new FnSubmitCorrectionFactualErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertRecommendationLinesDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertRecommendationLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRecommendationLinesDetails(string docNo, int lineNo, string feedback, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, int docstatus, int entryNo) {
            object[] results = this.Invoke("FnInsertRecommendationLinesDetails", new object[] {
                        docNo,
                        lineNo,
                        feedback,
                        date,
                        docstatus,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRecommendationLinesDetailsAsync(string docNo, int lineNo, string feedback, System.DateTime date, int docstatus, int entryNo) {
            this.FnInsertRecommendationLinesDetailsAsync(docNo, lineNo, feedback, date, docstatus, entryNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRecommendationLinesDetailsAsync(string docNo, int lineNo, string feedback, System.DateTime date, int docstatus, int entryNo, object userState) {
            if ((this.FnInsertRecommendationLinesDetailsOperationCompleted == null)) {
                this.FnInsertRecommendationLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRecommendationLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertRecommendationLinesDetails", new object[] {
                        docNo,
                        lineNo,
                        feedback,
                        date,
                        docstatus,
                        entryNo}, this.FnInsertRecommendationLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertRecommendationLinesDetailsOperationCompleted(object arg) {
            if ((this.FnInsertRecommendationLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRecommendationLinesDetailsCompleted(this, new FnInsertRecommendationLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetProposalRec", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetProposalRec_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetProposalRec(string docNo, int lineNo) {
            object[] results = this.Invoke("FnGetProposalRec", new object[] {
                        docNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetProposalRecAsync(string docNo, int lineNo) {
            this.FnGetProposalRecAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnGetProposalRecAsync(string docNo, int lineNo, object userState) {
            if ((this.FnGetProposalRecOperationCompleted == null)) {
                this.FnGetProposalRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetProposalRecOperationCompleted);
            }
            this.InvokeAsync("FnGetProposalRec", new object[] {
                        docNo,
                        lineNo}, this.FnGetProposalRecOperationCompleted, userState);
        }
        
        private void OnFnGetProposalRecOperationCompleted(object arg) {
            if ((this.FnGetProposalRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetProposalRecCompleted(this, new FnGetProposalRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnDeleteProposalRec", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnDeleteProposalRec_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteProposalRec(string docNo, int lineNo, int entryNo) {
            object[] results = this.Invoke("FnDeleteProposalRec", new object[] {
                        docNo,
                        lineNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteProposalRecAsync(string docNo, int lineNo, int entryNo) {
            this.FnDeleteProposalRecAsync(docNo, lineNo, entryNo, null);
        }
        
        /// <remarks/>
        public void FnDeleteProposalRecAsync(string docNo, int lineNo, int entryNo, object userState) {
            if ((this.FnDeleteProposalRecOperationCompleted == null)) {
                this.FnDeleteProposalRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteProposalRecOperationCompleted);
            }
            this.InvokeAsync("FnDeleteProposalRec", new object[] {
                        docNo,
                        lineNo,
                        entryNo}, this.FnDeleteProposalRecOperationCompleted, userState);
        }
        
        private void OnFnDeleteProposalRecOperationCompleted(object arg) {
            if ((this.FnDeleteProposalRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteProposalRecCompleted(this, new FnDeleteProposalRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeObjectives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeObjectives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeObjectives(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeObjectives", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeObjectivesAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeObjectivesAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeObjectivesAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeObjectivesOperationCompleted == null)) {
                this.DeleteProgrammeObjectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeObjectivesOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeObjectives", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeObjectivesOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeObjectivesOperationCompleted(object arg) {
            if ((this.DeleteProgrammeObjectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeObjectivesCompleted(this, new DeleteProgrammeObjectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCourseDistributions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCourseDistributions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCourseDistributions(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCourseDistributions", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCourseDistributionsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteCourseDistributionsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCourseDistributionsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCourseDistributionsOperationCompleted == null)) {
                this.DeleteCourseDistributionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseDistributionsOperationCompleted);
            }
            this.InvokeAsync("DeleteCourseDistributions", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteCourseDistributionsOperationCompleted, userState);
        }
        
        private void OnDeleteCourseDistributionsOperationCompleted(object arg) {
            if ((this.DeleteCourseDistributionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseDistributionsCompleted(this, new DeleteCourseDistributionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteContactHours", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteContactHours_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteContactHours(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteContactHours", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContactHoursAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteContactHoursAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteContactHoursAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteContactHoursOperationCompleted == null)) {
                this.DeleteContactHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactHoursOperationCompleted);
            }
            this.InvokeAsync("DeleteContactHours", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteContactHoursOperationCompleted, userState);
        }
        
        private void OnDeleteContactHoursOperationCompleted(object arg) {
            if ((this.DeleteContactHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactHoursCompleted(this, new DeleteContactHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeSpecificationsSt" +
            "rengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeSpecificationsStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeSpecificationsStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeSpecificationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeSpecificationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeSpecificationsStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeSpecificationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeSpecificationsStrengthsOperationCompleted == null)) {
                this.DeleteProgrammeSpecificationsStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeSpecificationsStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeSpecificationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeSpecificationsStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeSpecificationsStrengthsOperationCompleted(object arg) {
            if ((this.DeleteProgrammeSpecificationsStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeSpecificationsStrengthsCompleted(this, new DeleteProgrammeSpecificationsStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeSpecificationsWe" +
            "akness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeSpecificationsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeSpecificationsWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeSpecificationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeSpecificationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeSpecificationsWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeSpecificationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeSpecificationsWeaknessOperationCompleted == null)) {
                this.DeleteProgrammeSpecificationsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeSpecificationsWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeSpecificationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeSpecificationsWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeSpecificationsWeaknessOperationCompleted(object arg) {
            if ((this.DeleteProgrammeSpecificationsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeSpecificationsWeaknessCompleted(this, new DeleteProgrammeSpecificationsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeContentStrengths" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeContentStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeContentStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeContentStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeContentStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeContentStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeContentStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeContentStrengthsOperationCompleted == null)) {
                this.DeleteProgrammeContentStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeContentStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeContentStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeContentStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeContentStrengthsOperationCompleted(object arg) {
            if ((this.DeleteProgrammeContentStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeContentStrengthsCompleted(this, new DeleteProgrammeContentStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeContentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeContentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeContentWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeContentWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeContentWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeContentWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeContentWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeContentWeaknessOperationCompleted == null)) {
                this.DeleteProgrammeContentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeContentWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeContentWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeContentWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeContentWeaknessOperationCompleted(object arg) {
            if ((this.DeleteProgrammeContentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeContentWeaknessCompleted(this, new DeleteProgrammeContentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeOrganizationsStr" +
            "engths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeOrganizationsStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeOrganizationsStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeOrganizationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeOrganizationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeOrganizationsStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeOrganizationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeOrganizationsStrengthsOperationCompleted == null)) {
                this.DeleteProgrammeOrganizationsStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeOrganizationsStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeOrganizationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeOrganizationsStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeOrganizationsStrengthsOperationCompleted(object arg) {
            if ((this.DeleteProgrammeOrganizationsStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeOrganizationsStrengthsCompleted(this, new DeleteProgrammeOrganizationsStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeOrganizationsWea" +
            "kness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeOrganizationsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeOrganizationsWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeOrganizationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeOrganizationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeOrganizationsWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeOrganizationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeOrganizationsWeaknessOperationCompleted == null)) {
                this.DeleteProgrammeOrganizationsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeOrganizationsWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeOrganizationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeOrganizationsWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeOrganizationsWeaknessOperationCompleted(object arg) {
            if ((this.DeleteProgrammeOrganizationsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeOrganizationsWeaknessCompleted(this, new DeleteProgrammeOrganizationsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeInternshipWeakne" +
            "ss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeInternshipWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeInternshipWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeInternshipWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeInternshipWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeInternshipWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeInternshipWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeInternshipWeaknessOperationCompleted == null)) {
                this.DeleteProgrammeInternshipWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeInternshipWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeInternshipWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeInternshipWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeInternshipWeaknessOperationCompleted(object arg) {
            if ((this.DeleteProgrammeInternshipWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeInternshipWeaknessCompleted(this, new DeleteProgrammeInternshipWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeInternshipStreng" +
            "ths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeInternshipStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeInternshipStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeInternshipStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeInternshipStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeInternshipStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeInternshipStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeInternshipStrengthsOperationCompleted == null)) {
                this.DeleteProgrammeInternshipStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeInternshipStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeInternshipStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeInternshipStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeInternshipStrengthsOperationCompleted(object arg) {
            if ((this.DeleteProgrammeInternshipStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeInternshipStrengthsCompleted(this, new DeleteProgrammeInternshipStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeDidecticStrength" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeDidecticStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeDidecticStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeDidecticStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeDidecticStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeDidecticStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeDidecticStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeDidecticStrengthsOperationCompleted == null)) {
                this.DeleteProgrammeDidecticStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeDidecticStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeDidecticStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeDidecticStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeDidecticStrengthsOperationCompleted(object arg) {
            if ((this.DeleteProgrammeDidecticStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeDidecticStrengthsCompleted(this, new DeleteProgrammeDidecticStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeDidecticWeakness" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeDidecticWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeDidecticWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeDidecticWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeDidecticWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeDidecticWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeDidecticWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeDidecticWeaknessOperationCompleted == null)) {
                this.DeleteProgrammeDidecticWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeDidecticWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeDidecticWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeDidecticWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeDidecticWeaknessOperationCompleted(object arg) {
            if ((this.DeleteProgrammeDidecticWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeDidecticWeaknessCompleted(this, new DeleteProgrammeDidecticWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsAssesments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsAssesments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentsAssesments(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentsAssesments", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentsAssesmentsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentsAssesmentsOperationCompleted == null)) {
                this.DeleteStudentsAssesmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsAssesmentsOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsAssesments", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentsAssesmentsOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsAssesmentsOperationCompleted(object arg) {
            if ((this.DeleteStudentsAssesmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsAssesmentsCompleted(this, new DeleteStudentsAssesmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsAssesmentsStrengt" +
            "hs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsAssesmentsStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentsAssesmentsStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentsAssesmentsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentsAssesmentsStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentsAssesmentsStrengthsOperationCompleted == null)) {
                this.DeleteStudentsAssesmentsStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsAssesmentsStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsAssesmentsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentsAssesmentsStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsAssesmentsStrengthsOperationCompleted(object arg) {
            if ((this.DeleteStudentsAssesmentsStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsAssesmentsStrengthsCompleted(this, new DeleteStudentsAssesmentsStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsAssesmentsWeaknes" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsAssesmentsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentsAssesmentsWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentsAssesmentsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentsAssesmentsWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsAssesmentsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentsAssesmentsWeaknessOperationCompleted == null)) {
                this.DeleteStudentsAssesmentsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsAssesmentsWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsAssesmentsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentsAssesmentsWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsAssesmentsWeaknessOperationCompleted(object arg) {
            if ((this.DeleteStudentsAssesmentsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsAssesmentsWeaknessCompleted(this, new DeleteStudentsAssesmentsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgrammeLeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgrammeLeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgrammeLeader(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgrammeLeader", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgrammeLeaderAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProgrammeLeaderAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgrammeLeaderAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProgrammeLeaderOperationCompleted == null)) {
                this.DeleteProgrammeLeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgrammeLeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteProgrammeLeader", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProgrammeLeaderOperationCompleted, userState);
        }
        
        private void OnDeleteProgrammeLeaderOperationCompleted(object arg) {
            if ((this.DeleteProgrammeLeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgrammeLeaderCompleted(this, new DeleteProgrammeLeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteTeachingStaffWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteTeachingStaffWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTeachingStaffWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteTeachingStaffWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTeachingStaffWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteTeachingStaffWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteTeachingStaffWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteTeachingStaffWeaknessOperationCompleted == null)) {
                this.DeleteTeachingStaffWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTeachingStaffWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteTeachingStaffWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteTeachingStaffWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteTeachingStaffWeaknessOperationCompleted(object arg) {
            if ((this.DeleteTeachingStaffWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTeachingStaffWeaknessCompleted(this, new DeleteTeachingStaffWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteTeachingStaffStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteTeachingStaffStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTeachingStaffStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteTeachingStaffStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTeachingStaffStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteTeachingStaffStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteTeachingStaffStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteTeachingStaffStrengthsOperationCompleted == null)) {
                this.DeleteTeachingStaffStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTeachingStaffStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteTeachingStaffStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteTeachingStaffStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteTeachingStaffStrengthsOperationCompleted(object arg) {
            if ((this.DeleteTeachingStaffStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTeachingStaffStrengthsCompleted(this, new DeleteTeachingStaffStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletequalitysupportstaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletequalitysupportstaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletequalitysupportstaff(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletequalitysupportstaff", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletequalitysupportstaffAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletequalitysupportstaffOperationCompleted == null)) {
                this.DeletequalitysupportstaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletequalitysupportstaffOperationCompleted);
            }
            this.InvokeAsync("Deletequalitysupportstaff", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletequalitysupportstaffOperationCompleted, userState);
        }
        
        private void OnDeletequalitysupportstaffOperationCompleted(object arg) {
            if ((this.DeletequalitysupportstaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletequalitysupportstaffCompleted(this, new DeletequalitysupportstaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletequalitysupportstaffstreng" +
            "ths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletequalitysupportstaffstrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletequalitysupportstaffstrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletequalitysupportstaffstrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffstrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletequalitysupportstaffstrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffstrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletequalitysupportstaffstrengthsOperationCompleted == null)) {
                this.DeletequalitysupportstaffstrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletequalitysupportstaffstrengthsOperationCompleted);
            }
            this.InvokeAsync("Deletequalitysupportstaffstrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletequalitysupportstaffstrengthsOperationCompleted, userState);
        }
        
        private void OnDeletequalitysupportstaffstrengthsOperationCompleted(object arg) {
            if ((this.DeletequalitysupportstaffstrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletequalitysupportstaffstrengthsCompleted(this, new DeletequalitysupportstaffstrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletequalitysupportstaffweakne" +
            "ss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletequalitysupportstaffweakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletequalitysupportstaffweakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletequalitysupportstaffweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffweaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletequalitysupportstaffweaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletequalitysupportstaffweaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletequalitysupportstaffweaknessOperationCompleted == null)) {
                this.DeletequalitysupportstaffweaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletequalitysupportstaffweaknessOperationCompleted);
            }
            this.InvokeAsync("Deletequalitysupportstaffweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletequalitysupportstaffweaknessOperationCompleted, userState);
        }
        
        private void OnDeletequalitysupportstaffweaknessOperationCompleted(object arg) {
            if ((this.DeletequalitysupportstaffweaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletequalitysupportstaffweaknessCompleted(this, new DeletequalitysupportstaffweaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentsprofile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentsprofile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentsprofile(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentsprofile", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentsprofileAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentsprofileAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentsprofileAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentsprofileOperationCompleted == null)) {
                this.DeletestudentsprofileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentsprofileOperationCompleted);
            }
            this.InvokeAsync("Deletestudentsprofile", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentsprofileOperationCompleted, userState);
        }
        
        private void OnDeletestudentsprofileOperationCompleted(object arg) {
            if ((this.DeletestudentsprofileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentsprofileCompleted(this, new DeletestudentsprofileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentprofileweakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentprofileweakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentprofileweakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentprofileweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentprofileweaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentprofileweaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentprofileweaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentprofileweaknessOperationCompleted == null)) {
                this.DeletestudentprofileweaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentprofileweaknessOperationCompleted);
            }
            this.InvokeAsync("Deletestudentprofileweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentprofileweaknessOperationCompleted, userState);
        }
        
        private void OnDeletestudentprofileweaknessOperationCompleted(object arg) {
            if ((this.DeletestudentprofileweaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentprofileweaknessCompleted(this, new DeletestudentprofileweaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentprofilestrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentprofilestrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentprofilestrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentprofilestrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentprofilestrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentprofilestrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentprofilestrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentprofilestrengthsOperationCompleted == null)) {
                this.DeletestudentprofilestrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentprofilestrengthsOperationCompleted);
            }
            this.InvokeAsync("Deletestudentprofilestrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentprofilestrengthsOperationCompleted, userState);
        }
        
        private void OnDeletestudentprofilestrengthsOperationCompleted(object arg) {
            if ((this.DeletestudentprofilestrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentprofilestrengthsCompleted(this, new DeletestudentprofilestrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentsupport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentsupport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentsupport(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentsupport", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentsupportAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentsupportAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentsupportAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentsupportOperationCompleted == null)) {
                this.DeletestudentsupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentsupportOperationCompleted);
            }
            this.InvokeAsync("Deletestudentsupport", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentsupportOperationCompleted, userState);
        }
        
        private void OnDeletestudentsupportOperationCompleted(object arg) {
            if ((this.DeletestudentsupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentsupportCompleted(this, new DeletestudentsupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentsupportstrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentsupportstrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentsupportstrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentsupportstrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentsupportstrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentsupportstrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentsupportstrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentsupportstrengthsOperationCompleted == null)) {
                this.DeletestudentsupportstrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentsupportstrengthsOperationCompleted);
            }
            this.InvokeAsync("Deletestudentsupportstrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentsupportstrengthsOperationCompleted, userState);
        }
        
        private void OnDeletestudentsupportstrengthsOperationCompleted(object arg) {
            if ((this.DeletestudentsupportstrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentsupportstrengthsCompleted(this, new DeletestudentsupportstrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletestudentsupportweakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletestudentsupportweakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletestudentsupportweakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("Deletestudentsupportweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestudentsupportweaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeletestudentsupportweaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeletestudentsupportweaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeletestudentsupportweaknessOperationCompleted == null)) {
                this.DeletestudentsupportweaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestudentsupportweaknessOperationCompleted);
            }
            this.InvokeAsync("Deletestudentsupportweakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeletestudentsupportweaknessOperationCompleted, userState);
        }
        
        private void OnDeletestudentsupportweaknessOperationCompleted(object arg) {
            if ((this.DeletestudentsupportweaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestudentsupportweaknessCompleted(this, new DeletestudentsupportweaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteTeachingMaterials", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteTeachingMaterials_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTeachingMaterials(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteTeachingMaterials", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTeachingMaterialsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteTeachingMaterialsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteTeachingMaterialsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteTeachingMaterialsOperationCompleted == null)) {
                this.DeleteTeachingMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTeachingMaterialsOperationCompleted);
            }
            this.InvokeAsync("DeleteTeachingMaterials", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteTeachingMaterialsOperationCompleted, userState);
        }
        
        private void OnDeleteTeachingMaterialsOperationCompleted(object arg) {
            if ((this.DeleteTeachingMaterialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTeachingMaterialsCompleted(this, new DeleteTeachingMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFacilitiesStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFacilitiesStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFacilitiesStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteFacilitiesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFacilitiesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteFacilitiesStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFacilitiesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteFacilitiesStrengthsOperationCompleted == null)) {
                this.DeleteFacilitiesStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFacilitiesStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteFacilitiesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteFacilitiesStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteFacilitiesStrengthsOperationCompleted(object arg) {
            if ((this.DeleteFacilitiesStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFacilitiesStrengthsCompleted(this, new DeleteFacilitiesStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFacilitiesStWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFacilitiesStWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFacilitiesStWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteFacilitiesStWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFacilitiesStWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteFacilitiesStWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFacilitiesStWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteFacilitiesStWeaknessOperationCompleted == null)) {
                this.DeleteFacilitiesStWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFacilitiesStWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteFacilitiesStWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteFacilitiesStWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteFacilitiesStWeaknessOperationCompleted(object arg) {
            if ((this.DeleteFacilitiesStWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFacilitiesStWeaknessCompleted(this, new DeleteFacilitiesStWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsEvaluationsStreng" +
            "ths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsEvaluationsStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentsEvaluationsStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentsEvaluationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsEvaluationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentsEvaluationsStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsEvaluationsStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentsEvaluationsStrengthsOperationCompleted == null)) {
                this.DeleteStudentsEvaluationsStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsEvaluationsStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsEvaluationsStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentsEvaluationsStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsEvaluationsStrengthsOperationCompleted(object arg) {
            if ((this.DeleteStudentsEvaluationsStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsEvaluationsStrengthsCompleted(this, new DeleteStudentsEvaluationsStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsEvaluationsWeakne" +
            "ss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsEvaluationsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentsEvaluationsWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentsEvaluationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsEvaluationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentsEvaluationsWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsEvaluationsWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentsEvaluationsWeaknessOperationCompleted == null)) {
                this.DeleteStudentsEvaluationsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsEvaluationsWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsEvaluationsWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentsEvaluationsWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsEvaluationsWeaknessOperationCompleted(object arg) {
            if ((this.DeleteStudentsEvaluationsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsEvaluationsWeaknessCompleted(this, new DeleteStudentsEvaluationsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCurriculumnDesignWeakness" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCurriculumnDesignWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCurriculumnDesignWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCurriculumnDesignWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteCurriculumnDesignWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCurriculumnDesignWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCurriculumnDesignWeaknessOperationCompleted == null)) {
                this.DeleteCurriculumnDesignWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCurriculumnDesignWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteCurriculumnDesignWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteCurriculumnDesignWeaknessOperationCompleted(object arg) {
            if ((this.DeleteCurriculumnDesignWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCurriculumnDesignWeaknessCompleted(this, new DeleteCurriculumnDesignWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCurriculumnDesignStrength" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCurriculumnDesignStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCurriculumnDesignStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCurriculumnDesignStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCurriculumnDesignStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteCurriculumnDesignStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCurriculumnDesignStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCurriculumnDesignStrengthsOperationCompleted == null)) {
                this.DeleteCurriculumnDesignStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCurriculumnDesignStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteCurriculumnDesignStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteCurriculumnDesignStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteCurriculumnDesignStrengthsOperationCompleted(object arg) {
            if ((this.DeleteCurriculumnDesignStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCurriculumnDesignStrengthsCompleted(this, new DeleteCurriculumnDesignStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentDevelopmentActivit" +
            "iesStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentDevelopmentActivitiesStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentDevelopmentActivitiesStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentDevelopmentActivitiesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentDevelopmentActivitiesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentDevelopmentActivitiesStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentDevelopmentActivitiesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentDevelopmentActivitiesStrengthsOperationCompleted == null)) {
                this.DeleteStudentDevelopmentActivitiesStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentDevelopmentActivitiesStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentDevelopmentActivitiesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentDevelopmentActivitiesStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteStudentDevelopmentActivitiesStrengthsOperationCompleted(object arg) {
            if ((this.DeleteStudentDevelopmentActivitiesStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentDevelopmentActivitiesStrengthsCompleted(this, new DeleteStudentDevelopmentActivitiesStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentDevelopmentActivit" +
            "iesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentDevelopmentActivitiesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStudentDevelopmentActivitiesWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStudentDevelopmentActivitiesWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentDevelopmentActivitiesWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStudentDevelopmentActivitiesWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentDevelopmentActivitiesWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStudentDevelopmentActivitiesWeaknessOperationCompleted == null)) {
                this.DeleteStudentDevelopmentActivitiesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentDevelopmentActivitiesWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentDevelopmentActivitiesWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStudentDevelopmentActivitiesWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteStudentDevelopmentActivitiesWeaknessOperationCompleted(object arg) {
            if ((this.DeleteStudentDevelopmentActivitiesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentDevelopmentActivitiesWeaknessCompleted(this, new DeleteStudentDevelopmentActivitiesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBenchmarkingStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBenchmarkingStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBenchmarkingStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteBenchmarkingStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBenchmarkingStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteBenchmarkingStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteBenchmarkingStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteBenchmarkingStrengthsOperationCompleted == null)) {
                this.DeleteBenchmarkingStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBenchmarkingStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteBenchmarkingStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteBenchmarkingStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteBenchmarkingStrengthsOperationCompleted(object arg) {
            if ((this.DeleteBenchmarkingStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBenchmarkingStrengthsCompleted(this, new DeleteBenchmarkingStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBenchmarkingWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBenchmarkingWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBenchmarkingWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteBenchmarkingWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBenchmarkingWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteBenchmarkingWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteBenchmarkingWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteBenchmarkingWeaknessOperationCompleted == null)) {
                this.DeleteBenchmarkingWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBenchmarkingWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteBenchmarkingWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteBenchmarkingWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteBenchmarkingWeaknessOperationCompleted(object arg) {
            if ((this.DeleteBenchmarkingWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBenchmarkingWeaknessCompleted(this, new DeleteBenchmarkingWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGraduatesStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGraduatesStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGraduatesStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGraduatesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGraduatesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteGraduatesStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGraduatesStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGraduatesStrengthsOperationCompleted == null)) {
                this.DeleteGraduatesStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGraduatesStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteGraduatesStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteGraduatesStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteGraduatesStrengthsOperationCompleted(object arg) {
            if ((this.DeleteGraduatesStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGraduatesStrengthsCompleted(this, new DeleteGraduatesStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGraduatesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGraduatesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGraduatesWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGraduatesWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteGraduatesWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGraduatesWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGraduatesWeaknessOperationCompleted == null)) {
                this.DeleteGraduatesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGraduatesWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteGraduatesWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteGraduatesWeaknessOperationCompleted(object arg) {
            if ((this.DeleteGraduatesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGraduatesWeaknessCompleted(this, new DeleteGraduatesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStakeholdersSatisfactionS" +
            "trengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStakeholdersSatisfactionStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStakeholdersSatisfactionStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStakeholdersSatisfactionStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStakeholdersSatisfactionStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStakeholdersSatisfactionStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStakeholdersSatisfactionStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStakeholdersSatisfactionStrengthsOperationCompleted == null)) {
                this.DeleteStakeholdersSatisfactionStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStakeholdersSatisfactionStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteStakeholdersSatisfactionStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStakeholdersSatisfactionStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteStakeholdersSatisfactionStrengthsOperationCompleted(object arg) {
            if ((this.DeleteStakeholdersSatisfactionStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStakeholdersSatisfactionStrengthsCompleted(this, new DeleteStakeholdersSatisfactionStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStakeholdersSatisfactionW" +
            "eakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStakeholdersSatisfactionWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStakeholdersSatisfactionWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStakeholdersSatisfactionWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStakeholdersSatisfactionWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStakeholdersSatisfactionWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStakeholdersSatisfactionWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStakeholdersSatisfactionWeaknessOperationCompleted == null)) {
                this.DeleteStakeholdersSatisfactionWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStakeholdersSatisfactionWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteStakeholdersSatisfactionWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStakeholdersSatisfactionWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteStakeholdersSatisfactionWeaknessOperationCompleted(object arg) {
            if ((this.DeleteStakeholdersSatisfactionWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStakeholdersSatisfactionWeaknessCompleted(this, new DeleteStakeholdersSatisfactionWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DataClerkEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DataClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataClerkEmailRequestAsync(string usercode, string password) {
            this.DataClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataClerkEmailRequestOperationCompleted == null)) {
                this.DataClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.DataClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataClerkEmailRequestOperationCompleted(object arg) {
            if ((this.DataClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataClerkEmailRequestCompleted(this, new DataClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DataCancelClerkEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DataCancelClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataCancelClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataCancelClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataCancelClerkEmailRequestAsync(string usercode, string password) {
            this.DataCancelClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataCancelClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataCancelClerkEmailRequestOperationCompleted == null)) {
                this.DataCancelClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataCancelClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataCancelClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.DataCancelClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataCancelClerkEmailRequestOperationCompleted(object arg) {
            if ((this.DataCancelClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataCancelClerkEmailRequestCompleted(this, new DataCancelClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DvcApprovalEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DvcApprovalEmailRequestOperationCompleted == null)) {
                this.DvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DvcApprovalEmailRequestCompleted(this, new DvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VcApprovalEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("VcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VcApprovalEmailRequestAsync(string usercode, string password) {
            this.VcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void VcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.VcApprovalEmailRequestOperationCompleted == null)) {
                this.VcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("VcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.VcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnVcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.VcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VcApprovalEmailRequestCompleted(this, new VcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DataclerkfinalvcApprovalEmailRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DataclerkfinalvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataclerkfinalvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataclerkfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataclerkfinalvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DataclerkfinalvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataclerkfinalvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataclerkfinalvcApprovalEmailRequestOperationCompleted == null)) {
                this.DataclerkfinalvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataclerkfinalvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataclerkfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DataclerkfinalvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataclerkfinalvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DataclerkfinalvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataclerkfinalvcApprovalEmailRequestCompleted(this, new DataclerkfinalvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DvcfinalvcApprovalEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DvcfinalvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DvcfinalvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DvcfinalvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DvcfinalvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DvcfinalvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DvcfinalvcApprovalEmailRequestOperationCompleted == null)) {
                this.DvcfinalvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDvcfinalvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DvcfinalvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDvcfinalvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DvcfinalvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DvcfinalvcApprovalEmailRequestCompleted(this, new DvcfinalvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AccountCreationEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AccountCreationEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccountCreationEmailRequest(string emailaddress, string idnumber) {
            object[] results = this.Invoke("AccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountCreationEmailRequestAsync(string emailaddress, string idnumber) {
            this.AccountCreationEmailRequestAsync(emailaddress, idnumber, null);
        }
        
        /// <remarks/>
        public void AccountCreationEmailRequestAsync(string emailaddress, string idnumber, object userState) {
            if ((this.AccountCreationEmailRequestOperationCompleted == null)) {
                this.AccountCreationEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountCreationEmailRequestOperationCompleted);
            }
            this.InvokeAsync("AccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber}, this.AccountCreationEmailRequestOperationCompleted, userState);
        }
        
        private void OnAccountCreationEmailRequestOperationCompleted(object arg) {
            if ((this.AccountCreationEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountCreationEmailRequestCompleted(this, new AccountCreationEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnUseraccountCreationEmailReque" +
            "st", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnUseraccountCreationEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUseraccountCreationEmailRequest(string emailaddress, string idnumber) {
            object[] results = this.Invoke("FnUseraccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUseraccountCreationEmailRequestAsync(string emailaddress, string idnumber) {
            this.FnUseraccountCreationEmailRequestAsync(emailaddress, idnumber, null);
        }
        
        /// <remarks/>
        public void FnUseraccountCreationEmailRequestAsync(string emailaddress, string idnumber, object userState) {
            if ((this.FnUseraccountCreationEmailRequestOperationCompleted == null)) {
                this.FnUseraccountCreationEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUseraccountCreationEmailRequestOperationCompleted);
            }
            this.InvokeAsync("FnUseraccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber}, this.FnUseraccountCreationEmailRequestOperationCompleted, userState);
        }
        
        private void OnFnUseraccountCreationEmailRequestOperationCompleted(object arg) {
            if ((this.FnUseraccountCreationEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUseraccountCreationEmailRequestCompleted(this, new FnUseraccountCreationEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnUserHelpEmaiRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnUserHelpEmaiRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUserHelpEmaiRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnUserHelpEmaiRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnUserHelpEmaiRequestOperationCompleted == null)) {
                this.FnUserHelpEmaiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUserHelpEmaiRequestOperationCompleted);
            }
            this.InvokeAsync("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnUserHelpEmaiRequestOperationCompleted, userState);
        }
        
        private void OnFnUserHelpEmaiRequestOperationCompleted(object arg) {
            if ((this.FnUserHelpEmaiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUserHelpEmaiRequestCompleted(this, new FnUserHelpEmaiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApprovalStatusDataCollection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApprovalStatusDataCollection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApprovalStatusDataCollection(string usercode, string password) {
            object[] results = this.Invoke("ApprovalStatusDataCollection", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovalStatusDataCollectionAsync(string usercode, string password) {
            this.ApprovalStatusDataCollectionAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void ApprovalStatusDataCollectionAsync(string usercode, string password, object userState) {
            if ((this.ApprovalStatusDataCollectionOperationCompleted == null)) {
                this.ApprovalStatusDataCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovalStatusDataCollectionOperationCompleted);
            }
            this.InvokeAsync("ApprovalStatusDataCollection", new object[] {
                        usercode,
                        password}, this.ApprovalStatusDataCollectionOperationCompleted, userState);
        }
        
        private void OnApprovalStatusDataCollectionOperationCompleted(object arg) {
            if ((this.ApprovalStatusDataCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovalStatusDataCollectionCompleted(this, new ApprovalStatusDataCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Fnuseraccountcreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Fnuseraccountcreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnuseraccountcreation(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, int userrole, string universityname) {
            object[] results = this.Invoke("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country,
                        userrole,
                        universityname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, int userrole, string universityname) {
            this.FnuseraccountcreationAsync(idnumber, firstname, middlename, lastname, phonenumber, emailaddress, address, postcodes, city, country, userrole, universityname, null);
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, int userrole, string universityname, object userState) {
            if ((this.FnuseraccountcreationOperationCompleted == null)) {
                this.FnuseraccountcreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnuseraccountcreationOperationCompleted);
            }
            this.InvokeAsync("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country,
                        userrole,
                        universityname}, this.FnuseraccountcreationOperationCompleted, userState);
        }
        
        private void OnFnuseraccountcreationOperationCompleted(object arg) {
            if ((this.FnuseraccountcreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnuseraccountcreationCompleted(this, new FnuseraccountcreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress, string originalpass, string newpass, string confirmpass) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass) {
            this.FnResetPasswordAsync(emailaddress, originalpass, newpass, confirmpass, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateDataCollectionDatasets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateDataCollectionDatasets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateDataCollectionDatasets(string universitycode, string noticenumber, string usercode, string password) {
            object[] results = this.Invoke("ValidateDataCollectionDatasets", new object[] {
                        universitycode,
                        noticenumber,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDataCollectionDatasetsAsync(string universitycode, string noticenumber, string usercode, string password) {
            this.ValidateDataCollectionDatasetsAsync(universitycode, noticenumber, usercode, password, null);
        }
        
        /// <remarks/>
        public void ValidateDataCollectionDatasetsAsync(string universitycode, string noticenumber, string usercode, string password, object userState) {
            if ((this.ValidateDataCollectionDatasetsOperationCompleted == null)) {
                this.ValidateDataCollectionDatasetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDataCollectionDatasetsOperationCompleted);
            }
            this.InvokeAsync("ValidateDataCollectionDatasets", new object[] {
                        universitycode,
                        noticenumber,
                        usercode,
                        password}, this.ValidateDataCollectionDatasetsOperationCompleted, userState);
        }
        
        private void OnValidateDataCollectionDatasetsOperationCompleted(object arg) {
            if ((this.ValidateDataCollectionDatasetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDataCollectionDatasetsCompleted(this, new ValidateDataCollectionDatasetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateAmmendmentsDatasets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateAmmendmentsDatasets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateAmmendmentsDatasets(string universitycode, string amendmentnumber, string usercode, string password) {
            object[] results = this.Invoke("ValidateAmmendmentsDatasets", new object[] {
                        universitycode,
                        amendmentnumber,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAmmendmentsDatasetsAsync(string universitycode, string amendmentnumber, string usercode, string password) {
            this.ValidateAmmendmentsDatasetsAsync(universitycode, amendmentnumber, usercode, password, null);
        }
        
        /// <remarks/>
        public void ValidateAmmendmentsDatasetsAsync(string universitycode, string amendmentnumber, string usercode, string password, object userState) {
            if ((this.ValidateAmmendmentsDatasetsOperationCompleted == null)) {
                this.ValidateAmmendmentsDatasetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAmmendmentsDatasetsOperationCompleted);
            }
            this.InvokeAsync("ValidateAmmendmentsDatasets", new object[] {
                        universitycode,
                        amendmentnumber,
                        usercode,
                        password}, this.ValidateAmmendmentsDatasetsOperationCompleted, userState);
        }
        
        private void OnValidateAmmendmentsDatasetsOperationCompleted(object arg) {
            if ((this.ValidateAmmendmentsDatasetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAmmendmentsDatasetsCompleted(this, new ValidateAmmendmentsDatasetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAmendmentsRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAmendmentsRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAmendmentsRequest(string amendmentdescription, string noticenumber, string usercode, string password) {
            object[] results = this.Invoke("AddAmendmentsRequest", new object[] {
                        amendmentdescription,
                        noticenumber,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAmendmentsRequestAsync(string amendmentdescription, string noticenumber, string usercode, string password) {
            this.AddAmendmentsRequestAsync(amendmentdescription, noticenumber, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddAmendmentsRequestAsync(string amendmentdescription, string noticenumber, string usercode, string password, object userState) {
            if ((this.AddAmendmentsRequestOperationCompleted == null)) {
                this.AddAmendmentsRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAmendmentsRequestOperationCompleted);
            }
            this.InvokeAsync("AddAmendmentsRequest", new object[] {
                        amendmentdescription,
                        noticenumber,
                        usercode,
                        password}, this.AddAmendmentsRequestOperationCompleted, userState);
        }
        
        private void OnAddAmendmentsRequestOperationCompleted(object arg) {
            if ((this.AddAmendmentsRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAmendmentsRequestCompleted(this, new AddAmendmentsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAmendmentsRequestDatasetCode" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAmendmentsRequestDatasetCodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAmendmentsRequestDatasetCodes(string datasetcode, string usercode, string password) {
            object[] results = this.Invoke("AddAmendmentsRequestDatasetCodes", new object[] {
                        datasetcode,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAmendmentsRequestDatasetCodesAsync(string datasetcode, string usercode, string password) {
            this.AddAmendmentsRequestDatasetCodesAsync(datasetcode, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddAmendmentsRequestDatasetCodesAsync(string datasetcode, string usercode, string password, object userState) {
            if ((this.AddAmendmentsRequestDatasetCodesOperationCompleted == null)) {
                this.AddAmendmentsRequestDatasetCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAmendmentsRequestDatasetCodesOperationCompleted);
            }
            this.InvokeAsync("AddAmendmentsRequestDatasetCodes", new object[] {
                        datasetcode,
                        usercode,
                        password}, this.AddAmendmentsRequestDatasetCodesOperationCompleted, userState);
        }
        
        private void OnAddAmendmentsRequestDatasetCodesOperationCompleted(object arg) {
            if ((this.AddAmendmentsRequestDatasetCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAmendmentsRequestDatasetCodesCompleted(this, new AddAmendmentsRequestDatasetCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PortalResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PortalResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PortalResetPassword(string emailaddress) {
            object[] results = this.Invoke("PortalResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress) {
            this.PortalResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress, object userState) {
            if ((this.PortalResetPasswordOperationCompleted == null)) {
                this.PortalResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPortalResetPasswordOperationCompleted);
            }
            this.InvokeAsync("PortalResetPassword", new object[] {
                        emailaddress}, this.PortalResetPasswordOperationCompleted, userState);
        }
        
        private void OnPortalResetPasswordOperationCompleted(object arg) {
            if ((this.PortalResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PortalResetPasswordCompleted(this, new PortalResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversityDomain", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversityDomain_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversityDomain(string universityCode) {
            object[] results = this.Invoke("FngetUniversityDomain", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversityDomainAsync(string universityCode) {
            this.FngetUniversityDomainAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FngetUniversityDomainAsync(string universityCode, object userState) {
            if ((this.FngetUniversityDomainOperationCompleted == null)) {
                this.FngetUniversityDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversityDomainOperationCompleted);
            }
            this.InvokeAsync("FngetUniversityDomain", new object[] {
                        universityCode}, this.FngetUniversityDomainOperationCompleted, userState);
        }
        
        private void OnFngetUniversityDomainOperationCompleted(object arg) {
            if ((this.FngetUniversityDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversityDomainCompleted(this, new FngetUniversityDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAddAmendmentDatasetCodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAddAmendmentDatasetCodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddAmendmentDatasetCodes(string datasetcodes, string username, string password) {
            object[] results = this.Invoke("FnAddAmendmentDatasetCodes", new object[] {
                        datasetcodes,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddAmendmentDatasetCodesAsync(string datasetcodes, string username, string password) {
            this.FnAddAmendmentDatasetCodesAsync(datasetcodes, username, password, null);
        }
        
        /// <remarks/>
        public void FnAddAmendmentDatasetCodesAsync(string datasetcodes, string username, string password, object userState) {
            if ((this.FnAddAmendmentDatasetCodesOperationCompleted == null)) {
                this.FnAddAmendmentDatasetCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddAmendmentDatasetCodesOperationCompleted);
            }
            this.InvokeAsync("FnAddAmendmentDatasetCodes", new object[] {
                        datasetcodes,
                        username,
                        password}, this.FnAddAmendmentDatasetCodesOperationCompleted, userState);
        }
        
        private void OnFnAddAmendmentDatasetCodesOperationCompleted(object arg) {
            if ((this.FnAddAmendmentDatasetCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddAmendmentDatasetCodesCompleted(this, new FnAddAmendmentDatasetCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateProgrammeFeedbackVouc" +
            "her", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateProgrammeFeedbackVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeFeedbackVoucher(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeFeedbackVoucherAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeFeedbackVoucherOperationCompleted == null)) {
                this.FnGenerateProgrammeFeedbackVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeFeedbackVoucherOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeFeedbackVoucherOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeFeedbackVoucherOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeFeedbackVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeFeedbackVoucherCompleted(this, new FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateProgrammeEvaluationTo" +
            "ool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateProgrammeEvaluationToool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeEvaluationToool(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeEvaluationTooolAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeEvaluationTooolOperationCompleted == null)) {
                this.FnGenerateProgrammeEvaluationTooolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeEvaluationTooolOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeEvaluationTooolOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeEvaluationTooolOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeEvaluationTooolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeEvaluationTooolCompleted(this, new FnGenerateProgrammeEvaluationTooolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnNewWorkOrderEmailAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnNewWorkOrderEmailAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewWorkOrderEmailAlert(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnNewWorkOrderEmailAlert", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewWorkOrderEmailAlertAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnNewWorkOrderEmailAlertAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnNewWorkOrderEmailAlertAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnNewWorkOrderEmailAlertOperationCompleted == null)) {
                this.FnNewWorkOrderEmailAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewWorkOrderEmailAlertOperationCompleted);
            }
            this.InvokeAsync("FnNewWorkOrderEmailAlert", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnNewWorkOrderEmailAlertOperationCompleted, userState);
        }
        
        private void OnFnNewWorkOrderEmailAlertOperationCompleted(object arg) {
            if ((this.FnNewWorkOrderEmailAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewWorkOrderEmailAlertCompleted(this, new FnNewWorkOrderEmailAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAccreditationPaymentsAlerts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAccreditationPaymentsAlerts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAccreditationPaymentsAlerts(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnAccreditationPaymentsAlerts", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAccreditationPaymentsAlertsAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnAccreditationPaymentsAlertsAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnAccreditationPaymentsAlertsAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnAccreditationPaymentsAlertsOperationCompleted == null)) {
                this.FnAccreditationPaymentsAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAccreditationPaymentsAlertsOperationCompleted);
            }
            this.InvokeAsync("FnAccreditationPaymentsAlerts", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnAccreditationPaymentsAlertsOperationCompleted, userState);
        }
        
        private void OnFnAccreditationPaymentsAlertsOperationCompleted(object arg) {
            if ((this.FnAccreditationPaymentsAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAccreditationPaymentsAlertsCompleted(this, new FnAccreditationPaymentsAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnAccreditationAlertsToUniversi" +
            "ty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnAccreditationAlertsToUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAccreditationAlertsToUniversity(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnAccreditationAlertsToUniversity", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAccreditationAlertsToUniversityAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnAccreditationAlertsToUniversityAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnAccreditationAlertsToUniversityAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnAccreditationAlertsToUniversityOperationCompleted == null)) {
                this.FnAccreditationAlertsToUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAccreditationAlertsToUniversityOperationCompleted);
            }
            this.InvokeAsync("FnAccreditationAlertsToUniversity", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnAccreditationAlertsToUniversityOperationCompleted, userState);
        }
        
        private void OnFnAccreditationAlertsToUniversityOperationCompleted(object arg) {
            if ((this.FnAccreditationAlertsToUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAccreditationAlertsToUniversityCompleted(this, new FnAccreditationAlertsToUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateExitReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateExitReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateExitReport(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university) {
            this.FnGenerateExitReportAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateExitReportOperationCompleted == null)) {
                this.FnGenerateExitReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateExitReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateExitReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateExitReportOperationCompleted(object arg) {
            if ((this.FnGenerateExitReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateExitReportCompleted(this, new FnGenerateExitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitUniversityAccreditation" +
            "Feedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitUniversityAccreditationFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitUniversityAccreditationFeedback(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback) {
            object[] results = this.Invoke("FnSubmitUniversityAccreditationFeedback", new object[] {
                        accreditationNumber,
                        voucherNumber,
                        component,
                        subcomponent,
                        universityFeedback});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitUniversityAccreditationFeedbackAsync(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback) {
            this.FnSubmitUniversityAccreditationFeedbackAsync(accreditationNumber, voucherNumber, component, subcomponent, universityFeedback, null);
        }
        
        /// <remarks/>
        public void FnSubmitUniversityAccreditationFeedbackAsync(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback, object userState) {
            if ((this.FnSubmitUniversityAccreditationFeedbackOperationCompleted == null)) {
                this.FnSubmitUniversityAccreditationFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitUniversityAccreditationFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnSubmitUniversityAccreditationFeedback", new object[] {
                        accreditationNumber,
                        voucherNumber,
                        component,
                        subcomponent,
                        universityFeedback}, this.FnSubmitUniversityAccreditationFeedbackOperationCompleted, userState);
        }
        
        private void OnFnSubmitUniversityAccreditationFeedbackOperationCompleted(object arg) {
            if ((this.FnSubmitUniversityAccreditationFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitUniversityAccreditationFeedbackCompleted(this, new FnSubmitUniversityAccreditationFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSubmitInstitutionAccreditatio" +
            "n", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSubmitInstitutionAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitInstitutionAccreditation(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password) {
            object[] results = this.Invoke("FnSubmitInstitutionAccreditation", new object[] {
                        universityCode,
                        instAccreditationNo,
                        progAccreditationNo,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitInstitutionAccreditationAsync(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password) {
            this.FnSubmitInstitutionAccreditationAsync(universityCode, instAccreditationNo, progAccreditationNo, username, password, null);
        }
        
        /// <remarks/>
        public void FnSubmitInstitutionAccreditationAsync(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password, object userState) {
            if ((this.FnSubmitInstitutionAccreditationOperationCompleted == null)) {
                this.FnSubmitInstitutionAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitInstitutionAccreditationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitInstitutionAccreditation", new object[] {
                        universityCode,
                        instAccreditationNo,
                        progAccreditationNo,
                        username,
                        password}, this.FnSubmitInstitutionAccreditationOperationCompleted, userState);
        }
        
        private void OnFnSubmitInstitutionAccreditationOperationCompleted(object arg) {
            if ((this.FnSubmitInstitutionAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitInstitutionAccreditationCompleted(this, new FnSubmitInstitutionAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnUniversityFeedbackCommentsEma" +
            "ilAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnUniversityFeedbackCommentsEmailAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUniversityFeedbackCommentsEmailAlert(string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnUniversityFeedbackCommentsEmailAlert", new object[] {
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUniversityFeedbackCommentsEmailAlertAsync(string programmeAccreditationNumber) {
            this.FnUniversityFeedbackCommentsEmailAlertAsync(programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnUniversityFeedbackCommentsEmailAlertAsync(string programmeAccreditationNumber, object userState) {
            if ((this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted == null)) {
                this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUniversityFeedbackCommentsEmailAlertOperationCompleted);
            }
            this.InvokeAsync("FnUniversityFeedbackCommentsEmailAlert", new object[] {
                        programmeAccreditationNumber}, this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted, userState);
        }
        
        private void OnFnUniversityFeedbackCommentsEmailAlertOperationCompleted(object arg) {
            if ((this.FnUniversityFeedbackCommentsEmailAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUniversityFeedbackCommentsEmailAlertCompleted(this, new FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalStudentsCompleted(this, new FnGetUniversityTotalStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalMaleStudent" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalMaleStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalMaleStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalMaleStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalMaleStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalMaleStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalMaleStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalMaleStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalMaleStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalMaleStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalMaleStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalMaleStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalMaleStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalMaleStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalMaleStudentsCompleted(this, new FnGetUniversityTotalMaleStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalFemaleStude" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalFemaleStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalFemaleStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalFemaleStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFemaleStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalFemaleStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFemaleStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalFemaleStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalFemaleStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalFemaleStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalFemaleStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalFemaleStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalFemaleStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalFemaleStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalFemaleStudentsCompleted(this, new FnGetUniversityTotalFemaleStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalIntersexStu" +
            "dents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalIntersexStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalIntersexStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalIntersexStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalIntersexStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalIntersexStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalIntersexStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalIntersexStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalIntersexStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalIntersexStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalIntersexStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalIntersexStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalIntersexStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalIntersexStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalIntersexStudentsCompleted(this, new FnGetUniversityTotalIntersexStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalGovernmentS" +
            "ponsoredStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalGovernmentSponsoredStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalGovernmentSponsoredStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalGovernmentSponsoredStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalGovernmentSponsoredStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalGovernmentSponsoredStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalGovernmentSponsoredStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalGovernmentSponsoredStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalGovernmentSponsoredStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalGovernmentSponsoredStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalGovernmentSponsoredStudentsCompleted(this, new FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalSelfSponsor" +
            "edStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalSelfSponsoredStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalSelfSponsoredStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalSelfSponsoredStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalSelfSponsoredStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalSelfSponsoredStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalSelfSponsoredStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalSelfSponsoredStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalSelfSponsoredStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalSelfSponsoredStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalSelfSponsoredStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalSelfSponsoredStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalSelfSponsoredStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalSelfSponsoredStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalSelfSponsoredStudentsCompleted(this, new FnGetUniversityTotalSelfSponsoredStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalFullTimeStu" +
            "dents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalFullTimeStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalFullTimeStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalFullTimeStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFullTimeStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalFullTimeStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFullTimeStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalFullTimeStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalFullTimeStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalFullTimeStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalFullTimeStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalFullTimeStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalFullTimeStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalFullTimeStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalFullTimeStudentsCompleted(this, new FnGetUniversityTotalFullTimeStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalPartTimeStu" +
            "dents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalPartTimeStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalPartTimeStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalPartTimeStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalPartTimeStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalPartTimeStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalPartTimeStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalPartTimeStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalPartTimeStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalPartTimeStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalPartTimeStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalPartTimeStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalPartTimeStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalPartTimeStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalPartTimeStudentsCompleted(this, new FnGetUniversityTotalPartTimeStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityB" +
            "achelorsStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityBachelorsStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityBachelorsStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityBachelorsStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityBachelorsStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityBachelorsStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityBachelorsStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityBachelorsStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityBachelorsStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityBachelorsStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityBachelorsStudentsCompleted(this, new FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityM" +
            "astersStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityMastersStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityMastersStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityMastersStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMastersStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityMastersStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMastersStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityMastersStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityMastersStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityMastersStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityMastersStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityMastersStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityMastersStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityMastersStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityMastersStudentsCompleted(this, new FnGetUniversityTotalUniversityMastersStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityD" +
            "octorateStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityDoctorateStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityDoctorateStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityDoctorateStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDoctorateStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityDoctorateStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDoctorateStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityDoctorateStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityDoctorateStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityDoctorateStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityDoctorateStudentsCompleted(this, new FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityC" +
            "ertificateStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityCertificateStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityCertificateStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityCertificateStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCertificateStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityCertificateStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCertificateStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityCertificateStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityCertificateStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityCertificateStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityCertificateStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityCertificateStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityCertificateStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityCertificateStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityCertificateStudentsCompleted(this, new FnGetUniversityTotalUniversityCertificateStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "ostgraduateStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPostgraduateStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPostgraduateStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPostgraduateStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPostgraduateStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPostgraduateStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPostgraduateStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPostgraduateStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPostgraduateStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPostgraduateStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPostgraduateStudentsCompleted(this, new FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityD" +
            "iplomaStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityDiplomaStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityDiplomaStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityDiplomaStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDiplomaStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityDiplomaStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDiplomaStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityDiplomaStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityDiplomaStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityDiplomaStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityDiplomaStudentsCompleted(this, new FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalFirstYearSt" +
            "udents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalFirstYearStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalFirstYearStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalFirstYearStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFirstYearStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalFirstYearStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalFirstYearStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalFirstYearStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalFirstYearStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalFirstYearStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalFirstYearStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalFirstYearStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalFirstYearStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalFirstYearStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalFirstYearStudentsCompleted(this, new FnGetUniversityTotalFirstYearStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalSecondYearS" +
            "tudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalSecondYearStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalSecondYearStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalSecondYearStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalSecondYearStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalSecondYearStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalSecondYearStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalSecondYearStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalSecondYearStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalSecondYearStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalSecondYearStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalSecondYearStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalSecondYearStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalSecondYearStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalSecondYearStudentsCompleted(this, new FnGetUniversityTotalSecondYearStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotaFourthYearSt" +
            "udents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotaFourthYearStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotaFourthYearStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotaFourthYearStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotaFourthYearStudentsAsync(string universityCode) {
            this.FnGetUniversityTotaFourthYearStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotaFourthYearStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotaFourthYearStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotaFourthYearStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotaFourthYearStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotaFourthYearStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotaFourthYearStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotaFourthYearStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotaFourthYearStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotaFourthYearStudentsCompleted(this, new FnGetUniversityTotaFourthYearStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalThridYearSt" +
            "udents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalThridYearStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalThridYearStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalThridYearStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalThridYearStudentsAsync(string universityCode) {
            this.FnGetUniversityTotalThridYearStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalThridYearStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalThridYearStudentsOperationCompleted == null)) {
                this.FnGetUniversityTotalThridYearStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalThridYearStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalThridYearStudents", new object[] {
                        universityCode}, this.FnGetUniversityTotalThridYearStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalThridYearStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalThridYearStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalThridYearStudentsCompleted(this, new FnGetUniversityTotalThridYearStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityS" +
            "taff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityStaffCompleted(this, new FnGetUniversityTotalUniversityStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityPWDTotalStudents" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityPWDTotalStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityPWDTotalStudents(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityPWDTotalStudents", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityPWDTotalStudentsAsync(string universityCode) {
            this.FnGetUniversityPWDTotalStudentsAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityPWDTotalStudentsAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityPWDTotalStudentsOperationCompleted == null)) {
                this.FnGetUniversityPWDTotalStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityPWDTotalStudentsOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityPWDTotalStudents", new object[] {
                        universityCode}, this.FnGetUniversityPWDTotalStudentsOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityPWDTotalStudentsOperationCompleted(object arg) {
            if ((this.FnGetUniversityPWDTotalStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityPWDTotalStudentsCompleted(this, new FnGetUniversityPWDTotalStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityE" +
            "ducationStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityEducationStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityEducationStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityEducationStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityEducationStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityEducationStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityEducationStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityEducationStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityEducationStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityEducationStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityEducationStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityEducationStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityEducationStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityEducationStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityEducationStaffCompleted(this, new FnGetUniversityTotalUniversityEducationStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversitBu" +
            "sinessStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversitBusinessStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversitBusinessStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversitBusinessStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitBusinessStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversitBusinessStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitBusinessStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversitBusinessStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversitBusinessStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversitBusinessStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversitBusinessStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversitBusinessStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversitBusinessStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversitBusinessStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversitBusinessStaffCompleted(this, new FnGetUniversityTotalUniversitBusinessStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversitHe" +
            "althStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversitHealthStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversitHealthStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversitHealthStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitHealthStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversitHealthStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitHealthStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversitHealthStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversitHealthStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversitHealthStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversitHealthStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversitHealthStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversitHealthStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversitHealthStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversitHealthStaffCompleted(this, new FnGetUniversityTotalUniversitHealthStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityA" +
            "rtsStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityArtsStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityArtsStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityArtsStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityArtsStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityArtsStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityArtsStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityArtsStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityArtsStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityArtsStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityArtsStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityArtsStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityArtsStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityArtsStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityArtsStaffCompleted(this, new FnGetUniversityTotalUniversityArtsStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityS" +
            "cienceStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityScienceStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityScienceStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityScienceStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityScienceStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityScienceStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityScienceStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityScienceStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityScienceStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityScienceStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityScienceStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityScienceStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityScienceStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityScienceStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityScienceStaffCompleted(this, new FnGetUniversityTotalUniversityScienceStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityS" +
            "ervicesStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityServicesStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityServicesStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityServicesStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityServicesStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityServicesStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityServicesStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityServicesStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityServicesStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityServicesStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityServicesStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityServicesStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityServicesStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityServicesStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityServicesStaffCompleted(this, new FnGetUniversityTotalUniversityServicesStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityN" +
            "aturalScienceStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityNaturalScienceStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityNaturalScienceStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityNaturalScienceStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityNaturalScienceStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityNaturalScienceStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityNaturalScienceStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityNaturalScienceStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityNaturalScienceStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityNaturalScienceStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityNaturalScienceStaffCompleted(this, new FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityE" +
            "ngineeringStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityEngineeringStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityEngineeringStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityEngineeringStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityEngineeringStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityEngineeringStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityEngineeringStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityEngineeringStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityEngineeringStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityEngineeringStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityEngineeringStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityEngineeringStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityEngineeringStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityEngineeringStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityEngineeringStaffCompleted(this, new FnGetUniversityTotalUniversityEngineeringStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityI" +
            "CTStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityICTStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityICTStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityICTStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityICTStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityICTStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityICTStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityICTStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityICTStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityICTStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityICTStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityICTStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityICTStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityICTStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityICTStaffCompleted(this, new FnGetUniversityTotalUniversityICTStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityL" +
            "ifeScienceStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityLifeScienceStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityLifeScienceStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityLifeScienceStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityLifeScienceStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityLifeScienceStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityLifeScienceStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityLifeScienceStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityLifeScienceStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityLifeScienceStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityLifeScienceStaffCompleted(this, new FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityA" +
            "gricultureStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityAgricultureStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityAgricultureStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityAgricultureStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAgricultureStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityAgricultureStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAgricultureStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityAgricultureStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityAgricultureStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityAgricultureStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityAgricultureStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityAgricultureStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityAgricultureStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityAgricultureStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityAgricultureStaffCompleted(this, new FnGetUniversityTotalUniversityAgricultureStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityG" +
            "raduateAssistantStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityGraduateAssistantStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityGraduateAssistantStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityGraduateAssistantStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityGraduateAssistantStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityGraduateAssistantStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityGraduateAssistantStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityGraduateAssistantStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityGraduateAssistantStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityGraduateAssistantStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityGraduateAssistantStaffCompleted(this, new FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityR" +
            "esearchAssistantStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityResearchAssistantStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityResearchAssistantStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityResearchAssistantStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityResearchAssistantStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityResearchAssistantStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityResearchAssistantStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityResearchAssistantStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityResearchAssistantStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityResearchAssistantStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityResearchAssistantStaffCompleted(this, new FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityT" +
            "utorialFellowStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityTutorialFellowStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityTutorialFellowStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityTutorialFellowStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityTutorialFellowStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityTutorialFellowStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityTutorialFellowStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityTutorialFellowStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityTutorialFellowStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityTutorialFellowStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityTutorialFellowStaffCompleted(this, new FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityJ" +
            "uniorResearchStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityJuniorResearchStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityJuniorResearchStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityJuniorResearchStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityJuniorResearchStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityJuniorResearchStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityJuniorResearchStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityJuniorResearchStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityJuniorResearchStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityJuniorResearchStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityJuniorResearchStaffCompleted(this, new FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityL" +
            "ecturerStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityLecturerStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityLecturerStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityLecturerStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityLecturerStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityLecturerStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityLecturerStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityLecturerStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityLecturerStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityLecturerStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityLecturerStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityLecturerStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityLecturerStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityLecturerStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityLecturerStaffCompleted(this, new FnGetUniversityTotalUniversityLecturerStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityR" +
            "esearchFellowStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityResearchFellowStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityResearchFellowStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityResearchFellowStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityResearchFellowStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityResearchFellowStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityResearchFellowStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityResearchFellowStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityResearchFellowStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityResearchFellowStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityResearchFellowStaffCompleted(this, new FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityS" +
            "eniorLecturerStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversitySeniorLecturerStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversitySeniorLecturerStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversitySeniorLecturerStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitySeniorLecturerStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversitySeniorLecturerStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitySeniorLecturerStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversitySeniorLecturerStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversitySeniorLecturerStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversitySeniorLecturerStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversitySeniorLecturerStaffCompleted(this, new FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityS" +
            "eniorReserachFellowStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversitySeniorReserachFellowStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversitySeniorReserachFellowStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversitySeniorReserachFellowStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitySeniorReserachFellowStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversitySeniorReserachFellowStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversitySeniorReserachFellowStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversitySeniorReserachFellowStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompleted(this, new FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityA" +
            "ssociateProffesorStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityAssociateProffesorStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityAssociateProffesorStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityAssociateProffesorStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAssociateProffesorStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityAssociateProffesorStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAssociateProffesorStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityAssociateProffesorStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityAssociateProffesorStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityAssociateProffesorStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityAssociateProffesorStaffCompleted(this, new FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "rofessorsStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityProfessorsStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityProfessorsStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityProfessorsStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityProfessorsStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityProfessorsStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityProfessorsStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityProfessorsStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityProfessorsStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityProfessorsStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityProfessorsStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityProfessorsStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityProfessorsStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityProfessorsStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityProfessorsStaffCompleted(this, new FnGetUniversityTotalUniversityProfessorsStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityA" +
            "djunctAcademicStaffStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityAdjunctAcademicStaffStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityAdjunctAcademicStaffStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityAdjunctAcademicStaffStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityAdjunctAcademicStaffStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityAdjunctAcademicStaffStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompleted(this, new FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "hysicalImpairmentStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPhysicalImpairmentStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPhysicalImpairmentStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPhysicalImpairmentStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPhysicalImpairmentStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPhysicalImpairmentStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPhysicalImpairmentStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPhysicalImpairmentStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompleted(this, new FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityM" +
            "aleStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityMaleStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityMaleStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityMaleStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMaleStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityMaleStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMaleStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityMaleStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityMaleStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityMaleStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityMaleStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityMaleStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityMaleStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityMaleStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityMaleStaffCompleted(this, new FnGetUniversityTotalUniversityMaleStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityF" +
            "emaleStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityFemaleStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityFemaleStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityFemaleStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityFemaleStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityFemaleStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityFemaleStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityFemaleStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityFemaleStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityFemaleStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityFemaleStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityFemaleStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityFemaleStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityFemaleStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityFemaleStaffCompleted(this, new FnGetUniversityTotalUniversityFemaleStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityI" +
            "ntersexStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityIntersexStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityIntersexStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityIntersexStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityIntersexStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityIntersexStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityIntersexStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityIntersexStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityIntersexStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityIntersexStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityIntersexStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityIntersexStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityIntersexStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityIntersexStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityIntersexStaffCompleted(this, new FnGetUniversityTotalUniversityIntersexStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityF" +
            "ullTimeStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityFullTimeStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityFullTimeStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityFullTimeStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityFullTimeStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityFullTimeStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityFullTimeStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityFullTimeStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityFullTimeStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityFullTimeStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityFullTimeStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityFullTimeStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityFullTimeStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityFullTimeStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityFullTimeStaffCompleted(this, new FnGetUniversityTotalUniversityFullTimeStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityB" +
            "achelorsStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityBachelorsStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityBachelorsStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityBachelorsStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityBachelorsStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityBachelorsStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityBachelorsStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityBachelorsStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityBachelorsStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityBachelorsStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityBachelorsStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityBachelorsStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityBachelorsStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityBachelorsStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityBachelorsStaffCompleted(this, new FnGetUniversityTotalUniversityBachelorsStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityM" +
            "astersStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityMastersStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityMastersStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityMastersStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMastersStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityMastersStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityMastersStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityMastersStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityMastersStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityMastersStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityMastersStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityMastersStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityMastersStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityMastersStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityMastersStaffCompleted(this, new FnGetUniversityTotalUniversityMastersStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityD" +
            "octorateStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityDoctorateStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityDoctorateStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityDoctorateStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDoctorateStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityDoctorateStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDoctorateStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityDoctorateStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityDoctorateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityDoctorateStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityDoctorateStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityDoctorateStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityDoctorateStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityDoctorateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityDoctorateStaffCompleted(this, new FnGetUniversityTotalUniversityDoctorateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityD" +
            "iplomaStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityDiplomaStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityDiplomaStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityDiplomaStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDiplomaStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityDiplomaStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityDiplomaStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityDiplomaStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityDiplomaStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityDiplomaStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityDiplomaStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityDiplomaStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityDiplomaStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityDiplomaStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityDiplomaStaffCompleted(this, new FnGetUniversityTotalUniversityDiplomaStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityC" +
            "ertificateStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityCertificateStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityCertificateStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityCertificateStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCertificateStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityCertificateStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityCertificateStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityCertificateStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityCertificateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityCertificateStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityCertificateStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityCertificateStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityCertificateStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityCertificateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityCertificateStaffCompleted(this, new FnGetUniversityTotalUniversityCertificateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeBachelorsStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeBachelorsStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeBachelorsStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeBachelorsStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeBachelorsStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeBachelorsStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeBachelorsStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeBachelorsStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeMastersStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeMastersStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeMastersStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeMastersStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeMastersStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeMastersStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeMastersStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeMastersStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeMastersStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeMastersStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeMastersStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetUniversityTotalUniversityP" +
            "artTimeDoctorateStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetUniversityTotalUniversityPartTimeDoctorateStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetUniversityTotalUniversityPartTimeDoctorateStaff(string universityCode) {
            object[] results = this.Invoke("FnGetUniversityTotalUniversityPartTimeDoctorateStaff", new object[] {
                        universityCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeDoctorateStaffAsync(string universityCode) {
            this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FnGetUniversityTotalUniversityPartTimeDoctorateStaffAsync(string universityCode, object userState) {
            if ((this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted == null)) {
                this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted);
            }
            this.InvokeAsync("FnGetUniversityTotalUniversityPartTimeDoctorateStaff", new object[] {
                        universityCode}, this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted, userState);
        }
        
        private void OnFnGetUniversityTotalUniversityPartTimeDoctorateStaffOperationCompleted(object arg) {
            if ((this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompleted(this, new FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetModerationsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetModerationsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetModerationsProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetModerationsProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetModerationsProgrammeAsync(string accreditation, string universitycode) {
            this.FngetModerationsProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetModerationsProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetModerationsProgrammeOperationCompleted == null)) {
                this.FngetModerationsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetModerationsProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetModerationsProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetModerationsProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetModerationsProgrammeOperationCompleted(object arg) {
            if ((this.FngetModerationsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetModerationsProgrammeCompleted(this, new FngetModerationsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetCourseContent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetCourseContent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCourseContent(string accreditation, string universitycode, string coursecode) {
            object[] results = this.Invoke("FngetCourseContent", new object[] {
                        accreditation,
                        universitycode,
                        coursecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCourseContentAsync(string accreditation, string universitycode, string coursecode) {
            this.FngetCourseContentAsync(accreditation, universitycode, coursecode, null);
        }
        
        /// <remarks/>
        public void FngetCourseContentAsync(string accreditation, string universitycode, string coursecode, object userState) {
            if ((this.FngetCourseContentOperationCompleted == null)) {
                this.FngetCourseContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCourseContentOperationCompleted);
            }
            this.InvokeAsync("FngetCourseContent", new object[] {
                        accreditation,
                        universitycode,
                        coursecode}, this.FngetCourseContentOperationCompleted, userState);
        }
        
        private void OnFngetCourseContentOperationCompleted(object arg) {
            if ((this.FngetCourseContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCourseContentCompleted(this, new FngetCourseContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetInstructionalMaterials", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetInstructionalMaterials_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetInstructionalMaterials(string accreditation, string universitycode, string coursecode) {
            object[] results = this.Invoke("FngetInstructionalMaterials", new object[] {
                        accreditation,
                        universitycode,
                        coursecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetInstructionalMaterialsAsync(string accreditation, string universitycode, string coursecode) {
            this.FngetInstructionalMaterialsAsync(accreditation, universitycode, coursecode, null);
        }
        
        /// <remarks/>
        public void FngetInstructionalMaterialsAsync(string accreditation, string universitycode, string coursecode, object userState) {
            if ((this.FngetInstructionalMaterialsOperationCompleted == null)) {
                this.FngetInstructionalMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetInstructionalMaterialsOperationCompleted);
            }
            this.InvokeAsync("FngetInstructionalMaterials", new object[] {
                        accreditation,
                        universitycode,
                        coursecode}, this.FngetInstructionalMaterialsOperationCompleted, userState);
        }
        
        private void OnFngetInstructionalMaterialsOperationCompleted(object arg) {
            if ((this.FngetInstructionalMaterialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetInstructionalMaterialsCompleted(this, new FngetInstructionalMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetCourseAssessment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetCourseAssessment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCourseAssessment(string accreditation, string universitycode, string coursecode) {
            object[] results = this.Invoke("FngetCourseAssessment", new object[] {
                        accreditation,
                        universitycode,
                        coursecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCourseAssessmentAsync(string accreditation, string universitycode, string coursecode) {
            this.FngetCourseAssessmentAsync(accreditation, universitycode, coursecode, null);
        }
        
        /// <remarks/>
        public void FngetCourseAssessmentAsync(string accreditation, string universitycode, string coursecode, object userState) {
            if ((this.FngetCourseAssessmentOperationCompleted == null)) {
                this.FngetCourseAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCourseAssessmentOperationCompleted);
            }
            this.InvokeAsync("FngetCourseAssessment", new object[] {
                        accreditation,
                        universitycode,
                        coursecode}, this.FngetCourseAssessmentOperationCompleted, userState);
        }
        
        private void OnFngetCourseAssessmentOperationCompleted(object arg) {
            if ((this.FngetCourseAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCourseAssessmentCompleted(this, new FngetCourseAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStakeholderStrenght", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStakeholderStrenght_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStakeholderStrenght(string qualityAuditNo, string universitycode, int number) {
            object[] results = this.Invoke("FngetStakeholderStrenght", new object[] {
                        qualityAuditNo,
                        universitycode,
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStakeholderStrenghtAsync(string qualityAuditNo, string universitycode, int number) {
            this.FngetStakeholderStrenghtAsync(qualityAuditNo, universitycode, number, null);
        }
        
        /// <remarks/>
        public void FngetStakeholderStrenghtAsync(string qualityAuditNo, string universitycode, int number, object userState) {
            if ((this.FngetStakeholderStrenghtOperationCompleted == null)) {
                this.FngetStakeholderStrenghtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStakeholderStrenghtOperationCompleted);
            }
            this.InvokeAsync("FngetStakeholderStrenght", new object[] {
                        qualityAuditNo,
                        universitycode,
                        number}, this.FngetStakeholderStrenghtOperationCompleted, userState);
        }
        
        private void OnFngetStakeholderStrenghtOperationCompleted(object arg) {
            if ((this.FngetStakeholderStrenghtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStakeholderStrenghtCompleted(this, new FngetStakeholderStrenghtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStakeholderWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStakeholderWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStakeholderWeakness(string qualityAuditNo, string universitycode, int weaknesscode) {
            object[] results = this.Invoke("FngetStakeholderWeakness", new object[] {
                        qualityAuditNo,
                        universitycode,
                        weaknesscode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStakeholderWeaknessAsync(string qualityAuditNo, string universitycode, int weaknesscode) {
            this.FngetStakeholderWeaknessAsync(qualityAuditNo, universitycode, weaknesscode, null);
        }
        
        /// <remarks/>
        public void FngetStakeholderWeaknessAsync(string qualityAuditNo, string universitycode, int weaknesscode, object userState) {
            if ((this.FngetStakeholderWeaknessOperationCompleted == null)) {
                this.FngetStakeholderWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStakeholderWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStakeholderWeakness", new object[] {
                        qualityAuditNo,
                        universitycode,
                        weaknesscode}, this.FngetStakeholderWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStakeholderWeaknessOperationCompleted(object arg) {
            if ((this.FngetStakeholderWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStakeholderWeaknessCompleted(this, new FngetStakeholderWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetGenericOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetGenericOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGenericOutcome(string qualityAuditNo, string universitycode, int genericoutcomecode) {
            object[] results = this.Invoke("FngetGenericOutcome", new object[] {
                        qualityAuditNo,
                        universitycode,
                        genericoutcomecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGenericOutcomeAsync(string qualityAuditNo, string universitycode, int genericoutcomecode) {
            this.FngetGenericOutcomeAsync(qualityAuditNo, universitycode, genericoutcomecode, null);
        }
        
        /// <remarks/>
        public void FngetGenericOutcomeAsync(string qualityAuditNo, string universitycode, int genericoutcomecode, object userState) {
            if ((this.FngetGenericOutcomeOperationCompleted == null)) {
                this.FngetGenericOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGenericOutcomeOperationCompleted);
            }
            this.InvokeAsync("FngetGenericOutcome", new object[] {
                        qualityAuditNo,
                        universitycode,
                        genericoutcomecode}, this.FngetGenericOutcomeOperationCompleted, userState);
        }
        
        private void OnFngetGenericOutcomeOperationCompleted(object arg) {
            if ((this.FngetGenericOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGenericOutcomeCompleted(this, new FngetGenericOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProfessionalOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProfessionalOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProfessionalOutcome(string qualityAuditNo, string universitycode, int proffessionaloutcomenumber) {
            object[] results = this.Invoke("FngetProfessionalOutcome", new object[] {
                        qualityAuditNo,
                        universitycode,
                        proffessionaloutcomenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProfessionalOutcomeAsync(string qualityAuditNo, string universitycode, int proffessionaloutcomenumber) {
            this.FngetProfessionalOutcomeAsync(qualityAuditNo, universitycode, proffessionaloutcomenumber, null);
        }
        
        /// <remarks/>
        public void FngetProfessionalOutcomeAsync(string qualityAuditNo, string universitycode, int proffessionaloutcomenumber, object userState) {
            if ((this.FngetProfessionalOutcomeOperationCompleted == null)) {
                this.FngetProfessionalOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProfessionalOutcomeOperationCompleted);
            }
            this.InvokeAsync("FngetProfessionalOutcome", new object[] {
                        qualityAuditNo,
                        universitycode,
                        proffessionaloutcomenumber}, this.FngetProfessionalOutcomeOperationCompleted, userState);
        }
        
        private void OnFngetProfessionalOutcomeOperationCompleted(object arg) {
            if ((this.FngetProfessionalOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProfessionalOutcomeCompleted(this, new FngetProfessionalOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetNeedsDemands", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetNeedsDemands_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetNeedsDemands(string qualityAuditNo, string universitycode, string stakeholder) {
            object[] results = this.Invoke("FngetNeedsDemands", new object[] {
                        qualityAuditNo,
                        universitycode,
                        stakeholder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetNeedsDemandsAsync(string qualityAuditNo, string universitycode, string stakeholder) {
            this.FngetNeedsDemandsAsync(qualityAuditNo, universitycode, stakeholder, null);
        }
        
        /// <remarks/>
        public void FngetNeedsDemandsAsync(string qualityAuditNo, string universitycode, string stakeholder, object userState) {
            if ((this.FngetNeedsDemandsOperationCompleted == null)) {
                this.FngetNeedsDemandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetNeedsDemandsOperationCompleted);
            }
            this.InvokeAsync("FngetNeedsDemands", new object[] {
                        qualityAuditNo,
                        universitycode,
                        stakeholder}, this.FngetNeedsDemandsOperationCompleted, userState);
        }
        
        private void OnFngetNeedsDemandsOperationCompleted(object arg) {
            if ((this.FngetNeedsDemandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetNeedsDemandsCompleted(this, new FngetNeedsDemandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStakeholderRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStakeholderRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStakeholderRequirements(string qualityAuditNo, string universitycode, string stakeholder) {
            object[] results = this.Invoke("FngetStakeholderRequirements", new object[] {
                        qualityAuditNo,
                        universitycode,
                        stakeholder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStakeholderRequirementsAsync(string qualityAuditNo, string universitycode, string stakeholder) {
            this.FngetStakeholderRequirementsAsync(qualityAuditNo, universitycode, stakeholder, null);
        }
        
        /// <remarks/>
        public void FngetStakeholderRequirementsAsync(string qualityAuditNo, string universitycode, string stakeholder, object userState) {
            if ((this.FngetStakeholderRequirementsOperationCompleted == null)) {
                this.FngetStakeholderRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStakeholderRequirementsOperationCompleted);
            }
            this.InvokeAsync("FngetStakeholderRequirements", new object[] {
                        qualityAuditNo,
                        universitycode,
                        stakeholder}, this.FngetStakeholderRequirementsOperationCompleted, userState);
        }
        
        private void OnFngetStakeholderRequirementsOperationCompleted(object arg) {
            if ((this.FngetStakeholderRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStakeholderRequirementsCompleted(this, new FngetStakeholderRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetLearningOutcomeStrenght", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetLearningOutcomeStrenght_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetLearningOutcomeStrenght(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetLearningOutcomeStrenght", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeStrenghtAsync(string qualityAuditNo, string universitycode) {
            this.FngetLearningOutcomeStrenghtAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeStrenghtAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetLearningOutcomeStrenghtOperationCompleted == null)) {
                this.FngetLearningOutcomeStrenghtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetLearningOutcomeStrenghtOperationCompleted);
            }
            this.InvokeAsync("FngetLearningOutcomeStrenght", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetLearningOutcomeStrenghtOperationCompleted, userState);
        }
        
        private void OnFngetLearningOutcomeStrenghtOperationCompleted(object arg) {
            if ((this.FngetLearningOutcomeStrenghtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetLearningOutcomeStrenghtCompleted(this, new FngetLearningOutcomeStrenghtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetLearningOutcomeWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetLearningOutcomeWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetLearningOutcomeWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetLearningOutcomeWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetLearningOutcomeWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetLearningOutcomeWeaknessOperationCompleted == null)) {
                this.FngetLearningOutcomeWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetLearningOutcomeWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetLearningOutcomeWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetLearningOutcomeWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetLearningOutcomeWeaknessOperationCompleted(object arg) {
            if ((this.FngetLearningOutcomeWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetLearningOutcomeWeaknessCompleted(this, new FngetLearningOutcomeWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetAuditRoadmapReccomendation" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetAuditRoadmapReccomendation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetAuditRoadmapReccomendation(string qualityAuditNo) {
            object[] results = this.Invoke("FngetAuditRoadmapReccomendation", new object[] {
                        qualityAuditNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetAuditRoadmapReccomendationAsync(string qualityAuditNo) {
            this.FngetAuditRoadmapReccomendationAsync(qualityAuditNo, null);
        }
        
        /// <remarks/>
        public void FngetAuditRoadmapReccomendationAsync(string qualityAuditNo, object userState) {
            if ((this.FngetAuditRoadmapReccomendationOperationCompleted == null)) {
                this.FngetAuditRoadmapReccomendationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetAuditRoadmapReccomendationOperationCompleted);
            }
            this.InvokeAsync("FngetAuditRoadmapReccomendation", new object[] {
                        qualityAuditNo}, this.FngetAuditRoadmapReccomendationOperationCompleted, userState);
        }
        
        private void OnFngetAuditRoadmapReccomendationOperationCompleted(object arg) {
            if ((this.FngetAuditRoadmapReccomendationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetAuditRoadmapReccomendationCompleted(this, new FngetAuditRoadmapReccomendationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeObjective(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeObjective", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeObjectiveAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeObjectiveAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeObjectiveAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeObjectiveOperationCompleted == null)) {
                this.FngetProgrammeObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeObjectiveOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeObjective", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeObjectiveOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeObjectiveOperationCompleted(object arg) {
            if ((this.FngetProgrammeObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeObjectiveCompleted(this, new FngetProgrammeObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetKnowledgeUnderstanding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetKnowledgeUnderstanding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetKnowledgeUnderstanding(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetKnowledgeUnderstanding", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetKnowledgeUnderstandingAsync(string qualityAuditNo, string universitycode) {
            this.FngetKnowledgeUnderstandingAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetKnowledgeUnderstandingAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetKnowledgeUnderstandingOperationCompleted == null)) {
                this.FngetKnowledgeUnderstandingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetKnowledgeUnderstandingOperationCompleted);
            }
            this.InvokeAsync("FngetKnowledgeUnderstanding", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetKnowledgeUnderstandingOperationCompleted, userState);
        }
        
        private void OnFngetKnowledgeUnderstandingOperationCompleted(object arg) {
            if ((this.FngetKnowledgeUnderstandingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetKnowledgeUnderstandingCompleted(this, new FngetKnowledgeUnderstandingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetCognitiveSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetCognitiveSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCognitiveSkills(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetCognitiveSkills", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCognitiveSkillsAsync(string qualityAuditNo, string universitycode) {
            this.FngetCognitiveSkillsAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetCognitiveSkillsAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetCognitiveSkillsOperationCompleted == null)) {
                this.FngetCognitiveSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCognitiveSkillsOperationCompleted);
            }
            this.InvokeAsync("FngetCognitiveSkills", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetCognitiveSkillsOperationCompleted, userState);
        }
        
        private void OnFngetCognitiveSkillsOperationCompleted(object arg) {
            if ((this.FngetCognitiveSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCognitiveSkillsCompleted(this, new FngetCognitiveSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetSubjectSpecific", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetSubjectSpecific_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSubjectSpecific(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetSubjectSpecific", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSubjectSpecificAsync(string qualityAuditNo, string universitycode) {
            this.FngetSubjectSpecificAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetSubjectSpecificAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetSubjectSpecificOperationCompleted == null)) {
                this.FngetSubjectSpecificOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSubjectSpecificOperationCompleted);
            }
            this.InvokeAsync("FngetSubjectSpecific", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetSubjectSpecificOperationCompleted, userState);
        }
        
        private void OnFngetSubjectSpecificOperationCompleted(object arg) {
            if ((this.FngetSubjectSpecificCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSubjectSpecificCompleted(this, new FngetSubjectSpecificCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeSpecificationStre" +
            "ngth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeSpecificationStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeSpecificationStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeSpecificationStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeSpecificationStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeSpecificationStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeSpecificationStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeSpecificationStrengthOperationCompleted == null)) {
                this.FngetProgrammeSpecificationStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeSpecificationStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeSpecificationStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeSpecificationStrengthOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeSpecificationStrengthOperationCompleted(object arg) {
            if ((this.FngetProgrammeSpecificationStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeSpecificationStrengthCompleted(this, new FngetProgrammeSpecificationStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeSpecificationWeak" +
            "ness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeSpecificationWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeSpecificationWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeSpecificationWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeSpecificationWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeSpecificationWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeSpecificationWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeSpecificationWeaknessOperationCompleted == null)) {
                this.FngetProgrammeSpecificationWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeSpecificationWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeSpecificationWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeSpecificationWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeSpecificationWeaknessOperationCompleted(object arg) {
            if ((this.FngetProgrammeSpecificationWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeSpecificationWeaknessCompleted(this, new FngetProgrammeSpecificationWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeContentStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeContentStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeContentStrengths(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeContentStrengths", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeContentStrengthsAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeContentStrengthsAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeContentStrengthsAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeContentStrengthsOperationCompleted == null)) {
                this.FngetProgrammeContentStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeContentStrengthsOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeContentStrengths", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeContentStrengthsOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeContentStrengthsOperationCompleted(object arg) {
            if ((this.FngetProgrammeContentStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeContentStrengthsCompleted(this, new FngetProgrammeContentStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeContentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeContentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeContentWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeContentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeContentWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeContentWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeContentWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeContentWeaknessOperationCompleted == null)) {
                this.FngetProgrammeContentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeContentWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeContentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeContentWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeContentWeaknessOperationCompleted(object arg) {
            if ((this.FngetProgrammeContentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeContentWeaknessCompleted(this, new FngetProgrammeContentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeOrganizationStren" +
            "gths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeOrganizationStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeOrganizationStrengths(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeOrganizationStrengths", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeOrganizationStrengthsAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeOrganizationStrengthsAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeOrganizationStrengthsAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeOrganizationStrengthsOperationCompleted == null)) {
                this.FngetProgrammeOrganizationStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeOrganizationStrengthsOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeOrganizationStrengths", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeOrganizationStrengthsOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeOrganizationStrengthsOperationCompleted(object arg) {
            if ((this.FngetProgrammeOrganizationStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeOrganizationStrengthsCompleted(this, new FngetProgrammeOrganizationStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeOrganizationWeakn" +
            "ess", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeOrganizationWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeOrganizationWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeOrganizationWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeOrganizationWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeOrganizationWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeOrganizationWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeOrganizationWeaknessOperationCompleted == null)) {
                this.FngetProgrammeOrganizationWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeOrganizationWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeOrganizationWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeOrganizationWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeOrganizationWeaknessOperationCompleted(object arg) {
            if ((this.FngetProgrammeOrganizationWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeOrganizationWeaknessCompleted(this, new FngetProgrammeOrganizationWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeAttachmentStrengt" +
            "h", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeAttachmentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeAttachmentStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeAttachmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeAttachmentStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeAttachmentStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeAttachmentStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeAttachmentStrengthOperationCompleted == null)) {
                this.FngetProgrammeAttachmentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeAttachmentStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeAttachmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeAttachmentStrengthOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeAttachmentStrengthOperationCompleted(object arg) {
            if ((this.FngetProgrammeAttachmentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeAttachmentStrengthCompleted(this, new FngetProgrammeAttachmentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeAttachmentWeaknes" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeAttachmentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeAttachmentWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeAttachmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeAttachmentWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeAttachmentWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeAttachmentWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeAttachmentWeaknessOperationCompleted == null)) {
                this.FngetProgrammeAttachmentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeAttachmentWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeAttachmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeAttachmentWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeAttachmentWeaknessOperationCompleted(object arg) {
            if ((this.FngetProgrammeAttachmentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeAttachmentWeaknessCompleted(this, new FngetProgrammeAttachmentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeDidacticStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeDidacticStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeDidacticStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeDidacticStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeDidacticStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeDidacticStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeDidacticStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeDidacticStrengthOperationCompleted == null)) {
                this.FngetProgrammeDidacticStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeDidacticStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeDidacticStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeDidacticStrengthOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeDidacticStrengthOperationCompleted(object arg) {
            if ((this.FngetProgrammeDidacticStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeDidacticStrengthCompleted(this, new FngetProgrammeDidacticStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsAssesmentStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsAssesmentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsAssesmentStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsAssesmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsAssesmentStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsAssesmentStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsAssesmentStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsAssesmentStrengthOperationCompleted == null)) {
                this.FngetStudentsAssesmentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsAssesmentStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsAssesmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsAssesmentStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStudentsAssesmentStrengthOperationCompleted(object arg) {
            if ((this.FngetStudentsAssesmentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsAssesmentStrengthCompleted(this, new FngetStudentsAssesmentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetProgrammeDidacticWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetProgrammeDidacticWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetProgrammeDidacticWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetProgrammeDidacticWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetProgrammeDidacticWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetProgrammeDidacticWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetProgrammeDidacticWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetProgrammeDidacticWeaknessOperationCompleted == null)) {
                this.FngetProgrammeDidacticWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetProgrammeDidacticWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetProgrammeDidacticWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetProgrammeDidacticWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetProgrammeDidacticWeaknessOperationCompleted(object arg) {
            if ((this.FngetProgrammeDidacticWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetProgrammeDidacticWeaknessCompleted(this, new FngetProgrammeDidacticWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsAssesmentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsAssesmentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsAssesmentWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsAssesmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsAssesmentWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsAssesmentWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsAssesmentWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsAssesmentWeaknessOperationCompleted == null)) {
                this.FngetStudentsAssesmentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsAssesmentWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsAssesmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsAssesmentWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStudentsAssesmentWeaknessOperationCompleted(object arg) {
            if ((this.FngetStudentsAssesmentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsAssesmentWeaknessCompleted(this, new FngetStudentsAssesmentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetQualityStaffStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetQualityStaffStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetQualityStaffStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetQualityStaffStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetQualityStaffStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetQualityStaffStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetQualityStaffStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetQualityStaffStrengthOperationCompleted == null)) {
                this.FngetQualityStaffStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetQualityStaffStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetQualityStaffStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetQualityStaffStrengthOperationCompleted, userState);
        }
        
        private void OnFngetQualityStaffStrengthOperationCompleted(object arg) {
            if ((this.FngetQualityStaffStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetQualityStaffStrengthCompleted(this, new FngetQualityStaffStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetQualityStaffWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetQualityStaffWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetQualityStaffWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetQualityStaffWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetQualityStaffWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetQualityStaffWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetQualityStaffWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetQualityStaffWeaknessOperationCompleted == null)) {
                this.FngetQualityStaffWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetQualityStaffWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetQualityStaffWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetQualityStaffWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetQualityStaffWeaknessOperationCompleted(object arg) {
            if ((this.FngetQualityStaffWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetQualityStaffWeaknessCompleted(this, new FngetQualityStaffWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentProfileStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentProfileStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentProfileStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentProfileStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentProfileStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentProfileStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentProfileStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentProfileStrengthOperationCompleted == null)) {
                this.FngetStudentProfileStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentProfileStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStudentProfileStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentProfileStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStudentProfileStrengthOperationCompleted(object arg) {
            if ((this.FngetStudentProfileStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentProfileStrengthCompleted(this, new FngetStudentProfileStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentProfileWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentProfileWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentProfileWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentProfileWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentProfileWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentProfileWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentProfileWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentProfileWeaknessOperationCompleted == null)) {
                this.FngetStudentProfileWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentProfileWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStudentProfileWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentProfileWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStudentProfileWeaknessOperationCompleted(object arg) {
            if ((this.FngetStudentProfileWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentProfileWeaknessCompleted(this, new FngetStudentProfileWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentSupportStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentSupportStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentSupportStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentSupportStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentSupportStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentSupportStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentSupportStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentSupportStrengthOperationCompleted == null)) {
                this.FngetStudentSupportStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentSupportStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStudentSupportStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentSupportStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStudentSupportStrengthOperationCompleted(object arg) {
            if ((this.FngetStudentSupportStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentSupportStrengthCompleted(this, new FngetStudentSupportStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentSupportWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentSupportWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentSupportWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentSupportWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentSupportWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentSupportWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentSupportWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentSupportWeaknessOperationCompleted == null)) {
                this.FngetStudentSupportWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentSupportWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStudentSupportWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentSupportWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStudentSupportWeaknessOperationCompleted(object arg) {
            if ((this.FngetStudentSupportWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentSupportWeaknessCompleted(this, new FngetStudentSupportWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetFacilitiesStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetFacilitiesStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetFacilitiesStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetFacilitiesStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetFacilitiesStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetFacilitiesStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetFacilitiesStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetFacilitiesStrengthOperationCompleted == null)) {
                this.FngetFacilitiesStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetFacilitiesStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetFacilitiesStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetFacilitiesStrengthOperationCompleted, userState);
        }
        
        private void OnFngetFacilitiesStrengthOperationCompleted(object arg) {
            if ((this.FngetFacilitiesStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetFacilitiesStrengthCompleted(this, new FngetFacilitiesStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetFacilitiesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetFacilitiesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetFacilitiesWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetFacilitiesWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetFacilitiesWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetFacilitiesWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetFacilitiesWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetFacilitiesWeaknessOperationCompleted == null)) {
                this.FngetFacilitiesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetFacilitiesWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetFacilitiesWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetFacilitiesWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetFacilitiesWeaknessOperationCompleted(object arg) {
            if ((this.FngetFacilitiesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetFacilitiesWeaknessCompleted(this, new FngetFacilitiesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsEvaluationsStrengt" +
            "h", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsEvaluationsStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsEvaluationsStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsEvaluationsStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsEvaluationsStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsEvaluationsStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsEvaluationsStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsEvaluationsStrengthOperationCompleted == null)) {
                this.FngetStudentsEvaluationsStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsEvaluationsStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsEvaluationsStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsEvaluationsStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStudentsEvaluationsStrengthOperationCompleted(object arg) {
            if ((this.FngetStudentsEvaluationsStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsEvaluationsStrengthCompleted(this, new FngetStudentsEvaluationsStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsEvaluationsWeaknes" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsEvaluationsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsEvaluationsWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsEvaluationsWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsEvaluationsWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsEvaluationsWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsEvaluationsWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsEvaluationsWeaknessOperationCompleted == null)) {
                this.FngetStudentsEvaluationsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsEvaluationsWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsEvaluationsWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsEvaluationsWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStudentsEvaluationsWeaknessOperationCompleted(object arg) {
            if ((this.FngetStudentsEvaluationsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsEvaluationsWeaknessCompleted(this, new FngetStudentsEvaluationsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetCurriculumnDesignStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetCurriculumnDesignStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCurriculumnDesignStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetCurriculumnDesignStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCurriculumnDesignStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetCurriculumnDesignStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetCurriculumnDesignStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetCurriculumnDesignStrengthOperationCompleted == null)) {
                this.FngetCurriculumnDesignStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCurriculumnDesignStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetCurriculumnDesignStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetCurriculumnDesignStrengthOperationCompleted, userState);
        }
        
        private void OnFngetCurriculumnDesignStrengthOperationCompleted(object arg) {
            if ((this.FngetCurriculumnDesignStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCurriculumnDesignStrengthCompleted(this, new FngetCurriculumnDesignStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetCurriculumnDesignWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetCurriculumnDesignWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetCurriculumnDesignWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetCurriculumnDesignWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetCurriculumnDesignWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetCurriculumnDesignWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetCurriculumnDesignWeaknessOperationCompleted == null)) {
                this.FngetCurriculumnDesignWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetCurriculumnDesignWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetCurriculumnDesignWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetCurriculumnDesignWeaknessOperationCompleted(object arg) {
            if ((this.FngetCurriculumnDesignWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetCurriculumnDesignWeaknessCompleted(this, new FngetCurriculumnDesignWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsDevelopmentStrengt" +
            "h", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsDevelopmentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsDevelopmentStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsDevelopmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsDevelopmentStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsDevelopmentStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsDevelopmentStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsDevelopmentStrengthOperationCompleted == null)) {
                this.FngetStudentsDevelopmentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsDevelopmentStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsDevelopmentStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsDevelopmentStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStudentsDevelopmentStrengthOperationCompleted(object arg) {
            if ((this.FngetStudentsDevelopmentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsDevelopmentStrengthCompleted(this, new FngetStudentsDevelopmentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStudentsDevelopmentWeaknes" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStudentsDevelopmentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStudentsDevelopmentWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStudentsDevelopmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStudentsDevelopmentWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStudentsDevelopmentWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStudentsDevelopmentWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStudentsDevelopmentWeaknessOperationCompleted == null)) {
                this.FngetStudentsDevelopmentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStudentsDevelopmentWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStudentsDevelopmentWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStudentsDevelopmentWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStudentsDevelopmentWeaknessOperationCompleted(object arg) {
            if ((this.FngetStudentsDevelopmentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStudentsDevelopmentWeaknessCompleted(this, new FngetStudentsDevelopmentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetBenchmarkingStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetBenchmarkingStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetBenchmarkingStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetBenchmarkingStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetBenchmarkingStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetBenchmarkingStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetBenchmarkingStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetBenchmarkingStrengthOperationCompleted == null)) {
                this.FngetBenchmarkingStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetBenchmarkingStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetBenchmarkingStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetBenchmarkingStrengthOperationCompleted, userState);
        }
        
        private void OnFngetBenchmarkingStrengthOperationCompleted(object arg) {
            if ((this.FngetBenchmarkingStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetBenchmarkingStrengthCompleted(this, new FngetBenchmarkingStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetBenchmarkingWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetBenchmarkingWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetBenchmarkingWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetBenchmarkingWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetBenchmarkingWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetBenchmarkingWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetBenchmarkingWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetBenchmarkingWeaknessOperationCompleted == null)) {
                this.FngetBenchmarkingWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetBenchmarkingWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetBenchmarkingWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetBenchmarkingWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetBenchmarkingWeaknessOperationCompleted(object arg) {
            if ((this.FngetBenchmarkingWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetBenchmarkingWeaknessCompleted(this, new FngetBenchmarkingWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetGraduatesStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetGraduatesStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGraduatesStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetGraduatesStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGraduatesStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetGraduatesStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetGraduatesStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetGraduatesStrengthOperationCompleted == null)) {
                this.FngetGraduatesStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGraduatesStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetGraduatesStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetGraduatesStrengthOperationCompleted, userState);
        }
        
        private void OnFngetGraduatesStrengthOperationCompleted(object arg) {
            if ((this.FngetGraduatesStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGraduatesStrengthCompleted(this, new FngetGraduatesStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetGraduatesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetGraduatesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGraduatesWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGraduatesWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetGraduatesWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetGraduatesWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetGraduatesWeaknessOperationCompleted == null)) {
                this.FngetGraduatesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGraduatesWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetGraduatesWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetGraduatesWeaknessOperationCompleted(object arg) {
            if ((this.FngetGraduatesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGraduatesWeaknessCompleted(this, new FngetGraduatesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStakeholdersSatisactionsSt" +
            "rength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStakeholdersSatisactionsStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStakeholdersSatisactionsStrength(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStakeholdersSatisactionsStrength", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStakeholdersSatisactionsStrengthAsync(string qualityAuditNo, string universitycode) {
            this.FngetStakeholdersSatisactionsStrengthAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStakeholdersSatisactionsStrengthAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStakeholdersSatisactionsStrengthOperationCompleted == null)) {
                this.FngetStakeholdersSatisactionsStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStakeholdersSatisactionsStrengthOperationCompleted);
            }
            this.InvokeAsync("FngetStakeholdersSatisactionsStrength", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStakeholdersSatisactionsStrengthOperationCompleted, userState);
        }
        
        private void OnFngetStakeholdersSatisactionsStrengthOperationCompleted(object arg) {
            if ((this.FngetStakeholdersSatisactionsStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStakeholdersSatisactionsStrengthCompleted(this, new FngetStakeholdersSatisactionsStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetStakeholdersSatisfactionsW" +
            "eakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetStakeholdersSatisfactionsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetStakeholdersSatisfactionsWeakness(string qualityAuditNo, string universitycode) {
            object[] results = this.Invoke("FngetStakeholdersSatisfactionsWeakness", new object[] {
                        qualityAuditNo,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetStakeholdersSatisfactionsWeaknessAsync(string qualityAuditNo, string universitycode) {
            this.FngetStakeholdersSatisfactionsWeaknessAsync(qualityAuditNo, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetStakeholdersSatisfactionsWeaknessAsync(string qualityAuditNo, string universitycode, object userState) {
            if ((this.FngetStakeholdersSatisfactionsWeaknessOperationCompleted == null)) {
                this.FngetStakeholdersSatisfactionsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetStakeholdersSatisfactionsWeaknessOperationCompleted);
            }
            this.InvokeAsync("FngetStakeholdersSatisfactionsWeakness", new object[] {
                        qualityAuditNo,
                        universitycode}, this.FngetStakeholdersSatisfactionsWeaknessOperationCompleted, userState);
        }
        
        private void OnFngetStakeholdersSatisfactionsWeaknessOperationCompleted(object arg) {
            if ((this.FngetStakeholdersSatisfactionsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetStakeholdersSatisfactionsWeaknessCompleted(this, new FngetStakeholdersSatisfactionsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversityMission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversityMission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversityMission(string universitycode) {
            object[] results = this.Invoke("FngetUniversityMission", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversityMissionAsync(string universitycode) {
            this.FngetUniversityMissionAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FngetUniversityMissionAsync(string universitycode, object userState) {
            if ((this.FngetUniversityMissionOperationCompleted == null)) {
                this.FngetUniversityMissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversityMissionOperationCompleted);
            }
            this.InvokeAsync("FngetUniversityMission", new object[] {
                        universitycode}, this.FngetUniversityMissionOperationCompleted, userState);
        }
        
        private void OnFngetUniversityMissionOperationCompleted(object arg) {
            if ((this.FngetUniversityMissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversityMissionCompleted(this, new FngetUniversityMissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversityVission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversityVission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversityVission(string universitycode) {
            object[] results = this.Invoke("FngetUniversityVission", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversityVissionAsync(string universitycode) {
            this.FngetUniversityVissionAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FngetUniversityVissionAsync(string universitycode, object userState) {
            if ((this.FngetUniversityVissionOperationCompleted == null)) {
                this.FngetUniversityVissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversityVissionOperationCompleted);
            }
            this.InvokeAsync("FngetUniversityVission", new object[] {
                        universitycode}, this.FngetUniversityVissionOperationCompleted, userState);
        }
        
        private void OnFngetUniversityVissionOperationCompleted(object arg) {
            if ((this.FngetUniversityVissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversityVissionCompleted(this, new FngetUniversityVissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversityAim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversityAim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversityAim(string universitycode) {
            object[] results = this.Invoke("FngetUniversityAim", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversityAimAsync(string universitycode) {
            this.FngetUniversityAimAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FngetUniversityAimAsync(string universitycode, object userState) {
            if ((this.FngetUniversityAimOperationCompleted == null)) {
                this.FngetUniversityAimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversityAimOperationCompleted);
            }
            this.InvokeAsync("FngetUniversityAim", new object[] {
                        universitycode}, this.FngetUniversityAimOperationCompleted, userState);
        }
        
        private void OnFngetUniversityAimOperationCompleted(object arg) {
            if ((this.FngetUniversityAimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversityAimCompleted(this, new FngetUniversityAimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversitHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversitHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversitHistory(string universitycode) {
            object[] results = this.Invoke("FngetUniversitHistory", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversitHistoryAsync(string universitycode) {
            this.FngetUniversitHistoryAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FngetUniversitHistoryAsync(string universitycode, object userState) {
            if ((this.FngetUniversitHistoryOperationCompleted == null)) {
                this.FngetUniversitHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversitHistoryOperationCompleted);
            }
            this.InvokeAsync("FngetUniversitHistory", new object[] {
                        universitycode}, this.FngetUniversitHistoryOperationCompleted, userState);
        }
        
        private void OnFngetUniversitHistoryOperationCompleted(object arg) {
            if ((this.FngetUniversitHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversitHistoryCompleted(this, new FngetUniversitHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversitPhylosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversitPhylosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversitPhylosophy(string universitycode) {
            object[] results = this.Invoke("FngetUniversitPhylosophy", new object[] {
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversitPhylosophyAsync(string universitycode) {
            this.FngetUniversitPhylosophyAsync(universitycode, null);
        }
        
        /// <remarks/>
        public void FngetUniversitPhylosophyAsync(string universitycode, object userState) {
            if ((this.FngetUniversitPhylosophyOperationCompleted == null)) {
                this.FngetUniversitPhylosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversitPhylosophyOperationCompleted);
            }
            this.InvokeAsync("FngetUniversitPhylosophy", new object[] {
                        universitycode}, this.FngetUniversitPhylosophyOperationCompleted, userState);
        }
        
        private void OnFngetUniversitPhylosophyOperationCompleted(object arg) {
            if ((this.FngetUniversitPhylosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversitPhylosophyCompleted(this, new FngetUniversitPhylosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversitKeyMilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversitKeyMilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversitKeyMilestone(string universitycode, int entryno) {
            object[] results = this.Invoke("FngetUniversitKeyMilestone", new object[] {
                        universitycode,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversitKeyMilestoneAsync(string universitycode, int entryno) {
            this.FngetUniversitKeyMilestoneAsync(universitycode, entryno, null);
        }
        
        /// <remarks/>
        public void FngetUniversitKeyMilestoneAsync(string universitycode, int entryno, object userState) {
            if ((this.FngetUniversitKeyMilestoneOperationCompleted == null)) {
                this.FngetUniversitKeyMilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversitKeyMilestoneOperationCompleted);
            }
            this.InvokeAsync("FngetUniversitKeyMilestone", new object[] {
                        universitycode,
                        entryno}, this.FngetUniversitKeyMilestoneOperationCompleted, userState);
        }
        
        private void OnFngetUniversitKeyMilestoneOperationCompleted(object arg) {
            if ((this.FngetUniversitKeyMilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversitKeyMilestoneCompleted(this, new FngetUniversitKeyMilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOutComesStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOutComesStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOutComesStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddOutComesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOutComesStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddOutComesStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddOutComesStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddOutComesStrengthOperationCompleted == null)) {
                this.AddOutComesStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOutComesStrengthOperationCompleted);
            }
            this.InvokeAsync("AddOutComesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddOutComesStrengthOperationCompleted, userState);
        }
        
        private void OnAddOutComesStrengthOperationCompleted(object arg) {
            if ((this.AddOutComesStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOutComesStrengthCompleted(this, new AddOutComesStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramSpecificationStrength" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramSpecificationStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramSpecificationStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramSpecificationStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramSpecificationStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramSpecificationStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramSpecificationStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramSpecificationStrengthOperationCompleted == null)) {
                this.AddProgramSpecificationStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramSpecificationStrengthOperationCompleted);
            }
            this.InvokeAsync("AddProgramSpecificationStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramSpecificationStrengthOperationCompleted, userState);
        }
        
        private void OnAddProgramSpecificationStrengthOperationCompleted(object arg) {
            if ((this.AddProgramSpecificationStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramSpecificationStrengthCompleted(this, new AddProgramSpecificationStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramSpecificationWeakness" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramSpecificationWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramSpecificationWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramSpecificationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramSpecificationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramSpecificationWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramSpecificationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramSpecificationWeaknessOperationCompleted == null)) {
                this.AddProgramSpecificationWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramSpecificationWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddProgramSpecificationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramSpecificationWeaknessOperationCompleted, userState);
        }
        
        private void OnAddProgramSpecificationWeaknessOperationCompleted(object arg) {
            if ((this.AddProgramSpecificationWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramSpecificationWeaknessCompleted(this, new AddProgramSpecificationWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramContentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramContentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramContentWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramContentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramContentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramContentWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramContentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramContentWeaknessOperationCompleted == null)) {
                this.AddProgramContentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramContentWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddProgramContentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramContentWeaknessOperationCompleted, userState);
        }
        
        private void OnAddProgramContentWeaknessOperationCompleted(object arg) {
            if ((this.AddProgramContentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramContentWeaknessCompleted(this, new AddProgramContentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramContentStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramContentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramContentStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramContentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramContentStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramContentStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramContentStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramContentStrengthOperationCompleted == null)) {
                this.AddProgramContentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramContentStrengthOperationCompleted);
            }
            this.InvokeAsync("AddProgramContentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramContentStrengthOperationCompleted, userState);
        }
        
        private void OnAddProgramContentStrengthOperationCompleted(object arg) {
            if ((this.AddProgramContentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramContentStrengthCompleted(this, new AddProgramContentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramOrganizationStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramOrganizationStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramOrganizationStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramOrganizationStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramOrganizationStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramOrganizationStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramOrganizationStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramOrganizationStrengthOperationCompleted == null)) {
                this.AddProgramOrganizationStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramOrganizationStrengthOperationCompleted);
            }
            this.InvokeAsync("AddProgramOrganizationStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramOrganizationStrengthOperationCompleted, userState);
        }
        
        private void OnAddProgramOrganizationStrengthOperationCompleted(object arg) {
            if ((this.AddProgramOrganizationStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramOrganizationStrengthCompleted(this, new AddProgramOrganizationStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramOrganizationWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramOrganizationWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramOrganizationWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddProgramOrganizationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramOrganizationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddProgramOrganizationWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramOrganizationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddProgramOrganizationWeaknessOperationCompleted == null)) {
                this.AddProgramOrganizationWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramOrganizationWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddProgramOrganizationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddProgramOrganizationWeaknessOperationCompleted, userState);
        }
        
        private void OnAddProgramOrganizationWeaknessOperationCompleted(object arg) {
            if ((this.AddProgramOrganizationWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramOrganizationWeaknessCompleted(this, new AddProgramOrganizationWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsAssesmentStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsAssesmentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsAssesmentStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsAssesmentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsAssesmentStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsAssesmentStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsAssesmentStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsAssesmentStrengthOperationCompleted == null)) {
                this.AddStudentsAssesmentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsAssesmentStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStudentsAssesmentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsAssesmentStrengthOperationCompleted, userState);
        }
        
        private void OnAddStudentsAssesmentStrengthOperationCompleted(object arg) {
            if ((this.AddStudentsAssesmentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsAssesmentStrengthCompleted(this, new AddStudentsAssesmentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsAssesmentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsAssesmentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsAssesmentWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsAssesmentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsAssesmentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsAssesmentWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsAssesmentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsAssesmentWeaknessOperationCompleted == null)) {
                this.AddStudentsAssesmentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsAssesmentWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStudentsAssesmentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsAssesmentWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStudentsAssesmentWeaknessOperationCompleted(object arg) {
            if ((this.AddStudentsAssesmentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsAssesmentWeaknessCompleted(this, new AddStudentsAssesmentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQualityStaffStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQualityStaffStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQualityStaffStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddQualityStaffStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualityStaffStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddQualityStaffStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddQualityStaffStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddQualityStaffStrengthOperationCompleted == null)) {
                this.AddQualityStaffStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualityStaffStrengthOperationCompleted);
            }
            this.InvokeAsync("AddQualityStaffStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddQualityStaffStrengthOperationCompleted, userState);
        }
        
        private void OnAddQualityStaffStrengthOperationCompleted(object arg) {
            if ((this.AddQualityStaffStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualityStaffStrengthCompleted(this, new AddQualityStaffStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQualityStaffWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQualityStaffWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQualityStaffWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddQualityStaffWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualityStaffWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddQualityStaffWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddQualityStaffWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddQualityStaffWeaknessOperationCompleted == null)) {
                this.AddQualityStaffWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualityStaffWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddQualityStaffWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddQualityStaffWeaknessOperationCompleted, userState);
        }
        
        private void OnAddQualityStaffWeaknessOperationCompleted(object arg) {
            if ((this.AddQualityStaffWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualityStaffWeaknessCompleted(this, new AddQualityStaffWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentProfileStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentProfileStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentProfileStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentProfileStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentProfileStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentProfileStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentProfileStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentProfileStrengthOperationCompleted == null)) {
                this.AddStudentProfileStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentProfileStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStudentProfileStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentProfileStrengthOperationCompleted, userState);
        }
        
        private void OnAddStudentProfileStrengthOperationCompleted(object arg) {
            if ((this.AddStudentProfileStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentProfileStrengthCompleted(this, new AddStudentProfileStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentProfileWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentProfileWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentProfileWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentProfileWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentProfileWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentProfileWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentProfileWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentProfileWeaknessOperationCompleted == null)) {
                this.AddStudentProfileWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentProfileWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStudentProfileWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentProfileWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStudentProfileWeaknessOperationCompleted(object arg) {
            if ((this.AddStudentProfileWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentProfileWeaknessCompleted(this, new AddStudentProfileWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentSupportStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentSupportStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentSupportStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentSupportStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentSupportStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentSupportStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentSupportStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentSupportStrengthOperationCompleted == null)) {
                this.AddStudentSupportStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentSupportStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStudentSupportStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentSupportStrengthOperationCompleted, userState);
        }
        
        private void OnAddStudentSupportStrengthOperationCompleted(object arg) {
            if ((this.AddStudentSupportStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentSupportStrengthCompleted(this, new AddStudentSupportStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentSupportWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentSupportWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentSupportWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentSupportWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentSupportWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentSupportWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentSupportWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentSupportWeaknessOperationCompleted == null)) {
                this.AddStudentSupportWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentSupportWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStudentSupportWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentSupportWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStudentSupportWeaknessOperationCompleted(object arg) {
            if ((this.AddStudentSupportWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentSupportWeaknessCompleted(this, new AddStudentSupportWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFacilitiesStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFacilitiesStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFacilitiesStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddFacilitiesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFacilitiesStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddFacilitiesStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFacilitiesStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddFacilitiesStrengthOperationCompleted == null)) {
                this.AddFacilitiesStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFacilitiesStrengthOperationCompleted);
            }
            this.InvokeAsync("AddFacilitiesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddFacilitiesStrengthOperationCompleted, userState);
        }
        
        private void OnAddFacilitiesStrengthOperationCompleted(object arg) {
            if ((this.AddFacilitiesStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFacilitiesStrengthCompleted(this, new AddFacilitiesStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFacilitiesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFacilitiesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFacilitiesWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddFacilitiesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFacilitiesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddFacilitiesWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFacilitiesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddFacilitiesWeaknessOperationCompleted == null)) {
                this.AddFacilitiesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFacilitiesWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddFacilitiesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddFacilitiesWeaknessOperationCompleted, userState);
        }
        
        private void OnAddFacilitiesWeaknessOperationCompleted(object arg) {
            if ((this.AddFacilitiesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFacilitiesWeaknessCompleted(this, new AddFacilitiesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsEvalautionStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsEvalautionStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsEvalautionStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsEvalautionStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsEvalautionStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsEvalautionStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsEvalautionStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsEvalautionStrengthOperationCompleted == null)) {
                this.AddStudentsEvalautionStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsEvalautionStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStudentsEvalautionStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsEvalautionStrengthOperationCompleted, userState);
        }
        
        private void OnAddStudentsEvalautionStrengthOperationCompleted(object arg) {
            if ((this.AddStudentsEvalautionStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsEvalautionStrengthCompleted(this, new AddStudentsEvalautionStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsEvaluationWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsEvaluationWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsEvaluationWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsEvaluationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsEvaluationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsEvaluationWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsEvaluationWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsEvaluationWeaknessOperationCompleted == null)) {
                this.AddStudentsEvaluationWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsEvaluationWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStudentsEvaluationWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsEvaluationWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStudentsEvaluationWeaknessOperationCompleted(object arg) {
            if ((this.AddStudentsEvaluationWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsEvaluationWeaknessCompleted(this, new AddStudentsEvaluationWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCurriculumnDesignStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCurriculumnDesignStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurriculumnDesignStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddCurriculumnDesignStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddCurriculumnDesignStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddCurriculumnDesignStrengthOperationCompleted == null)) {
                this.AddCurriculumnDesignStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurriculumnDesignStrengthOperationCompleted);
            }
            this.InvokeAsync("AddCurriculumnDesignStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddCurriculumnDesignStrengthOperationCompleted, userState);
        }
        
        private void OnAddCurriculumnDesignStrengthOperationCompleted(object arg) {
            if ((this.AddCurriculumnDesignStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurriculumnDesignStrengthCompleted(this, new AddCurriculumnDesignStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCurriculumnDesignWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCurriculumnDesignWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurriculumnDesignWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddCurriculumnDesignWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddCurriculumnDesignWeaknessOperationCompleted == null)) {
                this.AddCurriculumnDesignWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurriculumnDesignWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddCurriculumnDesignWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddCurriculumnDesignWeaknessOperationCompleted, userState);
        }
        
        private void OnAddCurriculumnDesignWeaknessOperationCompleted(object arg) {
            if ((this.AddCurriculumnDesignWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurriculumnDesignWeaknessCompleted(this, new AddCurriculumnDesignWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsDevelopmentStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsDevelopmentStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsDevelopmentStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsDevelopmentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsDevelopmentStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsDevelopmentStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsDevelopmentStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsDevelopmentStrengthOperationCompleted == null)) {
                this.AddStudentsDevelopmentStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsDevelopmentStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStudentsDevelopmentStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsDevelopmentStrengthOperationCompleted, userState);
        }
        
        private void OnAddStudentsDevelopmentStrengthOperationCompleted(object arg) {
            if ((this.AddStudentsDevelopmentStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsDevelopmentStrengthCompleted(this, new AddStudentsDevelopmentStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsDevelopmentWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsDevelopmentWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsDevelopmentWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsDevelopmentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsDevelopmentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStudentsDevelopmentWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsDevelopmentWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStudentsDevelopmentWeaknessOperationCompleted == null)) {
                this.AddStudentsDevelopmentWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsDevelopmentWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStudentsDevelopmentWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStudentsDevelopmentWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStudentsDevelopmentWeaknessOperationCompleted(object arg) {
            if ((this.AddStudentsDevelopmentWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsDevelopmentWeaknessCompleted(this, new AddStudentsDevelopmentWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBenchmarkingStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBenchmarkingStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBenchmarkingStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddBenchmarkingStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBenchmarkingStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddBenchmarkingStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBenchmarkingStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddBenchmarkingStrengthOperationCompleted == null)) {
                this.AddBenchmarkingStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBenchmarkingStrengthOperationCompleted);
            }
            this.InvokeAsync("AddBenchmarkingStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddBenchmarkingStrengthOperationCompleted, userState);
        }
        
        private void OnAddBenchmarkingStrengthOperationCompleted(object arg) {
            if ((this.AddBenchmarkingStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBenchmarkingStrengthCompleted(this, new AddBenchmarkingStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBenchmarkingtWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBenchmarkingtWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBenchmarkingtWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddBenchmarkingtWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBenchmarkingtWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddBenchmarkingtWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBenchmarkingtWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddBenchmarkingtWeaknessOperationCompleted == null)) {
                this.AddBenchmarkingtWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBenchmarkingtWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddBenchmarkingtWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddBenchmarkingtWeaknessOperationCompleted, userState);
        }
        
        private void OnAddBenchmarkingtWeaknessOperationCompleted(object arg) {
            if ((this.AddBenchmarkingtWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBenchmarkingtWeaknessCompleted(this, new AddBenchmarkingtWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduatesStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduatesStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduatesStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddGraduatesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduatesStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddGraduatesStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduatesStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddGraduatesStrengthOperationCompleted == null)) {
                this.AddGraduatesStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduatesStrengthOperationCompleted);
            }
            this.InvokeAsync("AddGraduatesStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddGraduatesStrengthOperationCompleted, userState);
        }
        
        private void OnAddGraduatesStrengthOperationCompleted(object arg) {
            if ((this.AddGraduatesStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduatesStrengthCompleted(this, new AddGraduatesStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduatesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduatesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduatesWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduatesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddGraduatesWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduatesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddGraduatesWeaknessOperationCompleted == null)) {
                this.AddGraduatesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduatesWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddGraduatesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddGraduatesWeaknessOperationCompleted, userState);
        }
        
        private void OnAddGraduatesWeaknessOperationCompleted(object arg) {
            if ((this.AddGraduatesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduatesWeaknessCompleted(this, new AddGraduatesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStakeholdersSatisfactionsStr" +
            "ength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStakeholdersSatisfactionsStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStakeholdersSatisfactionsStrength(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStakeholdersSatisfactionsStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionsStrengthAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStakeholdersSatisfactionsStrengthAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionsStrengthAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStakeholdersSatisfactionsStrengthOperationCompleted == null)) {
                this.AddStakeholdersSatisfactionsStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStakeholdersSatisfactionsStrengthOperationCompleted);
            }
            this.InvokeAsync("AddStakeholdersSatisfactionsStrength", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStakeholdersSatisfactionsStrengthOperationCompleted, userState);
        }
        
        private void OnAddStakeholdersSatisfactionsStrengthOperationCompleted(object arg) {
            if ((this.AddStakeholdersSatisfactionsStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStakeholdersSatisfactionsStrengthCompleted(this, new AddStakeholdersSatisfactionsStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStakeholdersSatisfactionsWea" +
            "kness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStakeholdersSatisfactionsWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStakeholdersSatisfactionsWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStakeholdersSatisfactionsWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionsWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddStakeholdersSatisfactionsWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionsWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddStakeholdersSatisfactionsWeaknessOperationCompleted == null)) {
                this.AddStakeholdersSatisfactionsWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStakeholdersSatisfactionsWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStakeholdersSatisfactionsWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddStakeholdersSatisfactionsWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStakeholdersSatisfactionsWeaknessOperationCompleted(object arg) {
            if ((this.AddStakeholdersSatisfactionsWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStakeholdersSatisfactionsWeaknessCompleted(this, new AddStakeholdersSatisfactionsWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOutComesWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOutComesWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOutComesWeakness(string qualityAuditNo, string description, string userCode, string password) {
            object[] results = this.Invoke("AddOutComesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOutComesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password) {
            this.AddOutComesWeaknessAsync(qualityAuditNo, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddOutComesWeaknessAsync(string qualityAuditNo, string description, string userCode, string password, object userState) {
            if ((this.AddOutComesWeaknessOperationCompleted == null)) {
                this.AddOutComesWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOutComesWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddOutComesWeakness", new object[] {
                        qualityAuditNo,
                        description,
                        userCode,
                        password}, this.AddOutComesWeaknessOperationCompleted, userState);
        }
        
        private void OnAddOutComesWeaknessOperationCompleted(object arg) {
            if ((this.AddOutComesWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOutComesWeaknessCompleted(this, new AddOutComesWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAspectDesciption", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAspectDesciption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAspectDesciption(string qualityAuditNo, string knowledge, string cognitiveskills, string subjectspecific, string userCode, string password) {
            object[] results = this.Invoke("AddAspectDesciption", new object[] {
                        qualityAuditNo,
                        knowledge,
                        cognitiveskills,
                        subjectspecific,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAspectDesciptionAsync(string qualityAuditNo, string knowledge, string cognitiveskills, string subjectspecific, string userCode, string password) {
            this.AddAspectDesciptionAsync(qualityAuditNo, knowledge, cognitiveskills, subjectspecific, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddAspectDesciptionAsync(string qualityAuditNo, string knowledge, string cognitiveskills, string subjectspecific, string userCode, string password, object userState) {
            if ((this.AddAspectDesciptionOperationCompleted == null)) {
                this.AddAspectDesciptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAspectDesciptionOperationCompleted);
            }
            this.InvokeAsync("AddAspectDesciption", new object[] {
                        qualityAuditNo,
                        knowledge,
                        cognitiveskills,
                        subjectspecific,
                        userCode,
                        password}, this.AddAspectDesciptionOperationCompleted, userState);
        }
        
        private void OnAddAspectDesciptionOperationCompleted(object arg) {
            if ((this.AddAspectDesciptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAspectDesciptionCompleted(this, new AddAspectDesciptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgrammeObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgrammeObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeObjective(string qualityAuditNo, string objective, string userCode, string password) {
            object[] results = this.Invoke("AddProgrammeObjective", new object[] {
                        qualityAuditNo,
                        objective,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeObjectiveAsync(string qualityAuditNo, string objective, string userCode, string password) {
            this.AddProgrammeObjectiveAsync(qualityAuditNo, objective, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgrammeObjectiveAsync(string qualityAuditNo, string objective, string userCode, string password, object userState) {
            if ((this.AddProgrammeObjectiveOperationCompleted == null)) {
                this.AddProgrammeObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeObjectiveOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeObjective", new object[] {
                        qualityAuditNo,
                        objective,
                        userCode,
                        password}, this.AddProgrammeObjectiveOperationCompleted, userState);
        }
        
        private void OnAddProgrammeObjectiveOperationCompleted(object arg) {
            if ((this.AddProgrammeObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeObjectiveCompleted(this, new AddProgrammeObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCoursesDistribution", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCoursesDistribution_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCoursesDistribution(string qualityAuditNo, string year, string semester, string courses, string basicintermediate, string userCode, string password) {
            object[] results = this.Invoke("AddCoursesDistribution", new object[] {
                        qualityAuditNo,
                        year,
                        semester,
                        courses,
                        basicintermediate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCoursesDistributionAsync(string qualityAuditNo, string year, string semester, string courses, string basicintermediate, string userCode, string password) {
            this.AddCoursesDistributionAsync(qualityAuditNo, year, semester, courses, basicintermediate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCoursesDistributionAsync(string qualityAuditNo, string year, string semester, string courses, string basicintermediate, string userCode, string password, object userState) {
            if ((this.AddCoursesDistributionOperationCompleted == null)) {
                this.AddCoursesDistributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCoursesDistributionOperationCompleted);
            }
            this.InvokeAsync("AddCoursesDistribution", new object[] {
                        qualityAuditNo,
                        year,
                        semester,
                        courses,
                        basicintermediate,
                        userCode,
                        password}, this.AddCoursesDistributionOperationCompleted, userState);
        }
        
        private void OnAddCoursesDistributionOperationCompleted(object arg) {
            if ((this.AddCoursesDistributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCoursesDistributionCompleted(this, new AddCoursesDistributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalHoursDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalHoursDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalHoursDetails(string qualityAuditNo, string instructionalhours, string programmerationale, bool changestructure, string changereasons, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalHoursDetails", new object[] {
                        qualityAuditNo,
                        instructionalhours,
                        programmerationale,
                        changestructure,
                        changereasons,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalHoursDetailsAsync(string qualityAuditNo, string instructionalhours, string programmerationale, bool changestructure, string changereasons, string userCode, string password) {
            this.AddInstructionalHoursDetailsAsync(qualityAuditNo, instructionalhours, programmerationale, changestructure, changereasons, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalHoursDetailsAsync(string qualityAuditNo, string instructionalhours, string programmerationale, bool changestructure, string changereasons, string userCode, string password, object userState) {
            if ((this.AddInstructionalHoursDetailsOperationCompleted == null)) {
                this.AddInstructionalHoursDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalHoursDetailsOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalHoursDetails", new object[] {
                        qualityAuditNo,
                        instructionalhours,
                        programmerationale,
                        changestructure,
                        changereasons,
                        userCode,
                        password}, this.AddInstructionalHoursDetailsOperationCompleted, userState);
        }
        
        private void OnAddInstructionalHoursDetailsOperationCompleted(object arg) {
            if ((this.AddInstructionalHoursDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalHoursDetailsCompleted(this, new AddInstructionalHoursDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseHoursDistribution", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseHoursDistribution_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseHoursDistribution(string qualityAuditNo, string subjectarea, string unitdetails, string contacthours, string userCode, string password) {
            object[] results = this.Invoke("AddCourseHoursDistribution", new object[] {
                        qualityAuditNo,
                        subjectarea,
                        unitdetails,
                        contacthours,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseHoursDistributionAsync(string qualityAuditNo, string subjectarea, string unitdetails, string contacthours, string userCode, string password) {
            this.AddCourseHoursDistributionAsync(qualityAuditNo, subjectarea, unitdetails, contacthours, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseHoursDistributionAsync(string qualityAuditNo, string subjectarea, string unitdetails, string contacthours, string userCode, string password, object userState) {
            if ((this.AddCourseHoursDistributionOperationCompleted == null)) {
                this.AddCourseHoursDistributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseHoursDistributionOperationCompleted);
            }
            this.InvokeAsync("AddCourseHoursDistribution", new object[] {
                        qualityAuditNo,
                        subjectarea,
                        unitdetails,
                        contacthours,
                        userCode,
                        password}, this.AddCourseHoursDistributionOperationCompleted, userState);
        }
        
        private void OnAddCourseHoursDistributionOperationCompleted(object arg) {
            if ((this.AddCourseHoursDistributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseHoursDistributionCompleted(this, new AddCourseHoursDistributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalHours", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalHours_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalHours(string qualityAuditNo, string labhours, string attachmenthours, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalHours", new object[] {
                        qualityAuditNo,
                        labhours,
                        attachmenthours,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalHoursAsync(string qualityAuditNo, string labhours, string attachmenthours, string userCode, string password) {
            this.AddInstructionalHoursAsync(qualityAuditNo, labhours, attachmenthours, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalHoursAsync(string qualityAuditNo, string labhours, string attachmenthours, string userCode, string password, object userState) {
            if ((this.AddInstructionalHoursOperationCompleted == null)) {
                this.AddInstructionalHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalHoursOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalHours", new object[] {
                        qualityAuditNo,
                        labhours,
                        attachmenthours,
                        userCode,
                        password}, this.AddInstructionalHoursOperationCompleted, userState);
        }
        
        private void OnAddInstructionalHoursOperationCompleted(object arg) {
            if ((this.AddInstructionalHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalHoursCompleted(this, new AddInstructionalHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgrammeCommunicationDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgrammeCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeCommunicationDetails(string qualityAuditNo, bool madepublic, bool staffcommunication, bool studentscommunication, bool employerscommunications, bool statutorycommunications, bool requlatorycommunications, string userCode, string password) {
            object[] results = this.Invoke("AddProgrammeCommunicationDetails", new object[] {
                        qualityAuditNo,
                        madepublic,
                        staffcommunication,
                        studentscommunication,
                        employerscommunications,
                        statutorycommunications,
                        requlatorycommunications,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeCommunicationDetailsAsync(string qualityAuditNo, bool madepublic, bool staffcommunication, bool studentscommunication, bool employerscommunications, bool statutorycommunications, bool requlatorycommunications, string userCode, string password) {
            this.AddProgrammeCommunicationDetailsAsync(qualityAuditNo, madepublic, staffcommunication, studentscommunication, employerscommunications, statutorycommunications, requlatorycommunications, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgrammeCommunicationDetailsAsync(string qualityAuditNo, bool madepublic, bool staffcommunication, bool studentscommunication, bool employerscommunications, bool statutorycommunications, bool requlatorycommunications, string userCode, string password, object userState) {
            if ((this.AddProgrammeCommunicationDetailsOperationCompleted == null)) {
                this.AddProgrammeCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeCommunicationDetails", new object[] {
                        qualityAuditNo,
                        madepublic,
                        staffcommunication,
                        studentscommunication,
                        employerscommunications,
                        statutorycommunications,
                        requlatorycommunications,
                        userCode,
                        password}, this.AddProgrammeCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnAddProgrammeCommunicationDetailsOperationCompleted(object arg) {
            if ((this.AddProgrammeCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeCommunicationDetailsCompleted(this, new AddProgrammeCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgrammeContent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgrammeContent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeContent(string qualityAuditNo, bool programmereviewed, string userCode, string password) {
            object[] results = this.Invoke("AddProgrammeContent", new object[] {
                        qualityAuditNo,
                        programmereviewed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeContentAsync(string qualityAuditNo, bool programmereviewed, string userCode, string password) {
            this.AddProgrammeContentAsync(qualityAuditNo, programmereviewed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgrammeContentAsync(string qualityAuditNo, bool programmereviewed, string userCode, string password, object userState) {
            if ((this.AddProgrammeContentOperationCompleted == null)) {
                this.AddProgrammeContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeContentOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeContent", new object[] {
                        qualityAuditNo,
                        programmereviewed,
                        userCode,
                        password}, this.AddProgrammeContentOperationCompleted, userState);
        }
        
        private void OnAddProgrammeContentOperationCompleted(object arg) {
            if ((this.AddProgrammeContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeContentCompleted(this, new AddProgrammeContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgrammeOrganization", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgrammeOrganization_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeOrganization(string qualityAuditNo, bool semesters, bool trimesters, bool quaters, string othercalender, bool creditsystem, string creditscalculation, bool studentsfeedback, bool academicstafffeddback, bool alumnifeedback, string userCode, string password) {
            object[] results = this.Invoke("AddProgrammeOrganization", new object[] {
                        qualityAuditNo,
                        semesters,
                        trimesters,
                        quaters,
                        othercalender,
                        creditsystem,
                        creditscalculation,
                        studentsfeedback,
                        academicstafffeddback,
                        alumnifeedback,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeOrganizationAsync(string qualityAuditNo, bool semesters, bool trimesters, bool quaters, string othercalender, bool creditsystem, string creditscalculation, bool studentsfeedback, bool academicstafffeddback, bool alumnifeedback, string userCode, string password) {
            this.AddProgrammeOrganizationAsync(qualityAuditNo, semesters, trimesters, quaters, othercalender, creditsystem, creditscalculation, studentsfeedback, academicstafffeddback, alumnifeedback, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgrammeOrganizationAsync(string qualityAuditNo, bool semesters, bool trimesters, bool quaters, string othercalender, bool creditsystem, string creditscalculation, bool studentsfeedback, bool academicstafffeddback, bool alumnifeedback, string userCode, string password, object userState) {
            if ((this.AddProgrammeOrganizationOperationCompleted == null)) {
                this.AddProgrammeOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeOrganizationOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeOrganization", new object[] {
                        qualityAuditNo,
                        semesters,
                        trimesters,
                        quaters,
                        othercalender,
                        creditsystem,
                        creditscalculation,
                        studentsfeedback,
                        academicstafffeddback,
                        alumnifeedback,
                        userCode,
                        password}, this.AddProgrammeOrganizationOperationCompleted, userState);
        }
        
        private void OnAddProgrammeOrganizationOperationCompleted(object arg) {
            if ((this.AddProgrammeOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeOrganizationCompleted(this, new AddProgrammeOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDidacticConcept", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDidacticConcept_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDidacticConcept(
                    string qualityAuditNo, 
                    bool lecture, 
                    bool discussion, 
                    bool question, 
                    bool brainstorming, 
                    bool buzzgroups, 
                    bool roleplays, 
                    bool classexperiment, 
                    bool projectcase, 
                    bool demonstration, 
                    bool fieldstudy, 
                    bool ictintergrated, 
                    bool researchpartofprogramme, 
                    string researchmethodyear, 
                    bool courseexposeresearchmethod, 
                    string semestermethod, 
                    bool programmerequireinternship, 
                    string typeofattachment, 
                    string durationofattachment, 
                    string creditpoints, 
                    bool attachmentcompulsory, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddDidacticConcept", new object[] {
                        qualityAuditNo,
                        lecture,
                        discussion,
                        question,
                        brainstorming,
                        buzzgroups,
                        roleplays,
                        classexperiment,
                        projectcase,
                        demonstration,
                        fieldstudy,
                        ictintergrated,
                        researchpartofprogramme,
                        researchmethodyear,
                        courseexposeresearchmethod,
                        semestermethod,
                        programmerequireinternship,
                        typeofattachment,
                        durationofattachment,
                        creditpoints,
                        attachmentcompulsory,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDidacticConceptAsync(
                    string qualityAuditNo, 
                    bool lecture, 
                    bool discussion, 
                    bool question, 
                    bool brainstorming, 
                    bool buzzgroups, 
                    bool roleplays, 
                    bool classexperiment, 
                    bool projectcase, 
                    bool demonstration, 
                    bool fieldstudy, 
                    bool ictintergrated, 
                    bool researchpartofprogramme, 
                    string researchmethodyear, 
                    bool courseexposeresearchmethod, 
                    string semestermethod, 
                    bool programmerequireinternship, 
                    string typeofattachment, 
                    string durationofattachment, 
                    string creditpoints, 
                    bool attachmentcompulsory, 
                    string userCode, 
                    string password) {
            this.AddDidacticConceptAsync(qualityAuditNo, lecture, discussion, question, brainstorming, buzzgroups, roleplays, classexperiment, projectcase, demonstration, fieldstudy, ictintergrated, researchpartofprogramme, researchmethodyear, courseexposeresearchmethod, semestermethod, programmerequireinternship, typeofattachment, durationofattachment, creditpoints, attachmentcompulsory, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDidacticConceptAsync(
                    string qualityAuditNo, 
                    bool lecture, 
                    bool discussion, 
                    bool question, 
                    bool brainstorming, 
                    bool buzzgroups, 
                    bool roleplays, 
                    bool classexperiment, 
                    bool projectcase, 
                    bool demonstration, 
                    bool fieldstudy, 
                    bool ictintergrated, 
                    bool researchpartofprogramme, 
                    string researchmethodyear, 
                    bool courseexposeresearchmethod, 
                    string semestermethod, 
                    bool programmerequireinternship, 
                    string typeofattachment, 
                    string durationofattachment, 
                    string creditpoints, 
                    bool attachmentcompulsory, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddDidacticConceptOperationCompleted == null)) {
                this.AddDidacticConceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDidacticConceptOperationCompleted);
            }
            this.InvokeAsync("AddDidacticConcept", new object[] {
                        qualityAuditNo,
                        lecture,
                        discussion,
                        question,
                        brainstorming,
                        buzzgroups,
                        roleplays,
                        classexperiment,
                        projectcase,
                        demonstration,
                        fieldstudy,
                        ictintergrated,
                        researchpartofprogramme,
                        researchmethodyear,
                        courseexposeresearchmethod,
                        semestermethod,
                        programmerequireinternship,
                        typeofattachment,
                        durationofattachment,
                        creditpoints,
                        attachmentcompulsory,
                        userCode,
                        password}, this.AddDidacticConceptOperationCompleted, userState);
        }
        
        private void OnAddDidacticConceptOperationCompleted(object arg) {
            if ((this.AddDidacticConceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDidacticConceptCompleted(this, new AddDidacticConceptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInternshipStrenghts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInternshipStrenghts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInternshipStrenghts(string qualityAuditNo, string strenghtdescription, string userCode, string password) {
            object[] results = this.Invoke("AddInternshipStrenghts", new object[] {
                        qualityAuditNo,
                        strenghtdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInternshipStrenghtsAsync(string qualityAuditNo, string strenghtdescription, string userCode, string password) {
            this.AddInternshipStrenghtsAsync(qualityAuditNo, strenghtdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInternshipStrenghtsAsync(string qualityAuditNo, string strenghtdescription, string userCode, string password, object userState) {
            if ((this.AddInternshipStrenghtsOperationCompleted == null)) {
                this.AddInternshipStrenghtsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInternshipStrenghtsOperationCompleted);
            }
            this.InvokeAsync("AddInternshipStrenghts", new object[] {
                        qualityAuditNo,
                        strenghtdescription,
                        userCode,
                        password}, this.AddInternshipStrenghtsOperationCompleted, userState);
        }
        
        private void OnAddInternshipStrenghtsOperationCompleted(object arg) {
            if ((this.AddInternshipStrenghtsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInternshipStrenghtsCompleted(this, new AddInternshipStrenghtsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInternshipWeaknesses", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInternshipWeaknesses_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInternshipWeaknesses(string qualityAuditNo, string weaknessdescription, string userCode, string password) {
            object[] results = this.Invoke("AddInternshipWeaknesses", new object[] {
                        qualityAuditNo,
                        weaknessdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInternshipWeaknessesAsync(string qualityAuditNo, string weaknessdescription, string userCode, string password) {
            this.AddInternshipWeaknessesAsync(qualityAuditNo, weaknessdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInternshipWeaknessesAsync(string qualityAuditNo, string weaknessdescription, string userCode, string password, object userState) {
            if ((this.AddInternshipWeaknessesOperationCompleted == null)) {
                this.AddInternshipWeaknessesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInternshipWeaknessesOperationCompleted);
            }
            this.InvokeAsync("AddInternshipWeaknesses", new object[] {
                        qualityAuditNo,
                        weaknessdescription,
                        userCode,
                        password}, this.AddInternshipWeaknessesOperationCompleted, userState);
        }
        
        private void OnAddInternshipWeaknessesOperationCompleted(object arg) {
            if ((this.AddInternshipWeaknessesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInternshipWeaknessesCompleted(this, new AddInternshipWeaknessesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOtherDidecticStrength", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOtherDidecticStrength_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherDidecticStrength(string qualityAuditNo, string strenghtdescription, string userCode, string password) {
            object[] results = this.Invoke("AddOtherDidecticStrength", new object[] {
                        qualityAuditNo,
                        strenghtdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherDidecticStrengthAsync(string qualityAuditNo, string strenghtdescription, string userCode, string password) {
            this.AddOtherDidecticStrengthAsync(qualityAuditNo, strenghtdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddOtherDidecticStrengthAsync(string qualityAuditNo, string strenghtdescription, string userCode, string password, object userState) {
            if ((this.AddOtherDidecticStrengthOperationCompleted == null)) {
                this.AddOtherDidecticStrengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherDidecticStrengthOperationCompleted);
            }
            this.InvokeAsync("AddOtherDidecticStrength", new object[] {
                        qualityAuditNo,
                        strenghtdescription,
                        userCode,
                        password}, this.AddOtherDidecticStrengthOperationCompleted, userState);
        }
        
        private void OnAddOtherDidecticStrengthOperationCompleted(object arg) {
            if ((this.AddOtherDidecticStrengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherDidecticStrengthCompleted(this, new AddOtherDidecticStrengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOtherDidecticWeaknesses", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOtherDidecticWeaknesses_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherDidecticWeaknesses(string qualityAuditNo, string weaknessdescription, string userCode, string password) {
            object[] results = this.Invoke("AddOtherDidecticWeaknesses", new object[] {
                        qualityAuditNo,
                        weaknessdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherDidecticWeaknessesAsync(string qualityAuditNo, string weaknessdescription, string userCode, string password) {
            this.AddOtherDidecticWeaknessesAsync(qualityAuditNo, weaknessdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddOtherDidecticWeaknessesAsync(string qualityAuditNo, string weaknessdescription, string userCode, string password, object userState) {
            if ((this.AddOtherDidecticWeaknessesOperationCompleted == null)) {
                this.AddOtherDidecticWeaknessesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherDidecticWeaknessesOperationCompleted);
            }
            this.InvokeAsync("AddOtherDidecticWeaknesses", new object[] {
                        qualityAuditNo,
                        weaknessdescription,
                        userCode,
                        password}, this.AddOtherDidecticWeaknessesOperationCompleted, userState);
        }
        
        private void OnAddOtherDidecticWeaknessesOperationCompleted(object arg) {
            if ((this.AddOtherDidecticWeaknessesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherDidecticWeaknessesCompleted(this, new AddOtherDidecticWeaknessesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsAssessment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsAssessment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsAssessment(string qualityAuditNo, bool sitincats, bool takewaycats, bool termpapers, bool sitinexams, bool resitegxams, bool retakeegxams, bool supegxams, string resultsduration, bool usegpasystem, string userCode, string password) {
            object[] results = this.Invoke("AddStudentsAssessment", new object[] {
                        qualityAuditNo,
                        sitincats,
                        takewaycats,
                        termpapers,
                        sitinexams,
                        resitegxams,
                        retakeegxams,
                        supegxams,
                        resultsduration,
                        usegpasystem,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsAssessmentAsync(string qualityAuditNo, bool sitincats, bool takewaycats, bool termpapers, bool sitinexams, bool resitegxams, bool retakeegxams, bool supegxams, string resultsduration, bool usegpasystem, string userCode, string password) {
            this.AddStudentsAssessmentAsync(qualityAuditNo, sitincats, takewaycats, termpapers, sitinexams, resitegxams, retakeegxams, supegxams, resultsduration, usegpasystem, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsAssessmentAsync(string qualityAuditNo, bool sitincats, bool takewaycats, bool termpapers, bool sitinexams, bool resitegxams, bool retakeegxams, bool supegxams, string resultsduration, bool usegpasystem, string userCode, string password, object userState) {
            if ((this.AddStudentsAssessmentOperationCompleted == null)) {
                this.AddStudentsAssessmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsAssessmentOperationCompleted);
            }
            this.InvokeAsync("AddStudentsAssessment", new object[] {
                        qualityAuditNo,
                        sitincats,
                        takewaycats,
                        termpapers,
                        sitinexams,
                        resitegxams,
                        retakeegxams,
                        supegxams,
                        resultsduration,
                        usegpasystem,
                        userCode,
                        password}, this.AddStudentsAssessmentOperationCompleted, userState);
        }
        
        private void OnAddStudentsAssessmentOperationCompleted(object arg) {
            if ((this.AddStudentsAssessmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsAssessmentCompleted(this, new AddStudentsAssessmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgrammeGrading", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgrammeGrading_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeGrading(string qualityAuditNo, string universitynumber, string gradeAscorerange, string gradeAGPApoints, string gradeBscorerange, string gradeBGPApoints, string gradeCscorerange, string gradeCGPApoints, string gradeDscorerange, string gradeDGPApoints, string gradeEscorerange, string gradeEGPApoints) {
            object[] results = this.Invoke("AddProgrammeGrading", new object[] {
                        qualityAuditNo,
                        universitynumber,
                        gradeAscorerange,
                        gradeAGPApoints,
                        gradeBscorerange,
                        gradeBGPApoints,
                        gradeCscorerange,
                        gradeCGPApoints,
                        gradeDscorerange,
                        gradeDGPApoints,
                        gradeEscorerange,
                        gradeEGPApoints});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeGradingAsync(string qualityAuditNo, string universitynumber, string gradeAscorerange, string gradeAGPApoints, string gradeBscorerange, string gradeBGPApoints, string gradeCscorerange, string gradeCGPApoints, string gradeDscorerange, string gradeDGPApoints, string gradeEscorerange, string gradeEGPApoints) {
            this.AddProgrammeGradingAsync(qualityAuditNo, universitynumber, gradeAscorerange, gradeAGPApoints, gradeBscorerange, gradeBGPApoints, gradeCscorerange, gradeCGPApoints, gradeDscorerange, gradeDGPApoints, gradeEscorerange, gradeEGPApoints, null);
        }
        
        /// <remarks/>
        public void AddProgrammeGradingAsync(string qualityAuditNo, string universitynumber, string gradeAscorerange, string gradeAGPApoints, string gradeBscorerange, string gradeBGPApoints, string gradeCscorerange, string gradeCGPApoints, string gradeDscorerange, string gradeDGPApoints, string gradeEscorerange, string gradeEGPApoints, object userState) {
            if ((this.AddProgrammeGradingOperationCompleted == null)) {
                this.AddProgrammeGradingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeGradingOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeGrading", new object[] {
                        qualityAuditNo,
                        universitynumber,
                        gradeAscorerange,
                        gradeAGPApoints,
                        gradeBscorerange,
                        gradeBGPApoints,
                        gradeCscorerange,
                        gradeCGPApoints,
                        gradeDscorerange,
                        gradeDGPApoints,
                        gradeEscorerange,
                        gradeEGPApoints}, this.AddProgrammeGradingOperationCompleted, userState);
        }
        
        private void OnAddProgrammeGradingOperationCompleted(object arg) {
            if ((this.AddProgrammeGradingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeGradingCompleted(this, new AddProgrammeGradingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAntiPlagiarismDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAntiPlagiarismDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAntiPlagiarismDetails(
                    string qualityAuditNo, 
                    string universitynumber, 
                    bool passfailcreteria, 
                    bool memos, 
                    bool newsletters, 
                    bool meetings, 
                    bool conferences, 
                    bool announcements, 
                    bool studentshandbook, 
                    bool studentswebsite, 
                    string othercommunication, 
                    bool studentscomplaintsmechanism, 
                    bool examinationboard, 
                    bool antiplagiarismpolicy, 
                    bool antiplagiarismsoftware, 
                    bool curbingantiplagiarism) {
            object[] results = this.Invoke("AddAntiPlagiarismDetails", new object[] {
                        qualityAuditNo,
                        universitynumber,
                        passfailcreteria,
                        memos,
                        newsletters,
                        meetings,
                        conferences,
                        announcements,
                        studentshandbook,
                        studentswebsite,
                        othercommunication,
                        studentscomplaintsmechanism,
                        examinationboard,
                        antiplagiarismpolicy,
                        antiplagiarismsoftware,
                        curbingantiplagiarism});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAntiPlagiarismDetailsAsync(
                    string qualityAuditNo, 
                    string universitynumber, 
                    bool passfailcreteria, 
                    bool memos, 
                    bool newsletters, 
                    bool meetings, 
                    bool conferences, 
                    bool announcements, 
                    bool studentshandbook, 
                    bool studentswebsite, 
                    string othercommunication, 
                    bool studentscomplaintsmechanism, 
                    bool examinationboard, 
                    bool antiplagiarismpolicy, 
                    bool antiplagiarismsoftware, 
                    bool curbingantiplagiarism) {
            this.AddAntiPlagiarismDetailsAsync(qualityAuditNo, universitynumber, passfailcreteria, memos, newsletters, meetings, conferences, announcements, studentshandbook, studentswebsite, othercommunication, studentscomplaintsmechanism, examinationboard, antiplagiarismpolicy, antiplagiarismsoftware, curbingantiplagiarism, null);
        }
        
        /// <remarks/>
        public void AddAntiPlagiarismDetailsAsync(
                    string qualityAuditNo, 
                    string universitynumber, 
                    bool passfailcreteria, 
                    bool memos, 
                    bool newsletters, 
                    bool meetings, 
                    bool conferences, 
                    bool announcements, 
                    bool studentshandbook, 
                    bool studentswebsite, 
                    string othercommunication, 
                    bool studentscomplaintsmechanism, 
                    bool examinationboard, 
                    bool antiplagiarismpolicy, 
                    bool antiplagiarismsoftware, 
                    bool curbingantiplagiarism, 
                    object userState) {
            if ((this.AddAntiPlagiarismDetailsOperationCompleted == null)) {
                this.AddAntiPlagiarismDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAntiPlagiarismDetailsOperationCompleted);
            }
            this.InvokeAsync("AddAntiPlagiarismDetails", new object[] {
                        qualityAuditNo,
                        universitynumber,
                        passfailcreteria,
                        memos,
                        newsletters,
                        meetings,
                        conferences,
                        announcements,
                        studentshandbook,
                        studentswebsite,
                        othercommunication,
                        studentscomplaintsmechanism,
                        examinationboard,
                        antiplagiarismpolicy,
                        antiplagiarismsoftware,
                        curbingantiplagiarism}, this.AddAntiPlagiarismDetailsOperationCompleted, userState);
        }
        
        private void OnAddAntiPlagiarismDetailsOperationCompleted(object arg) {
            if ((this.AddAntiPlagiarismDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAntiPlagiarismDetailsCompleted(this, new AddAntiPlagiarismDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicLeaderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicLeaderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicLeaderDetails(string qualityAuditNo, string idnumber, string fullname, string teachingexprience, string bachelorspecialization, string mastersspecialization, string doctoratespecialization, string termsofservice, string highestacademicqualifications, string userCode, string password) {
            object[] results = this.Invoke("AddAcademicLeaderDetails", new object[] {
                        qualityAuditNo,
                        idnumber,
                        fullname,
                        teachingexprience,
                        bachelorspecialization,
                        mastersspecialization,
                        doctoratespecialization,
                        termsofservice,
                        highestacademicqualifications,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicLeaderDetailsAsync(string qualityAuditNo, string idnumber, string fullname, string teachingexprience, string bachelorspecialization, string mastersspecialization, string doctoratespecialization, string termsofservice, string highestacademicqualifications, string userCode, string password) {
            this.AddAcademicLeaderDetailsAsync(qualityAuditNo, idnumber, fullname, teachingexprience, bachelorspecialization, mastersspecialization, doctoratespecialization, termsofservice, highestacademicqualifications, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddAcademicLeaderDetailsAsync(string qualityAuditNo, string idnumber, string fullname, string teachingexprience, string bachelorspecialization, string mastersspecialization, string doctoratespecialization, string termsofservice, string highestacademicqualifications, string userCode, string password, object userState) {
            if ((this.AddAcademicLeaderDetailsOperationCompleted == null)) {
                this.AddAcademicLeaderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicLeaderDetailsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicLeaderDetails", new object[] {
                        qualityAuditNo,
                        idnumber,
                        fullname,
                        teachingexprience,
                        bachelorspecialization,
                        mastersspecialization,
                        doctoratespecialization,
                        termsofservice,
                        highestacademicqualifications,
                        userCode,
                        password}, this.AddAcademicLeaderDetailsOperationCompleted, userState);
        }
        
        private void OnAddAcademicLeaderDetailsOperationCompleted(object arg) {
            if ((this.AddAcademicLeaderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicLeaderDetailsCompleted(this, new AddAcademicLeaderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNonTeachingStaffSize", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNonTeachingStaffSize_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonTeachingStaffSize(string qualityAuditNo, string labstaff, string computerstaff, string administrativestaff, string workshopstaff, string educationstaff, string userCode, string password) {
            object[] results = this.Invoke("AddNonTeachingStaffSize", new object[] {
                        qualityAuditNo,
                        labstaff,
                        computerstaff,
                        administrativestaff,
                        workshopstaff,
                        educationstaff,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonTeachingStaffSizeAsync(string qualityAuditNo, string labstaff, string computerstaff, string administrativestaff, string workshopstaff, string educationstaff, string userCode, string password) {
            this.AddNonTeachingStaffSizeAsync(qualityAuditNo, labstaff, computerstaff, administrativestaff, workshopstaff, educationstaff, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNonTeachingStaffSizeAsync(string qualityAuditNo, string labstaff, string computerstaff, string administrativestaff, string workshopstaff, string educationstaff, string userCode, string password, object userState) {
            if ((this.AddNonTeachingStaffSizeOperationCompleted == null)) {
                this.AddNonTeachingStaffSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonTeachingStaffSizeOperationCompleted);
            }
            this.InvokeAsync("AddNonTeachingStaffSize", new object[] {
                        qualityAuditNo,
                        labstaff,
                        computerstaff,
                        administrativestaff,
                        workshopstaff,
                        educationstaff,
                        userCode,
                        password}, this.AddNonTeachingStaffSizeOperationCompleted, userState);
        }
        
        private void OnAddNonTeachingStaffSizeOperationCompleted(object arg) {
            if ((this.AddNonTeachingStaffSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonTeachingStaffSizeCompleted(this, new AddNonTeachingStaffSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentProfileDetails(string qualityAuditNo, string academicyear, string governmentmale, string governmentfemale, string selfmale, string selffemale, string kenyastudents, string internationalstudents, string userCode, string password) {
            object[] results = this.Invoke("AddStudentProfileDetails", new object[] {
                        qualityAuditNo,
                        academicyear,
                        governmentmale,
                        governmentfemale,
                        selfmale,
                        selffemale,
                        kenyastudents,
                        internationalstudents,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentProfileDetailsAsync(string qualityAuditNo, string academicyear, string governmentmale, string governmentfemale, string selfmale, string selffemale, string kenyastudents, string internationalstudents, string userCode, string password) {
            this.AddStudentProfileDetailsAsync(qualityAuditNo, academicyear, governmentmale, governmentfemale, selfmale, selffemale, kenyastudents, internationalstudents, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentProfileDetailsAsync(string qualityAuditNo, string academicyear, string governmentmale, string governmentfemale, string selfmale, string selffemale, string kenyastudents, string internationalstudents, string userCode, string password, object userState) {
            if ((this.AddStudentProfileDetailsOperationCompleted == null)) {
                this.AddStudentProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("AddStudentProfileDetails", new object[] {
                        qualityAuditNo,
                        academicyear,
                        governmentmale,
                        governmentfemale,
                        selfmale,
                        selffemale,
                        kenyastudents,
                        internationalstudents,
                        userCode,
                        password}, this.AddStudentProfileDetailsOperationCompleted, userState);
        }
        
        private void OnAddStudentProfileDetailsOperationCompleted(object arg) {
            if ((this.AddStudentProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentProfileDetailsCompleted(this, new AddStudentProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentSupportDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentSupportDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentSupportDetails(
                    string qualityAuditNo, 
                    bool programmeprospectus, 
                    bool studentorientation, 
                    bool studentcoaching, 
                    bool peercounselling, 
                    bool openforaproffessional, 
                    bool openforaindustry, 
                    bool contactwithstudents, 
                    bool remidealpreveintiveaction, 
                    string otherspecify, 
                    bool coachingfirstyears, 
                    bool coachingadvancedstudents, 
                    bool studentsengageduniversity, 
                    bool evaluatestudentprospectus, 
                    bool departmentfacilities, 
                    bool universityfacilities, 
                    bool courseoptionadvice, 
                    bool changeoptionadvice, 
                    bool studiesterminationadvice, 
                    bool careerprospectinformation, 
                    bool labourmarketopportunities, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddStudentSupportDetails", new object[] {
                        qualityAuditNo,
                        programmeprospectus,
                        studentorientation,
                        studentcoaching,
                        peercounselling,
                        openforaproffessional,
                        openforaindustry,
                        contactwithstudents,
                        remidealpreveintiveaction,
                        otherspecify,
                        coachingfirstyears,
                        coachingadvancedstudents,
                        studentsengageduniversity,
                        evaluatestudentprospectus,
                        departmentfacilities,
                        universityfacilities,
                        courseoptionadvice,
                        changeoptionadvice,
                        studiesterminationadvice,
                        careerprospectinformation,
                        labourmarketopportunities,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentSupportDetailsAsync(
                    string qualityAuditNo, 
                    bool programmeprospectus, 
                    bool studentorientation, 
                    bool studentcoaching, 
                    bool peercounselling, 
                    bool openforaproffessional, 
                    bool openforaindustry, 
                    bool contactwithstudents, 
                    bool remidealpreveintiveaction, 
                    string otherspecify, 
                    bool coachingfirstyears, 
                    bool coachingadvancedstudents, 
                    bool studentsengageduniversity, 
                    bool evaluatestudentprospectus, 
                    bool departmentfacilities, 
                    bool universityfacilities, 
                    bool courseoptionadvice, 
                    bool changeoptionadvice, 
                    bool studiesterminationadvice, 
                    bool careerprospectinformation, 
                    bool labourmarketopportunities, 
                    string userCode, 
                    string password) {
            this.AddStudentSupportDetailsAsync(qualityAuditNo, programmeprospectus, studentorientation, studentcoaching, peercounselling, openforaproffessional, openforaindustry, contactwithstudents, remidealpreveintiveaction, otherspecify, coachingfirstyears, coachingadvancedstudents, studentsengageduniversity, evaluatestudentprospectus, departmentfacilities, universityfacilities, courseoptionadvice, changeoptionadvice, studiesterminationadvice, careerprospectinformation, labourmarketopportunities, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentSupportDetailsAsync(
                    string qualityAuditNo, 
                    bool programmeprospectus, 
                    bool studentorientation, 
                    bool studentcoaching, 
                    bool peercounselling, 
                    bool openforaproffessional, 
                    bool openforaindustry, 
                    bool contactwithstudents, 
                    bool remidealpreveintiveaction, 
                    string otherspecify, 
                    bool coachingfirstyears, 
                    bool coachingadvancedstudents, 
                    bool studentsengageduniversity, 
                    bool evaluatestudentprospectus, 
                    bool departmentfacilities, 
                    bool universityfacilities, 
                    bool courseoptionadvice, 
                    bool changeoptionadvice, 
                    bool studiesterminationadvice, 
                    bool careerprospectinformation, 
                    bool labourmarketopportunities, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddStudentSupportDetailsOperationCompleted == null)) {
                this.AddStudentSupportDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentSupportDetailsOperationCompleted);
            }
            this.InvokeAsync("AddStudentSupportDetails", new object[] {
                        qualityAuditNo,
                        programmeprospectus,
                        studentorientation,
                        studentcoaching,
                        peercounselling,
                        openforaproffessional,
                        openforaindustry,
                        contactwithstudents,
                        remidealpreveintiveaction,
                        otherspecify,
                        coachingfirstyears,
                        coachingadvancedstudents,
                        studentsengageduniversity,
                        evaluatestudentprospectus,
                        departmentfacilities,
                        universityfacilities,
                        courseoptionadvice,
                        changeoptionadvice,
                        studiesterminationadvice,
                        careerprospectinformation,
                        labourmarketopportunities,
                        userCode,
                        password}, this.AddStudentSupportDetailsOperationCompleted, userState);
        }
        
        private void OnAddStudentSupportDetailsOperationCompleted(object arg) {
            if ((this.AddStudentSupportDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentSupportDetailsCompleted(this, new AddStudentSupportDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentEvaluation(string qualityAuditNo, bool evaluateprogramme, bool evaluateprogrammefacilities, bool evaluatedeliverymethods, bool evaluateinsturtors, bool studentsevaluationoutcomes, bool staffevaluationoutcomes, string otherspecify, string userCode, string password) {
            object[] results = this.Invoke("AddStudentEvaluation", new object[] {
                        qualityAuditNo,
                        evaluateprogramme,
                        evaluateprogrammefacilities,
                        evaluatedeliverymethods,
                        evaluateinsturtors,
                        studentsevaluationoutcomes,
                        staffevaluationoutcomes,
                        otherspecify,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentEvaluationAsync(string qualityAuditNo, bool evaluateprogramme, bool evaluateprogrammefacilities, bool evaluatedeliverymethods, bool evaluateinsturtors, bool studentsevaluationoutcomes, bool staffevaluationoutcomes, string otherspecify, string userCode, string password) {
            this.AddStudentEvaluationAsync(qualityAuditNo, evaluateprogramme, evaluateprogrammefacilities, evaluatedeliverymethods, evaluateinsturtors, studentsevaluationoutcomes, staffevaluationoutcomes, otherspecify, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStudentEvaluationAsync(string qualityAuditNo, bool evaluateprogramme, bool evaluateprogrammefacilities, bool evaluatedeliverymethods, bool evaluateinsturtors, bool studentsevaluationoutcomes, bool staffevaluationoutcomes, string otherspecify, string userCode, string password, object userState) {
            if ((this.AddStudentEvaluationOperationCompleted == null)) {
                this.AddStudentEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentEvaluationOperationCompleted);
            }
            this.InvokeAsync("AddStudentEvaluation", new object[] {
                        qualityAuditNo,
                        evaluateprogramme,
                        evaluateprogrammefacilities,
                        evaluatedeliverymethods,
                        evaluateinsturtors,
                        studentsevaluationoutcomes,
                        staffevaluationoutcomes,
                        otherspecify,
                        userCode,
                        password}, this.AddStudentEvaluationOperationCompleted, userState);
        }
        
        private void OnAddStudentEvaluationOperationCompleted(object arg) {
            if ((this.AddStudentEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentEvaluationCompleted(this, new AddStudentEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCurriculumnDesignDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCurriculumnDesignDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurriculumnDesignDetails(string qualityAuditNo, bool needassement, bool universityniche, bool employertracerstudies, bool benchmarking, bool departmentcollaboration, bool curriculumnlevel, bool courselevel, bool studentsinvolved, bool studentslecturersknow, bool subsequentreviews, string userCode, string password) {
            object[] results = this.Invoke("AddCurriculumnDesignDetails", new object[] {
                        qualityAuditNo,
                        needassement,
                        universityniche,
                        employertracerstudies,
                        benchmarking,
                        departmentcollaboration,
                        curriculumnlevel,
                        courselevel,
                        studentsinvolved,
                        studentslecturersknow,
                        subsequentreviews,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignDetailsAsync(string qualityAuditNo, bool needassement, bool universityniche, bool employertracerstudies, bool benchmarking, bool departmentcollaboration, bool curriculumnlevel, bool courselevel, bool studentsinvolved, bool studentslecturersknow, bool subsequentreviews, string userCode, string password) {
            this.AddCurriculumnDesignDetailsAsync(qualityAuditNo, needassement, universityniche, employertracerstudies, benchmarking, departmentcollaboration, curriculumnlevel, courselevel, studentsinvolved, studentslecturersknow, subsequentreviews, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCurriculumnDesignDetailsAsync(string qualityAuditNo, bool needassement, bool universityniche, bool employertracerstudies, bool benchmarking, bool departmentcollaboration, bool curriculumnlevel, bool courselevel, bool studentsinvolved, bool studentslecturersknow, bool subsequentreviews, string userCode, string password, object userState) {
            if ((this.AddCurriculumnDesignDetailsOperationCompleted == null)) {
                this.AddCurriculumnDesignDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurriculumnDesignDetailsOperationCompleted);
            }
            this.InvokeAsync("AddCurriculumnDesignDetails", new object[] {
                        qualityAuditNo,
                        needassement,
                        universityniche,
                        employertracerstudies,
                        benchmarking,
                        departmentcollaboration,
                        curriculumnlevel,
                        courselevel,
                        studentsinvolved,
                        studentslecturersknow,
                        subsequentreviews,
                        userCode,
                        password}, this.AddCurriculumnDesignDetailsOperationCompleted, userState);
        }
        
        private void OnAddCurriculumnDesignDetailsOperationCompleted(object arg) {
            if ((this.AddCurriculumnDesignDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurriculumnDesignDetailsCompleted(this, new AddCurriculumnDesignDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStaffDevelopmentActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStaffDevelopmentActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStaffDevelopmentActivities(string qualityAuditNo, bool curriculumndesign, bool testdevelopmentconstruction, bool teachingskills, bool ictintergration, bool teachingabilities, bool pursuefurtherstudies, string userCode, string password) {
            object[] results = this.Invoke("AddStaffDevelopmentActivities", new object[] {
                        qualityAuditNo,
                        curriculumndesign,
                        testdevelopmentconstruction,
                        teachingskills,
                        ictintergration,
                        teachingabilities,
                        pursuefurtherstudies,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStaffDevelopmentActivitiesAsync(string qualityAuditNo, bool curriculumndesign, bool testdevelopmentconstruction, bool teachingskills, bool ictintergration, bool teachingabilities, bool pursuefurtherstudies, string userCode, string password) {
            this.AddStaffDevelopmentActivitiesAsync(qualityAuditNo, curriculumndesign, testdevelopmentconstruction, teachingskills, ictintergration, teachingabilities, pursuefurtherstudies, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStaffDevelopmentActivitiesAsync(string qualityAuditNo, bool curriculumndesign, bool testdevelopmentconstruction, bool teachingskills, bool ictintergration, bool teachingabilities, bool pursuefurtherstudies, string userCode, string password, object userState) {
            if ((this.AddStaffDevelopmentActivitiesOperationCompleted == null)) {
                this.AddStaffDevelopmentActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStaffDevelopmentActivitiesOperationCompleted);
            }
            this.InvokeAsync("AddStaffDevelopmentActivities", new object[] {
                        qualityAuditNo,
                        curriculumndesign,
                        testdevelopmentconstruction,
                        teachingskills,
                        ictintergration,
                        teachingabilities,
                        pursuefurtherstudies,
                        userCode,
                        password}, this.AddStaffDevelopmentActivitiesOperationCompleted, userState);
        }
        
        private void OnAddStaffDevelopmentActivitiesOperationCompleted(object arg) {
            if ((this.AddStaffDevelopmentActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStaffDevelopmentActivitiesCompleted(this, new AddStaffDevelopmentActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBenchmarking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBenchmarking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBenchmarking(string qualityAuditNo, bool policybenhcmarking, bool benchmarkinganalysed, bool decisionmaking, string userCode, string password) {
            object[] results = this.Invoke("AddBenchmarking", new object[] {
                        qualityAuditNo,
                        policybenhcmarking,
                        benchmarkinganalysed,
                        decisionmaking,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBenchmarkingAsync(string qualityAuditNo, bool policybenhcmarking, bool benchmarkinganalysed, bool decisionmaking, string userCode, string password) {
            this.AddBenchmarkingAsync(qualityAuditNo, policybenhcmarking, benchmarkinganalysed, decisionmaking, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBenchmarkingAsync(string qualityAuditNo, bool policybenhcmarking, bool benchmarkinganalysed, bool decisionmaking, string userCode, string password, object userState) {
            if ((this.AddBenchmarkingOperationCompleted == null)) {
                this.AddBenchmarkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBenchmarkingOperationCompleted);
            }
            this.InvokeAsync("AddBenchmarking", new object[] {
                        qualityAuditNo,
                        policybenhcmarking,
                        benchmarkinganalysed,
                        decisionmaking,
                        userCode,
                        password}, this.AddBenchmarkingOperationCompleted, userState);
        }
        
        private void OnAddBenchmarkingOperationCompleted(object arg) {
            if ((this.AddBenchmarkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBenchmarkingCompleted(this, new AddBenchmarkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduatesAchievement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduatesAchievement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduatesAchievement(
                    string qualityAuditNo, 
                    bool trackingstudentssystme, 
                    bool dropoutswhereabouts, 
                    bool reasonsfordropoutdocumented, 
                    string financialchallenges, 
                    string poorsecondaryschool, 
                    string conflictwithwork, 
                    string examinationchallenges, 
                    string lackofqualitytime, 
                    string lackofpeersupport, 
                    string healthissues, 
                    string displinarygrounds, 
                    string otherspecify, 
                    bool trackinginfoused, 
                    bool employmentratewareness, 
                    bool below25unemployed, 
                    bool between2550unemployed, 
                    bool between5075unemployed, 
                    bool a48ver75unemployed, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddGraduatesAchievement", new object[] {
                        qualityAuditNo,
                        trackingstudentssystme,
                        dropoutswhereabouts,
                        reasonsfordropoutdocumented,
                        financialchallenges,
                        poorsecondaryschool,
                        conflictwithwork,
                        examinationchallenges,
                        lackofqualitytime,
                        lackofpeersupport,
                        healthissues,
                        displinarygrounds,
                        otherspecify,
                        trackinginfoused,
                        employmentratewareness,
                        below25unemployed,
                        between2550unemployed,
                        between5075unemployed,
                        a48ver75unemployed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduatesAchievementAsync(
                    string qualityAuditNo, 
                    bool trackingstudentssystme, 
                    bool dropoutswhereabouts, 
                    bool reasonsfordropoutdocumented, 
                    string financialchallenges, 
                    string poorsecondaryschool, 
                    string conflictwithwork, 
                    string examinationchallenges, 
                    string lackofqualitytime, 
                    string lackofpeersupport, 
                    string healthissues, 
                    string displinarygrounds, 
                    string otherspecify, 
                    bool trackinginfoused, 
                    bool employmentratewareness, 
                    bool below25unemployed, 
                    bool between2550unemployed, 
                    bool between5075unemployed, 
                    bool a48ver75unemployed, 
                    string userCode, 
                    string password) {
            this.AddGraduatesAchievementAsync(qualityAuditNo, trackingstudentssystme, dropoutswhereabouts, reasonsfordropoutdocumented, financialchallenges, poorsecondaryschool, conflictwithwork, examinationchallenges, lackofqualitytime, lackofpeersupport, healthissues, displinarygrounds, otherspecify, trackinginfoused, employmentratewareness, below25unemployed, between2550unemployed, between5075unemployed, a48ver75unemployed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduatesAchievementAsync(
                    string qualityAuditNo, 
                    bool trackingstudentssystme, 
                    bool dropoutswhereabouts, 
                    bool reasonsfordropoutdocumented, 
                    string financialchallenges, 
                    string poorsecondaryschool, 
                    string conflictwithwork, 
                    string examinationchallenges, 
                    string lackofqualitytime, 
                    string lackofpeersupport, 
                    string healthissues, 
                    string displinarygrounds, 
                    string otherspecify, 
                    bool trackinginfoused, 
                    bool employmentratewareness, 
                    bool below25unemployed, 
                    bool between2550unemployed, 
                    bool between5075unemployed, 
                    bool a48ver75unemployed, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddGraduatesAchievementOperationCompleted == null)) {
                this.AddGraduatesAchievementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduatesAchievementOperationCompleted);
            }
            this.InvokeAsync("AddGraduatesAchievement", new object[] {
                        qualityAuditNo,
                        trackingstudentssystme,
                        dropoutswhereabouts,
                        reasonsfordropoutdocumented,
                        financialchallenges,
                        poorsecondaryschool,
                        conflictwithwork,
                        examinationchallenges,
                        lackofqualitytime,
                        lackofpeersupport,
                        healthissues,
                        displinarygrounds,
                        otherspecify,
                        trackinginfoused,
                        employmentratewareness,
                        below25unemployed,
                        between2550unemployed,
                        between5075unemployed,
                        a48ver75unemployed,
                        userCode,
                        password}, this.AddGraduatesAchievementOperationCompleted, userState);
        }
        
        private void OnAddGraduatesAchievementOperationCompleted(object arg) {
            if ((this.AddGraduatesAchievementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduatesAchievementCompleted(this, new AddGraduatesAchievementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStakeholdersSatisfaction", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStakeholdersSatisfaction_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStakeholdersSatisfaction(
                    string qualityAuditNo, 
                    bool studentscoursesopinion, 
                    bool programmeopinion, 
                    bool teachingopinion, 
                    bool examinationsopinion, 
                    bool studentscomplaintsprocess, 
                    bool studentsfeedbackcomplaints, 
                    bool studentscomplaintsdecision, 
                    bool interviewgraduation, 
                    bool interviewannually, 
                    bool everytwoyears, 
                    bool neverinterviewed, 
                    bool alumnifeedbackprogramme, 
                    bool labourmarketcontacts, 
                    bool labourmarketfeedbackanalysed, 
                    bool labourmarketfeedbackprogramme, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddStakeholdersSatisfaction", new object[] {
                        qualityAuditNo,
                        studentscoursesopinion,
                        programmeopinion,
                        teachingopinion,
                        examinationsopinion,
                        studentscomplaintsprocess,
                        studentsfeedbackcomplaints,
                        studentscomplaintsdecision,
                        interviewgraduation,
                        interviewannually,
                        everytwoyears,
                        neverinterviewed,
                        alumnifeedbackprogramme,
                        labourmarketcontacts,
                        labourmarketfeedbackanalysed,
                        labourmarketfeedbackprogramme,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionAsync(
                    string qualityAuditNo, 
                    bool studentscoursesopinion, 
                    bool programmeopinion, 
                    bool teachingopinion, 
                    bool examinationsopinion, 
                    bool studentscomplaintsprocess, 
                    bool studentsfeedbackcomplaints, 
                    bool studentscomplaintsdecision, 
                    bool interviewgraduation, 
                    bool interviewannually, 
                    bool everytwoyears, 
                    bool neverinterviewed, 
                    bool alumnifeedbackprogramme, 
                    bool labourmarketcontacts, 
                    bool labourmarketfeedbackanalysed, 
                    bool labourmarketfeedbackprogramme, 
                    string userCode, 
                    string password) {
            this.AddStakeholdersSatisfactionAsync(qualityAuditNo, studentscoursesopinion, programmeopinion, teachingopinion, examinationsopinion, studentscomplaintsprocess, studentsfeedbackcomplaints, studentscomplaintsdecision, interviewgraduation, interviewannually, everytwoyears, neverinterviewed, alumnifeedbackprogramme, labourmarketcontacts, labourmarketfeedbackanalysed, labourmarketfeedbackprogramme, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStakeholdersSatisfactionAsync(
                    string qualityAuditNo, 
                    bool studentscoursesopinion, 
                    bool programmeopinion, 
                    bool teachingopinion, 
                    bool examinationsopinion, 
                    bool studentscomplaintsprocess, 
                    bool studentsfeedbackcomplaints, 
                    bool studentscomplaintsdecision, 
                    bool interviewgraduation, 
                    bool interviewannually, 
                    bool everytwoyears, 
                    bool neverinterviewed, 
                    bool alumnifeedbackprogramme, 
                    bool labourmarketcontacts, 
                    bool labourmarketfeedbackanalysed, 
                    bool labourmarketfeedbackprogramme, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddStakeholdersSatisfactionOperationCompleted == null)) {
                this.AddStakeholdersSatisfactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStakeholdersSatisfactionOperationCompleted);
            }
            this.InvokeAsync("AddStakeholdersSatisfaction", new object[] {
                        qualityAuditNo,
                        studentscoursesopinion,
                        programmeopinion,
                        teachingopinion,
                        examinationsopinion,
                        studentscomplaintsprocess,
                        studentsfeedbackcomplaints,
                        studentscomplaintsdecision,
                        interviewgraduation,
                        interviewannually,
                        everytwoyears,
                        neverinterviewed,
                        alumnifeedbackprogramme,
                        labourmarketcontacts,
                        labourmarketfeedbackanalysed,
                        labourmarketfeedbackprogramme,
                        userCode,
                        password}, this.AddStakeholdersSatisfactionOperationCompleted, userState);
        }
        
        private void OnAddStakeholdersSatisfactionOperationCompleted(object arg) {
            if ((this.AddStakeholdersSatisfactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStakeholdersSatisfactionCompleted(this, new AddStakeholdersSatisfactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFullTimeAcademicStaffSize", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFullTimeAcademicStaffSize_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFullTimeAcademicStaffSize(
                    string qualityAuditNo, 
                    string designation, 
                    string below30malestaff, 
                    string below30femalestaff, 
                    string below30feintersexstaff, 
                    string below3139femalestaff, 
                    string below3139malestaff, 
                    string below3139intersexstaff, 
                    string below4049malestaff, 
                    string below4049femalestaff, 
                    string below4049intersexstaff, 
                    string below5059femalestaff, 
                    string below5059malestaff, 
                    string below5059intersexstaff, 
                    string below60malestaff, 
                    string below60femalestaff, 
                    string below60intersexstaff, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddFullTimeAcademicStaffSize", new object[] {
                        qualityAuditNo,
                        designation,
                        below30malestaff,
                        below30femalestaff,
                        below30feintersexstaff,
                        below3139femalestaff,
                        below3139malestaff,
                        below3139intersexstaff,
                        below4049malestaff,
                        below4049femalestaff,
                        below4049intersexstaff,
                        below5059femalestaff,
                        below5059malestaff,
                        below5059intersexstaff,
                        below60malestaff,
                        below60femalestaff,
                        below60intersexstaff,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFullTimeAcademicStaffSizeAsync(
                    string qualityAuditNo, 
                    string designation, 
                    string below30malestaff, 
                    string below30femalestaff, 
                    string below30feintersexstaff, 
                    string below3139femalestaff, 
                    string below3139malestaff, 
                    string below3139intersexstaff, 
                    string below4049malestaff, 
                    string below4049femalestaff, 
                    string below4049intersexstaff, 
                    string below5059femalestaff, 
                    string below5059malestaff, 
                    string below5059intersexstaff, 
                    string below60malestaff, 
                    string below60femalestaff, 
                    string below60intersexstaff, 
                    string userCode, 
                    string password) {
            this.AddFullTimeAcademicStaffSizeAsync(qualityAuditNo, designation, below30malestaff, below30femalestaff, below30feintersexstaff, below3139femalestaff, below3139malestaff, below3139intersexstaff, below4049malestaff, below4049femalestaff, below4049intersexstaff, below5059femalestaff, below5059malestaff, below5059intersexstaff, below60malestaff, below60femalestaff, below60intersexstaff, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFullTimeAcademicStaffSizeAsync(
                    string qualityAuditNo, 
                    string designation, 
                    string below30malestaff, 
                    string below30femalestaff, 
                    string below30feintersexstaff, 
                    string below3139femalestaff, 
                    string below3139malestaff, 
                    string below3139intersexstaff, 
                    string below4049malestaff, 
                    string below4049femalestaff, 
                    string below4049intersexstaff, 
                    string below5059femalestaff, 
                    string below5059malestaff, 
                    string below5059intersexstaff, 
                    string below60malestaff, 
                    string below60femalestaff, 
                    string below60intersexstaff, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddFullTimeAcademicStaffSizeOperationCompleted == null)) {
                this.AddFullTimeAcademicStaffSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFullTimeAcademicStaffSizeOperationCompleted);
            }
            this.InvokeAsync("AddFullTimeAcademicStaffSize", new object[] {
                        qualityAuditNo,
                        designation,
                        below30malestaff,
                        below30femalestaff,
                        below30feintersexstaff,
                        below3139femalestaff,
                        below3139malestaff,
                        below3139intersexstaff,
                        below4049malestaff,
                        below4049femalestaff,
                        below4049intersexstaff,
                        below5059femalestaff,
                        below5059malestaff,
                        below5059intersexstaff,
                        below60malestaff,
                        below60femalestaff,
                        below60intersexstaff,
                        userCode,
                        password}, this.AddFullTimeAcademicStaffSizeOperationCompleted, userState);
        }
        
        private void OnAddFullTimeAcademicStaffSizeOperationCompleted(object arg) {
            if ((this.AddFullTimeAcademicStaffSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFullTimeAcademicStaffSizeCompleted(this, new AddFullTimeAcademicStaffSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDidacticAidsTools", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDidacticAidsTools_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDidacticAidsTools(string qualityAuditNo, string didacticaids, string itemnumber, string specificdepartment, string sharedusage, string userCode, string password) {
            object[] results = this.Invoke("AddDidacticAidsTools", new object[] {
                        qualityAuditNo,
                        didacticaids,
                        itemnumber,
                        specificdepartment,
                        sharedusage,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDidacticAidsToolsAsync(string qualityAuditNo, string didacticaids, string itemnumber, string specificdepartment, string sharedusage, string userCode, string password) {
            this.AddDidacticAidsToolsAsync(qualityAuditNo, didacticaids, itemnumber, specificdepartment, sharedusage, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDidacticAidsToolsAsync(string qualityAuditNo, string didacticaids, string itemnumber, string specificdepartment, string sharedusage, string userCode, string password, object userState) {
            if ((this.AddDidacticAidsToolsOperationCompleted == null)) {
                this.AddDidacticAidsToolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDidacticAidsToolsOperationCompleted);
            }
            this.InvokeAsync("AddDidacticAidsTools", new object[] {
                        qualityAuditNo,
                        didacticaids,
                        itemnumber,
                        specificdepartment,
                        sharedusage,
                        userCode,
                        password}, this.AddDidacticAidsToolsOperationCompleted, userState);
        }
        
        private void OnAddDidacticAidsToolsOperationCompleted(object arg) {
            if ((this.AddDidacticAidsToolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDidacticAidsToolsCompleted(this, new AddDidacticAidsToolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddTeachingEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddTeachingEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeachingEquipments(string qualityAuditNo, string itemname, string itemnumber, string specificdepartment, string itemshared, string userCode, string password) {
            object[] results = this.Invoke("AddTeachingEquipments", new object[] {
                        qualityAuditNo,
                        itemname,
                        itemnumber,
                        specificdepartment,
                        itemshared,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeachingEquipmentsAsync(string qualityAuditNo, string itemname, string itemnumber, string specificdepartment, string itemshared, string userCode, string password) {
            this.AddTeachingEquipmentsAsync(qualityAuditNo, itemname, itemnumber, specificdepartment, itemshared, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddTeachingEquipmentsAsync(string qualityAuditNo, string itemname, string itemnumber, string specificdepartment, string itemshared, string userCode, string password, object userState) {
            if ((this.AddTeachingEquipmentsOperationCompleted == null)) {
                this.AddTeachingEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeachingEquipmentsOperationCompleted);
            }
            this.InvokeAsync("AddTeachingEquipments", new object[] {
                        qualityAuditNo,
                        itemname,
                        itemnumber,
                        specificdepartment,
                        itemshared,
                        userCode,
                        password}, this.AddTeachingEquipmentsOperationCompleted, userState);
        }
        
        private void OnAddTeachingEquipmentsOperationCompleted(object arg) {
            if ((this.AddTeachingEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeachingEquipmentsCompleted(this, new AddTeachingEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateStakeholderRequirements" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateStakeholderRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateStakeholderRequirements(string qualityAuditNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateStakeholderRequirements", new object[] {
                        qualityAuditNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateStakeholderRequirementsAsync(string qualityAuditNo, string userCode, string password) {
            this.ValidateStakeholderRequirementsAsync(qualityAuditNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateStakeholderRequirementsAsync(string qualityAuditNo, string userCode, string password, object userState) {
            if ((this.ValidateStakeholderRequirementsOperationCompleted == null)) {
                this.ValidateStakeholderRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateStakeholderRequirementsOperationCompleted);
            }
            this.InvokeAsync("ValidateStakeholderRequirements", new object[] {
                        qualityAuditNo,
                        userCode,
                        password}, this.ValidateStakeholderRequirementsOperationCompleted, userState);
        }
        
        private void OnValidateStakeholderRequirementsOperationCompleted(object arg) {
            if ((this.ValidateStakeholderRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateStakeholderRequirementsCompleted(this, new ValidateStakeholderRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateExpectedLearningOutcome" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateExpectedLearningOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateExpectedLearningOutcomes(string qualityAuditNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateExpectedLearningOutcomes", new object[] {
                        qualityAuditNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateExpectedLearningOutcomesAsync(string qualityAuditNo, string userCode, string password) {
            this.ValidateExpectedLearningOutcomesAsync(qualityAuditNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateExpectedLearningOutcomesAsync(string qualityAuditNo, string userCode, string password, object userState) {
            if ((this.ValidateExpectedLearningOutcomesOperationCompleted == null)) {
                this.ValidateExpectedLearningOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateExpectedLearningOutcomesOperationCompleted);
            }
            this.InvokeAsync("ValidateExpectedLearningOutcomes", new object[] {
                        qualityAuditNo,
                        userCode,
                        password}, this.ValidateExpectedLearningOutcomesOperationCompleted, userState);
        }
        
        private void OnValidateExpectedLearningOutcomesOperationCompleted(object arg) {
            if ((this.ValidateExpectedLearningOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateExpectedLearningOutcomesCompleted(this, new ValidateExpectedLearningOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStakeholders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStakeholders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStakeholders(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStakeholders", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStakeholdersAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStakeholdersAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStakeholdersAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStakeholdersOperationCompleted == null)) {
                this.DeleteStakeholdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStakeholdersOperationCompleted);
            }
            this.InvokeAsync("DeleteStakeholders", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStakeholdersOperationCompleted, userState);
        }
        
        private void OnDeleteStakeholdersOperationCompleted(object arg) {
            if ((this.DeleteStakeholdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStakeholdersCompleted(this, new DeleteStakeholdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteotherStakeholders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteotherStakeholders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteotherStakeholders(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteotherStakeholders", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteotherStakeholdersAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteotherStakeholdersAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteotherStakeholdersAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteotherStakeholdersOperationCompleted == null)) {
                this.DeleteotherStakeholdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteotherStakeholdersOperationCompleted);
            }
            this.InvokeAsync("DeleteotherStakeholders", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteotherStakeholdersOperationCompleted, userState);
        }
        
        private void OnDeleteotherStakeholdersOperationCompleted(object arg) {
            if ((this.DeleteotherStakeholdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteotherStakeholdersCompleted(this, new DeleteotherStakeholdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStakeholdersStrengths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStakeholdersStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStakeholdersStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStakeholdersStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStakeholdersStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStakeholdersStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStakeholdersStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStakeholdersStrengthsOperationCompleted == null)) {
                this.DeleteStakeholdersStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStakeholdersStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteStakeholdersStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStakeholdersStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteStakeholdersStrengthsOperationCompleted(object arg) {
            if ((this.DeleteStakeholdersStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStakeholdersStrengthsCompleted(this, new DeleteStakeholdersStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStakeholdersWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStakeholdersWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStakeholdersWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteStakeholdersWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStakeholdersWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteStakeholdersWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteStakeholdersWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteStakeholdersWeaknessOperationCompleted == null)) {
                this.DeleteStakeholdersWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStakeholdersWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteStakeholdersWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteStakeholdersWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteStakeholdersWeaknessOperationCompleted(object arg) {
            if ((this.DeleteStakeholdersWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStakeholdersWeaknessCompleted(this, new DeleteStakeholdersWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGenericOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGenericOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGenericOutcome(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGenericOutcome", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGenericOutcomeAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteGenericOutcomeAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGenericOutcomeAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGenericOutcomeOperationCompleted == null)) {
                this.DeleteGenericOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGenericOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteGenericOutcome", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteGenericOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteGenericOutcomeOperationCompleted(object arg) {
            if ((this.DeleteGenericOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGenericOutcomeCompleted(this, new DeleteGenericOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProfessionalOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProfessionalOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalOutcome(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteProfessionalOutcome", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalOutcomeAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteProfessionalOutcomeAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalOutcomeAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteProfessionalOutcomeOperationCompleted == null)) {
                this.DeleteProfessionalOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalOutcome", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteProfessionalOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalOutcomeOperationCompleted(object arg) {
            if ((this.DeleteProfessionalOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalOutcomeCompleted(this, new DeleteProfessionalOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteNeedsDemandsRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteNeedsDemandsRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteNeedsDemandsRequirements(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteNeedsDemandsRequirements", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNeedsDemandsRequirementsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteNeedsDemandsRequirementsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteNeedsDemandsRequirementsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteNeedsDemandsRequirementsOperationCompleted == null)) {
                this.DeleteNeedsDemandsRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNeedsDemandsRequirementsOperationCompleted);
            }
            this.InvokeAsync("DeleteNeedsDemandsRequirements", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteNeedsDemandsRequirementsOperationCompleted, userState);
        }
        
        private void OnDeleteNeedsDemandsRequirementsOperationCompleted(object arg) {
            if ((this.DeleteNeedsDemandsRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNeedsDemandsRequirementsCompleted(this, new DeleteNeedsDemandsRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteOutcomeCommications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteOutcomeCommications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteOutcomeCommications(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteOutcomeCommications", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOutcomeCommicationsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteOutcomeCommicationsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteOutcomeCommicationsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteOutcomeCommicationsOperationCompleted == null)) {
                this.DeleteOutcomeCommicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOutcomeCommicationsOperationCompleted);
            }
            this.InvokeAsync("DeleteOutcomeCommications", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteOutcomeCommicationsOperationCompleted, userState);
        }
        
        private void OnDeleteOutcomeCommicationsOperationCompleted(object arg) {
            if ((this.DeleteOutcomeCommicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOutcomeCommicationsCompleted(this, new DeleteOutcomeCommicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAchievementsOutcomeStreng" +
            "ths", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAchievementsOutcomeStrengths_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAchievementsOutcomeStrengths(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteAchievementsOutcomeStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAchievementsOutcomeStrengthsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteAchievementsOutcomeStrengthsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteAchievementsOutcomeStrengthsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteAchievementsOutcomeStrengthsOperationCompleted == null)) {
                this.DeleteAchievementsOutcomeStrengthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAchievementsOutcomeStrengthsOperationCompleted);
            }
            this.InvokeAsync("DeleteAchievementsOutcomeStrengths", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteAchievementsOutcomeStrengthsOperationCompleted, userState);
        }
        
        private void OnDeleteAchievementsOutcomeStrengthsOperationCompleted(object arg) {
            if ((this.DeleteAchievementsOutcomeStrengthsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAchievementsOutcomeStrengthsCompleted(this, new DeleteAchievementsOutcomeStrengthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAchievementsOutcomeWeakne" +
            "ss", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAchievementsOutcomeWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAchievementsOutcomeWeakness(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteAchievementsOutcomeWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAchievementsOutcomeWeaknessAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteAchievementsOutcomeWeaknessAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteAchievementsOutcomeWeaknessAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteAchievementsOutcomeWeaknessOperationCompleted == null)) {
                this.DeleteAchievementsOutcomeWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAchievementsOutcomeWeaknessOperationCompleted);
            }
            this.InvokeAsync("DeleteAchievementsOutcomeWeakness", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteAchievementsOutcomeWeaknessOperationCompleted, userState);
        }
        
        private void OnDeleteAchievementsOutcomeWeaknessOperationCompleted(object arg) {
            if ((this.DeleteAchievementsOutcomeWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAchievementsOutcomeWeaknessCompleted(this, new DeleteAchievementsOutcomeWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAspectsDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAspectsDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAspectsDetails(string qualityAuditNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteAspectsDetails", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAspectsDetailsAsync(string qualityAuditNo, int code, string userCode, string password) {
            this.DeleteAspectsDetailsAsync(qualityAuditNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteAspectsDetailsAsync(string qualityAuditNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteAspectsDetailsOperationCompleted == null)) {
                this.DeleteAspectsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAspectsDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteAspectsDetails", new object[] {
                        qualityAuditNo,
                        code,
                        userCode,
                        password}, this.DeleteAspectsDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteAspectsDetailsOperationCompleted(object arg) {
            if ((this.DeleteAspectsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAspectsDetailsCompleted(this, new DeleteAspectsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditDepartment(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword) {
            object[] results = this.Invoke("EditDepartment", new object[] {
                        universitycode,
                        departmentcode,
                        school,
                        department,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword) {
            this.EditDepartmentAsync(universitycode, departmentcode, school, department, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword, object userState) {
            if ((this.EditDepartmentOperationCompleted == null)) {
                this.EditDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDepartmentOperationCompleted);
            }
            this.InvokeAsync("EditDepartment", new object[] {
                        universitycode,
                        departmentcode,
                        school,
                        department,
                        userCode,
                        userPassword}, this.EditDepartmentOperationCompleted, userState);
        }
        
        private void OnEditDepartmentOperationCompleted(object arg) {
            if ((this.EditDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDepartmentCompleted(this, new EditDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGeneralDetails(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            object[] results = this.Invoke("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            this.EditGeneralDetailsAsync(universityCode, statusCategory, institutionSponsor, institutionEmailAddress, institutionPhoneNumber, institutionPostAddress, institutionPostCode, mainCampusCounty, mainCampusConstituency, mainCampusTown, null);
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown, object userState) {
            if ((this.EditGeneralDetailsOperationCompleted == null)) {
                this.EditGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown}, this.EditGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnEditGeneralDetailsOperationCompleted(object arg) {
            if ((this.EditGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGeneralDetailsCompleted(this, new EditGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMissionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMissionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMissionDetails(string universityCode, string mission, string vission, string aims) {
            object[] results = this.Invoke("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims) {
            this.AddMissionDetailsAsync(universityCode, mission, vission, aims, null);
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims, object userState) {
            if ((this.AddMissionDetailsOperationCompleted == null)) {
                this.AddMissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMissionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims}, this.AddMissionDetailsOperationCompleted, userState);
        }
        
        private void OnAddMissionDetailsOperationCompleted(object arg) {
            if ((this.AddMissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMissionDetailsCompleted(this, new AddMissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPhilosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPhilosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPhilosophy(string universityCode, string philosophicalbasis) {
            object[] results = this.Invoke("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis) {
            this.AddPhilosophyAsync(universityCode, philosophicalbasis, null);
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis, object userState) {
            if ((this.AddPhilosophyOperationCompleted == null)) {
                this.AddPhilosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPhilosophyOperationCompleted);
            }
            this.InvokeAsync("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis}, this.AddPhilosophyOperationCompleted, userState);
        }
        
        private void OnAddPhilosophyOperationCompleted(object arg) {
            if ((this.AddPhilosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPhilosophyCompleted(this, new AddPhilosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMilestone(string universityCode, string milestoneyear, string milestonedescription) {
            object[] results = this.Invoke("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription) {
            this.AddMilestoneAsync(universityCode, milestoneyear, milestonedescription, null);
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription, object userState) {
            if ((this.AddMilestoneOperationCompleted == null)) {
                this.AddMilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMilestoneOperationCompleted);
            }
            this.InvokeAsync("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription}, this.AddMilestoneOperationCompleted, userState);
        }
        
        private void OnAddMilestoneOperationCompleted(object arg) {
            if ((this.AddMilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMilestoneCompleted(this, new AddMilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAffiliations(string universityCode, string affiliationdescription, string countryname, string organisationname) {
            object[] results = this.Invoke("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription,
                        countryname,
                        organisationname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription, string countryname, string organisationname) {
            this.AddAffiliationsAsync(universityCode, affiliationdescription, countryname, organisationname, null);
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription, string countryname, string organisationname, object userState) {
            if ((this.AddAffiliationsOperationCompleted == null)) {
                this.AddAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAffiliationsOperationCompleted);
            }
            this.InvokeAsync("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription,
                        countryname,
                        organisationname}, this.AddAffiliationsOperationCompleted, userState);
        }
        
        private void OnAddAffiliationsOperationCompleted(object arg) {
            if ((this.AddAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAffiliationsCompleted(this, new AddAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddschoolFaculties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddschoolFaculties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddschoolFaculties(string universityCode, string facultydescription) {
            object[] results = this.Invoke("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription) {
            this.AddschoolFacultiesAsync(universityCode, facultydescription, null);
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription, object userState) {
            if ((this.AddschoolFacultiesOperationCompleted == null)) {
                this.AddschoolFacultiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddschoolFacultiesOperationCompleted);
            }
            this.InvokeAsync("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription}, this.AddschoolFacultiesOperationCompleted, userState);
        }
        
        private void OnAddschoolFacultiesOperationCompleted(object arg) {
            if ((this.AddschoolFacultiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddschoolFacultiesCompleted(this, new AddschoolFacultiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDepartments(string universityCode, string schoolcode, string departmentname) {
            object[] results = this.Invoke("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname) {
            this.AddDepartmentsAsync(universityCode, schoolcode, departmentname, null);
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname, object userState) {
            if ((this.AddDepartmentsOperationCompleted == null)) {
                this.AddDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDepartmentsOperationCompleted);
            }
            this.InvokeAsync("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname}, this.AddDepartmentsOperationCompleted, userState);
        }
        
        private void OnAddDepartmentsOperationCompleted(object arg) {
            if ((this.AddDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDepartmentsCompleted(this, new AddDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSponsors(string universityCode, string sponsorname) {
            object[] results = this.Invoke("AddSponsors", new object[] {
                        universityCode,
                        sponsorname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname) {
            this.AddSponsorsAsync(universityCode, sponsorname, null);
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname, object userState) {
            if ((this.AddSponsorsOperationCompleted == null)) {
                this.AddSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSponsorsOperationCompleted);
            }
            this.InvokeAsync("AddSponsors", new object[] {
                        universityCode,
                        sponsorname}, this.AddSponsorsOperationCompleted, userState);
        }
        
        private void OnAddSponsorsOperationCompleted(object arg) {
            if ((this.AddSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSponsorsCompleted(this, new AddSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHistory(string universityCode, string history) {
            object[] results = this.Invoke("AddHistory", new object[] {
                        universityCode,
                        history});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history) {
            this.AddHistoryAsync(universityCode, history, null);
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history, object userState) {
            if ((this.AddHistoryOperationCompleted == null)) {
                this.AddHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHistoryOperationCompleted);
            }
            this.InvokeAsync("AddHistory", new object[] {
                        universityCode,
                        history}, this.AddHistoryOperationCompleted, userState);
        }
        
        private void OnAddHistoryOperationCompleted(object arg) {
            if ((this.AddHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHistoryCompleted(this, new AddHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Editphylosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Editphylosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Editphylosophy(string universityCode, string phylosophydetails) {
            object[] results = this.Invoke("Editphylosophy", new object[] {
                        universityCode,
                        phylosophydetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditphylosophyAsync(string universityCode, string phylosophydetails) {
            this.EditphylosophyAsync(universityCode, phylosophydetails, null);
        }
        
        /// <remarks/>
        public void EditphylosophyAsync(string universityCode, string phylosophydetails, object userState) {
            if ((this.EditphylosophyOperationCompleted == null)) {
                this.EditphylosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditphylosophyOperationCompleted);
            }
            this.InvokeAsync("Editphylosophy", new object[] {
                        universityCode,
                        phylosophydetails}, this.EditphylosophyOperationCompleted, userState);
        }
        
        private void OnEditphylosophyOperationCompleted(object arg) {
            if ((this.EditphylosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditphylosophyCompleted(this, new EditphylosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditVCDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditVCDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditVCDetails(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            object[] results = this.Invoke("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            this.EditVCDetailsAsync(universityCode, vcName, vcHighestAcademicLevel, vcDomainOfSpecialization, vcOfficialEmail, vcOfficialPhone, null);
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone, object userState) {
            if ((this.EditVCDetailsOperationCompleted == null)) {
                this.EditVCDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditVCDetailsOperationCompleted);
            }
            this.InvokeAsync("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone}, this.EditVCDetailsOperationCompleted, userState);
        }
        
        private void OnEditVCDetailsOperationCompleted(object arg) {
            if ((this.EditVCDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditVCDetailsCompleted(this, new EditVCDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryStaff(
                    string username, 
                    string password, 
                    string idNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string position, 
                    int highestAcademicQualification, 
                    int highestacademicqualificationspecializationcode, 
                    int secondhighestacademicqualification, 
                    int secondhighestacademicqualificationcode, 
                    string campusCode, 
                    int submissioncategory, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofFirstAppointment, 
                    string payroll, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofcurrentAppointment, 
                    string disabilitydescription, 
                    string disabilityregistration, 
                    string nationalitycode, 
                    string ethnicbackground, 
                    string homecounty, 
                    string staffstatus, 
                    int ttermsofservice, 
                    int gender) {
            object[] results = this.Invoke("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        highestacademicqualificationspecializationcode,
                        secondhighestacademicqualification,
                        secondhighestacademicqualificationcode,
                        campusCode,
                        submissioncategory,
                        dateofFirstAppointment,
                        payroll,
                        dateofcurrentAppointment,
                        disabilitydescription,
                        disabilityregistration,
                        nationalitycode,
                        ethnicbackground,
                        homecounty,
                        staffstatus,
                        ttermsofservice,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(
                    string username, 
                    string password, 
                    string idNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    System.DateTime dob, 
                    string position, 
                    int highestAcademicQualification, 
                    int highestacademicqualificationspecializationcode, 
                    int secondhighestacademicqualification, 
                    int secondhighestacademicqualificationcode, 
                    string campusCode, 
                    int submissioncategory, 
                    System.DateTime dateofFirstAppointment, 
                    string payroll, 
                    System.DateTime dateofcurrentAppointment, 
                    string disabilitydescription, 
                    string disabilityregistration, 
                    string nationalitycode, 
                    string ethnicbackground, 
                    string homecounty, 
                    string staffstatus, 
                    int ttermsofservice, 
                    int gender) {
            this.AddLibraryStaffAsync(username, password, idNo, firstName, middleName, lastName, dob, position, highestAcademicQualification, highestacademicqualificationspecializationcode, secondhighestacademicqualification, secondhighestacademicqualificationcode, campusCode, submissioncategory, dateofFirstAppointment, payroll, dateofcurrentAppointment, disabilitydescription, disabilityregistration, nationalitycode, ethnicbackground, homecounty, staffstatus, ttermsofservice, gender, null);
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(
                    string username, 
                    string password, 
                    string idNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    System.DateTime dob, 
                    string position, 
                    int highestAcademicQualification, 
                    int highestacademicqualificationspecializationcode, 
                    int secondhighestacademicqualification, 
                    int secondhighestacademicqualificationcode, 
                    string campusCode, 
                    int submissioncategory, 
                    System.DateTime dateofFirstAppointment, 
                    string payroll, 
                    System.DateTime dateofcurrentAppointment, 
                    string disabilitydescription, 
                    string disabilityregistration, 
                    string nationalitycode, 
                    string ethnicbackground, 
                    string homecounty, 
                    string staffstatus, 
                    int ttermsofservice, 
                    int gender, 
                    object userState) {
            if ((this.AddLibraryStaffOperationCompleted == null)) {
                this.AddLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        highestacademicqualificationspecializationcode,
                        secondhighestacademicqualification,
                        secondhighestacademicqualificationcode,
                        campusCode,
                        submissioncategory,
                        dateofFirstAppointment,
                        payroll,
                        dateofcurrentAppointment,
                        disabilitydescription,
                        disabilityregistration,
                        nationalitycode,
                        ethnicbackground,
                        homecounty,
                        staffstatus,
                        ttermsofservice,
                        gender}, this.AddLibraryStaffOperationCompleted, userState);
        }
        
        private void OnAddLibraryStaffOperationCompleted(object arg) {
            if ((this.AddLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryStaffCompleted(this, new AddLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryStaff(string universityCode, int staffId) {
            object[] results = this.Invoke("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, int staffId) {
            this.DeleteLibraryStaffAsync(universityCode, staffId, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, int staffId, object userState) {
            if ((this.DeleteLibraryStaffOperationCompleted == null)) {
                this.DeleteLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId}, this.DeleteLibraryStaffOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryStaffOperationCompleted(object arg) {
            if ((this.DeleteLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryStaffCompleted(this, new DeleteLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduation(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime graduationDate, string userCode, string password) {
            object[] results = this.Invoke("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password) {
            this.AddGraduationAsync(idNo, admissionNumber, firstName, middleName, lastName, programCode, credit, graduationDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password, object userState) {
            if ((this.AddGraduationOperationCompleted == null)) {
                this.AddGraduationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduationOperationCompleted);
            }
            this.InvokeAsync("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password}, this.AddGraduationOperationCompleted, userState);
        }
        
        private void OnAddGraduationOperationCompleted(object arg) {
            if ((this.AddGraduationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduationCompleted(this, new AddGraduationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password) {
            this.SendApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendApprovalRequestOperationCompleted == null)) {
                this.SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendApprovalRequestOperationCompleted(object arg) {
            if ((this.SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalRequestCompleted(this, new SendApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendProgramApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendProgramApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendProgramApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password) {
            this.SendProgramApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendProgramApprovalRequestOperationCompleted == null)) {
                this.SendProgramApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProgramApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendProgramApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendProgramApprovalRequestOperationCompleted(object arg) {
            if ((this.SendProgramApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProgramApprovalRequestCompleted(this, new SendProgramApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveRejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveRejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectRequestOperationCompleted == null)) {
                this.ApproveRejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectRequestCompleted(this, new ApproveRejectRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveRejectProgramRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveRejectProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectProgramRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectProgramRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectProgramRequestOperationCompleted == null)) {
                this.ApproveRejectProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectProgramRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectProgramRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectProgramRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectProgramRequestCompleted(this, new ApproveRejectProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelApprovalProgramRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelApprovalProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalProgramRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalProgramRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalProgramRequestOperationCompleted == null)) {
                this.CancelApprovalProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalProgramRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalProgramRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalProgramRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalProgramRequestCompleted(this, new CancelApprovalProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmail(string receiverEmail, string subject, string message) {
            this.Invoke("SendEmail", new object[] {
                        receiverEmail,
                        subject,
                        message});
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiverEmail, string subject, string message) {
            this.SendEmailAsync(receiverEmail, subject, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiverEmail, string subject, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        receiverEmail,
                        subject,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalRequestOperationCompleted == null)) {
                this.CancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalRequestCompleted(this, new CancelApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBuilding(string campus, string category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, int trooms, string userCode, string password) {
            object[] results = this.Invoke("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        trooms,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, string category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, int trooms, string userCode, string password) {
            this.AddBuildingAsync(campus, category, description, capacity, numberOfFloors, sizeSqMetres, location, provisionPWD, trooms, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, string category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, int trooms, string userCode, string password, object userState) {
            if ((this.AddBuildingOperationCompleted == null)) {
                this.AddBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBuildingOperationCompleted);
            }
            this.InvokeAsync("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        trooms,
                        userCode,
                        password}, this.AddBuildingOperationCompleted, userState);
        }
        
        private void OnAddBuildingOperationCompleted(object arg) {
            if ((this.AddBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBuildingCompleted(this, new AddBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddWasteManagement(string campus, string category, string disposalmethod, string hazardousmaterial, string wastecapacity, string userCode, string password) {
            object[] results = this.Invoke("AddWasteManagement", new object[] {
                        campus,
                        category,
                        disposalmethod,
                        hazardousmaterial,
                        wastecapacity,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWasteManagementAsync(string campus, string category, string disposalmethod, string hazardousmaterial, string wastecapacity, string userCode, string password) {
            this.AddWasteManagementAsync(campus, category, disposalmethod, hazardousmaterial, wastecapacity, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddWasteManagementAsync(string campus, string category, string disposalmethod, string hazardousmaterial, string wastecapacity, string userCode, string password, object userState) {
            if ((this.AddWasteManagementOperationCompleted == null)) {
                this.AddWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWasteManagementOperationCompleted);
            }
            this.InvokeAsync("AddWasteManagement", new object[] {
                        campus,
                        category,
                        disposalmethod,
                        hazardousmaterial,
                        wastecapacity,
                        userCode,
                        password}, this.AddWasteManagementOperationCompleted, userState);
        }
        
        private void OnAddWasteManagementOperationCompleted(object arg) {
            if ((this.AddWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWasteManagementCompleted(this, new AddWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AccreditationGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AccreditationGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationGeneralDetails(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    bool continuousAssessmentTests, 
                    bool endexams, 
                    bool practicals, 
                    bool otherassments, 
                    bool specializationareas, 
                    string courseevaluations, 
                    string courserequirement, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        continuousAssessmentTests,
                        endexams,
                        practicals,
                        otherassments,
                        specializationareas,
                        courseevaluations,
                        courserequirement,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    bool continuousAssessmentTests, 
                    bool endexams, 
                    bool practicals, 
                    bool otherassments, 
                    bool specializationareas, 
                    string courseevaluations, 
                    string courserequirement, 
                    string userCode, 
                    string password) {
            this.AccreditationGeneralDetailsAsync(accreditationNo, campus, programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, continuousAssessmentTests, endexams, practicals, otherassments, specializationareas, courseevaluations, courserequirement, userCode, password, null);
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    bool continuousAssessmentTests, 
                    bool endexams, 
                    bool practicals, 
                    bool otherassments, 
                    bool specializationareas, 
                    string courseevaluations, 
                    string courserequirement, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AccreditationGeneralDetailsOperationCompleted == null)) {
                this.AccreditationGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        continuousAssessmentTests,
                        endexams,
                        practicals,
                        otherassments,
                        specializationareas,
                        courseevaluations,
                        courserequirement,
                        userCode,
                        password}, this.AccreditationGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnAccreditationGeneralDetailsOperationCompleted(object arg) {
            if ((this.AccreditationGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationGeneralDetailsCompleted(this, new AccreditationGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdateaccreditationGeneralDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdateaccreditationGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateaccreditationGeneralDetails(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    bool specializationareas, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("UpdateaccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        specializationareas,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateaccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    bool specializationareas, 
                    string userCode, 
                    string password) {
            this.UpdateaccreditationGeneralDetailsAsync(accreditationNo, campus, programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, studentspolicy, specializationareas, userCode, password, null);
        }
        
        /// <remarks/>
        public void UpdateaccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    decimal programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    bool specializationareas, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.UpdateaccreditationGeneralDetailsOperationCompleted == null)) {
                this.UpdateaccreditationGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateaccreditationGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateaccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        specializationareas,
                        userCode,
                        password}, this.UpdateaccreditationGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateaccreditationGeneralDetailsOperationCompleted(object arg) {
            if ((this.UpdateaccreditationGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateaccreditationGeneralDetailsCompleted(this, new UpdateaccreditationGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InitialGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InitialGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InitialGeneralDetails(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            this.InitialGeneralDetailsAsync(programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, studentspolicy, userCode, password, null);
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.InitialGeneralDetailsOperationCompleted == null)) {
                this.InitialGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitialGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password}, this.InitialGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnInitialGeneralDetailsOperationCompleted(object arg) {
            if ((this.InitialGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitialGeneralDetailsCompleted(this, new InitialGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNewPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNewPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNewPrograms(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddNewPrograms", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        rationale,
                        learningoutcome,
                        specialization,
                        modeofdelivery,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewProgramsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password) {
            this.AddNewProgramsAsync(programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, rationale, learningoutcome, specialization, modeofdelivery, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNewProgramsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddNewProgramsOperationCompleted == null)) {
                this.AddNewProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewProgramsOperationCompleted);
            }
            this.InvokeAsync("AddNewPrograms", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        rationale,
                        learningoutcome,
                        specialization,
                        modeofdelivery,
                        userCode,
                        password}, this.AddNewProgramsOperationCompleted, userState);
        }
        
        private void OnAddNewProgramsOperationCompleted(object arg) {
            if ((this.AddNewProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewProgramsCompleted(this, new AddNewProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationale(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleOperationCompleted == null)) {
                this.AddProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleOperationCompleted(object arg) {
            if ((this.AddProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleCompleted(this, new AddProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateProgramRationale(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password) {
            this.ValidateProgramRationaleAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateProgramRationaleOperationCompleted == null)) {
                this.ValidateProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateProgramRationaleOperationCompleted, userState);
        }
        
        private void OnValidateProgramRationaleOperationCompleted(object arg) {
            if ((this.ValidateProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateProgramRationaleCompleted(this, new ValidateProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationaleEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationaleEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationaleEntry(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationaleEntry", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleEntryAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleEntryAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleEntryAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleEntryOperationCompleted == null)) {
                this.AddProgramRationaleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleEntryOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationaleEntry", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleEntryOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleEntryOperationCompleted(object arg) {
            if ((this.AddProgramRationaleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleEntryCompleted(this, new AddProgramRationaleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditProgramRationale(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.EditProgramRationaleAsync(rationaleCode, accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.EditProgramRationaleOperationCompleted == null)) {
                this.EditProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.EditProgramRationaleOperationCompleted, userState);
        }
        
        private void OnEditProgramRationaleOperationCompleted(object arg) {
            if ((this.EditProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProgramRationaleCompleted(this, new EditProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSpecializationAreas(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            object[] results = this.Invoke("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            this.EditSpecializationAreasAsync(specializationCode, accreditationNo, specializationarea, specializationdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password, object userState) {
            if ((this.EditSpecializationAreasOperationCompleted == null)) {
                this.EditSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password}, this.EditSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnEditSpecializationAreasOperationCompleted(object arg) {
            if ((this.EditSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSpecializationAreasCompleted(this, new EditSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditReferenceMaterials", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditReferenceMaterials_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditReferenceMaterials(int referencecode, string accreditationNo, string coursecode, string referencematerial, string userCode, string password) {
            object[] results = this.Invoke("EditReferenceMaterials", new object[] {
                        referencecode,
                        accreditationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditReferenceMaterialsAsync(int referencecode, string accreditationNo, string coursecode, string referencematerial, string userCode, string password) {
            this.EditReferenceMaterialsAsync(referencecode, accreditationNo, coursecode, referencematerial, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditReferenceMaterialsAsync(int referencecode, string accreditationNo, string coursecode, string referencematerial, string userCode, string password, object userState) {
            if ((this.EditReferenceMaterialsOperationCompleted == null)) {
                this.EditReferenceMaterialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditReferenceMaterialsOperationCompleted);
            }
            this.InvokeAsync("EditReferenceMaterials", new object[] {
                        referencecode,
                        accreditationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password}, this.EditReferenceMaterialsOperationCompleted, userState);
        }
        
        private void OnEditReferenceMaterialsOperationCompleted(object arg) {
            if ((this.EditReferenceMaterialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditReferenceMaterialsCompleted(this, new EditReferenceMaterialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgramRationale(int rationaleCode, string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password) {
            this.DeleteProgramRationaleAsync(rationaleCode, accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password, object userState) {
            if ((this.DeleteProgramRationaleOperationCompleted == null)) {
                this.DeleteProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password}, this.DeleteProgramRationaleOperationCompleted, userState);
        }
        
        private void OnDeleteProgramRationaleOperationCompleted(object arg) {
            if ((this.DeleteProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramRationaleCompleted(this, new DeleteProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcome(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        outcomenomber,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password) {
            this.AddLearningOutcomeAsync(accreditationNo, outcomeDescription, outcomenomber, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeOperationCompleted == null)) {
                this.AddLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        outcomenomber,
                        userCode,
                        password}, this.AddLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeCompleted(this, new AddLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateLearningOutcome(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLearningOutcomeAsync(string accreditationNo, string userCode, string password) {
            this.ValidateLearningOutcomeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateLearningOutcomeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateLearningOutcomeOperationCompleted == null)) {
                this.ValidateLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("ValidateLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnValidateLearningOutcomeOperationCompleted(object arg) {
            if ((this.ValidateLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLearningOutcomeCompleted(this, new ValidateLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateLearningOutcome2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateLearningOutcome2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateLearningOutcome2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password) {
            this.ValidateLearningOutcome2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateLearningOutcome2OperationCompleted == null)) {
                this.ValidateLearningOutcome2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLearningOutcome2OperationCompleted);
            }
            this.InvokeAsync("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateLearningOutcome2OperationCompleted, userState);
        }
        
        private void OnValidateLearningOutcome2OperationCompleted(object arg) {
            if ((this.ValidateLearningOutcome2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLearningOutcome2Completed(this, new ValidateLearningOutcome2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcomeEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcomeEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcomeEntry(string accreditationNo, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcomeEntry", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeEntryAsync(string accreditationNo, string outcomeDescription, string userCode, string password) {
            this.AddLearningOutcomeEntryAsync(accreditationNo, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeEntryAsync(string accreditationNo, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeEntryOperationCompleted == null)) {
                this.AddLearningOutcomeEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeEntryOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcomeEntry", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password}, this.AddLearningOutcomeEntryOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeEntryOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeEntryCompleted(this, new AddLearningOutcomeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSpecializationAreas(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password) {
            object[] results = this.Invoke("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationaraea,
                        specializationdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password) {
            this.AddSpecializationAreasAsync(accreditationNo, specializationaraea, specializationdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password, object userState) {
            if ((this.AddSpecializationAreasOperationCompleted == null)) {
                this.AddSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationaraea,
                        specializationdescription,
                        userCode,
                        password}, this.AddSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnAddSpecializationAreasOperationCompleted(object arg) {
            if ((this.AddSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationAreasCompleted(this, new AddSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateSpecializationAreas(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateSpecializationAreas", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSpecializationAreasAsync(string accreditationNo, string userCode, string password) {
            this.ValidateSpecializationAreasAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateSpecializationAreasAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateSpecializationAreasOperationCompleted == null)) {
                this.ValidateSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("ValidateSpecializationAreas", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnValidateSpecializationAreasOperationCompleted(object arg) {
            if ((this.ValidateSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSpecializationAreasCompleted(this, new ValidateSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSpecializationAreasEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSpecializationAreasEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSpecializationAreasEntry(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            object[] results = this.Invoke("AddSpecializationAreasEntry", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpecializationAreasEntryAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            this.AddSpecializationAreasEntryAsync(accreditationNo, specializationdescription, specializationaraea, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAreasEntryAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password, object userState) {
            if ((this.AddSpecializationAreasEntryOperationCompleted == null)) {
                this.AddSpecializationAreasEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationAreasEntryOperationCompleted);
            }
            this.InvokeAsync("AddSpecializationAreasEntry", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password}, this.AddSpecializationAreasEntryOperationCompleted, userState);
        }
        
        private void OnAddSpecializationAreasEntryOperationCompleted(object arg) {
            if ((this.AddSpecializationAreasEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationAreasEntryCompleted(this, new AddSpecializationAreasEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLearningOutcome(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            this.EditLearningOutcomeAsync(accreditationNo, outcomeCode, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.EditLearningOutcomeOperationCompleted == null)) {
                this.EditLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password}, this.EditLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLearningOutcomeCompleted(this, new EditLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLearningOutcome(string accreditationNo, int outcomeCode, string usercode, string password) {
            object[] results = this.Invoke("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string usercode, string password) {
            this.DeleteLearningOutcomeAsync(accreditationNo, outcomeCode, usercode, password, null);
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string usercode, string password, object userState) {
            if ((this.DeleteLearningOutcomeOperationCompleted == null)) {
                this.DeleteLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        usercode,
                        password}, this.DeleteLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLearningOutcomeCompleted(this, new DeleteLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSpecializationArea", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSpecializationArea_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteSpecializationArea(string accreditationNo, int specializationcode, string userCode, string password) {
            object[] results = this.Invoke("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password) {
            this.DeleteSpecializationAreaAsync(accreditationNo, specializationcode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password, object userState) {
            if ((this.DeleteSpecializationAreaOperationCompleted == null)) {
                this.DeleteSpecializationAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpecializationAreaOperationCompleted);
            }
            this.InvokeAsync("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password}, this.DeleteSpecializationAreaOperationCompleted, userState);
        }
        
        private void OnDeleteSpecializationAreaOperationCompleted(object arg) {
            if ((this.DeleteSpecializationAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpecializationAreaCompleted(this, new DeleteSpecializationAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddDeliveryModeOperationCompleted == null)) {
                this.AddDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddDeliveryModeOperationCompleted, userState);
        }
        
        private void OnAddDeliveryModeOperationCompleted(object arg) {
            if ((this.AddDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeliveryModeCompleted(this, new AddDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddClassificationofDegrees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddClassificationofDegrees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddClassificationofDegrees(string accreditationNo, int classification, decimal gradepoints, decimal percentagelevel, string userCode, string password) {
            object[] results = this.Invoke("AddClassificationofDegrees", new object[] {
                        accreditationNo,
                        classification,
                        gradepoints,
                        percentagelevel,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddClassificationofDegreesAsync(string accreditationNo, int classification, decimal gradepoints, decimal percentagelevel, string userCode, string password) {
            this.AddClassificationofDegreesAsync(accreditationNo, classification, gradepoints, percentagelevel, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddClassificationofDegreesAsync(string accreditationNo, int classification, decimal gradepoints, decimal percentagelevel, string userCode, string password, object userState) {
            if ((this.AddClassificationofDegreesOperationCompleted == null)) {
                this.AddClassificationofDegreesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClassificationofDegreesOperationCompleted);
            }
            this.InvokeAsync("AddClassificationofDegrees", new object[] {
                        accreditationNo,
                        classification,
                        gradepoints,
                        percentagelevel,
                        userCode,
                        password}, this.AddClassificationofDegreesOperationCompleted, userState);
        }
        
        private void OnAddClassificationofDegreesOperationCompleted(object arg) {
            if ((this.AddClassificationofDegreesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClassificationofDegreesCompleted(this, new AddClassificationofDegreesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VlidateDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VlidateDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VlidateDeliveryMode(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("VlidateDeliveryMode", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VlidateDeliveryModeAsync(string accreditationNo, string userCode, string password) {
            this.VlidateDeliveryModeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void VlidateDeliveryModeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.VlidateDeliveryModeOperationCompleted == null)) {
                this.VlidateDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVlidateDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("VlidateDeliveryMode", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.VlidateDeliveryModeOperationCompleted, userState);
        }
        
        private void OnVlidateDeliveryModeOperationCompleted(object arg) {
            if ((this.VlidateDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VlidateDeliveryModeCompleted(this, new VlidateDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VlidateDeliveryMode2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VlidateDeliveryMode2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VlidateDeliveryMode2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password) {
            this.VlidateDeliveryMode2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.VlidateDeliveryMode2OperationCompleted == null)) {
                this.VlidateDeliveryMode2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVlidateDeliveryMode2OperationCompleted);
            }
            this.InvokeAsync("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.VlidateDeliveryMode2OperationCompleted, userState);
        }
        
        private void OnVlidateDeliveryMode2OperationCompleted(object arg) {
            if ((this.VlidateDeliveryMode2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VlidateDeliveryMode2Completed(this, new VlidateDeliveryMode2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.DeleteDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.DeleteDeliveryModeOperationCompleted == null)) {
                this.DeleteDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.DeleteDeliveryModeOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryModeOperationCompleted(object arg) {
            if ((this.DeleteDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryModeCompleted(this, new DeleteDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGradingSystem(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.AddGradingSystemAsync(accreditationNo, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.AddGradingSystemOperationCompleted == null)) {
                this.AddGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGradingSystemOperationCompleted);
            }
            this.InvokeAsync("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.AddGradingSystemOperationCompleted, userState);
        }
        
        private void OnAddGradingSystemOperationCompleted(object arg) {
            if ((this.AddGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGradingSystemCompleted(this, new AddGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateGradingSystem(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateGradingSystem", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGradingSystemAsync(string accreditationNo, string userCode, string password) {
            this.ValidateGradingSystemAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateGradingSystemAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateGradingSystemOperationCompleted == null)) {
                this.ValidateGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGradingSystemOperationCompleted);
            }
            this.InvokeAsync("ValidateGradingSystem", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateGradingSystemOperationCompleted, userState);
        }
        
        private void OnValidateGradingSystemOperationCompleted(object arg) {
            if ((this.ValidateGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGradingSystemCompleted(this, new ValidateGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateGradingSystem2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateGradingSystem2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateGradingSystem2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password) {
            this.ValidateGradingSystem2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateGradingSystem2OperationCompleted == null)) {
                this.ValidateGradingSystem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGradingSystem2OperationCompleted);
            }
            this.InvokeAsync("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateGradingSystem2OperationCompleted, userState);
        }
        
        private void OnValidateGradingSystem2OperationCompleted(object arg) {
            if ((this.ValidateGradingSystem2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGradingSystem2Completed(this, new ValidateGradingSystem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGradingSystem(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.EditGradingSystemAsync(accreditationNo, code, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.EditGradingSystemOperationCompleted == null)) {
                this.EditGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGradingSystemOperationCompleted);
            }
            this.InvokeAsync("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.EditGradingSystemOperationCompleted, userState);
        }
        
        private void OnEditGradingSystemOperationCompleted(object arg) {
            if ((this.EditGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGradingSystemCompleted(this, new EditGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGradingSystem(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteGradingSystemAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGradingSystemOperationCompleted == null)) {
                this.DeleteGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGradingSystemOperationCompleted);
            }
            this.InvokeAsync("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteGradingSystemOperationCompleted, userState);
        }
        
        private void OnDeleteGradingSystemOperationCompleted(object arg) {
            if ((this.DeleteGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGradingSystemCompleted(this, new DeleteGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnit(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password, 
                    string courseOutcome1, 
                    string courseOutcome2, 
                    string courseOutcome3, 
                    string courseOutcome4, 
                    string courseOutcome5, 
                    int semester, 
                    bool isprerequisite, 
                    string prerequisite) {
            object[] results = this.Invoke("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others,
                        userCode,
                        password,
                        courseOutcome1,
                        courseOutcome2,
                        courseOutcome3,
                        courseOutcome4,
                        courseOutcome5,
                        semester,
                        isprerequisite,
                        prerequisite});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitAsync(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password, 
                    string courseOutcome1, 
                    string courseOutcome2, 
                    string courseOutcome3, 
                    string courseOutcome4, 
                    string courseOutcome5, 
                    int semester, 
                    bool isprerequisite, 
                    string prerequisite) {
            this.AddUnitAsync(accreditationNo, unitCode, unitTitle, creditHours, yearCode, courseCategory, coursecontent, instructional, courseassessment, recommendedref, discoverylearning, problembasedlearning, experientiallearning, groupbasedlearning, independentstudies, lectures, others, userCode, password, courseOutcome1, courseOutcome2, courseOutcome3, courseOutcome4, courseOutcome5, semester, isprerequisite, prerequisite, null);
        }
        
        /// <remarks/>
        public void AddUnitAsync(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password, 
                    string courseOutcome1, 
                    string courseOutcome2, 
                    string courseOutcome3, 
                    string courseOutcome4, 
                    string courseOutcome5, 
                    int semester, 
                    bool isprerequisite, 
                    string prerequisite, 
                    object userState) {
            if ((this.AddUnitOperationCompleted == null)) {
                this.AddUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitOperationCompleted);
            }
            this.InvokeAsync("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others,
                        userCode,
                        password,
                        courseOutcome1,
                        courseOutcome2,
                        courseOutcome3,
                        courseOutcome4,
                        courseOutcome5,
                        semester,
                        isprerequisite,
                        prerequisite}, this.AddUnitOperationCompleted, userState);
        }
        
        private void OnAddUnitOperationCompleted(object arg) {
            if ((this.AddUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitCompleted(this, new AddUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateUnit(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateUnit", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUnitAsync(string accreditationNo, string userCode, string password) {
            this.ValidateUnitAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateUnitAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateUnitOperationCompleted == null)) {
                this.ValidateUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUnitOperationCompleted);
            }
            this.InvokeAsync("ValidateUnit", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateUnitOperationCompleted, userState);
        }
        
        private void OnValidateUnitOperationCompleted(object arg) {
            if ((this.ValidateUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUnitCompleted(this, new ValidateUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnitEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnitEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnitEntry(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            object[] results = this.Invoke("AddUnitEntry", new object[] {
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitEntryAsync(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            this.AddUnitEntryAsync(unitCode, unitTitle, creditHours, yearCode, courseCategory, coursecontent, instructional, courseassessment, recommendedref, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddUnitEntryAsync(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password, object userState) {
            if ((this.AddUnitEntryOperationCompleted == null)) {
                this.AddUnitEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitEntryOperationCompleted);
            }
            this.InvokeAsync("AddUnitEntry", new object[] {
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password}, this.AddUnitEntryOperationCompleted, userState);
        }
        
        private void OnAddUnitEntryOperationCompleted(object arg) {
            if ((this.AddUnitEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitEntryCompleted(this, new AddUnitEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditUnit(
                    string accreditationNo, 
                    int code, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    int coursesem, 
                    string coursecontent, 
                    string instructionalmaterials, 
                    string courseassessment, 
                    string lo1, 
                    string lo2, 
                    string lo3, 
                    string lo4, 
                    string lo5, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others) {
            object[] results = this.Invoke("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursesem,
                        coursecontent,
                        instructionalmaterials,
                        courseassessment,
                        lo1,
                        lo2,
                        lo3,
                        lo4,
                        lo5,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUnitAsync(
                    string accreditationNo, 
                    int code, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    int coursesem, 
                    string coursecontent, 
                    string instructionalmaterials, 
                    string courseassessment, 
                    string lo1, 
                    string lo2, 
                    string lo3, 
                    string lo4, 
                    string lo5, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others) {
            this.EditUnitAsync(accreditationNo, code, unitCode, unitTitle, creditHours, yearCode, courseCategory, coursesem, coursecontent, instructionalmaterials, courseassessment, lo1, lo2, lo3, lo4, lo5, discoverylearning, problembasedlearning, experientiallearning, groupbasedlearning, independentstudies, lectures, others, null);
        }
        
        /// <remarks/>
        public void EditUnitAsync(
                    string accreditationNo, 
                    int code, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    int coursesem, 
                    string coursecontent, 
                    string instructionalmaterials, 
                    string courseassessment, 
                    string lo1, 
                    string lo2, 
                    string lo3, 
                    string lo4, 
                    string lo5, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    object userState) {
            if ((this.EditUnitOperationCompleted == null)) {
                this.EditUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUnitOperationCompleted);
            }
            this.InvokeAsync("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursesem,
                        coursecontent,
                        instructionalmaterials,
                        courseassessment,
                        lo1,
                        lo2,
                        lo3,
                        lo4,
                        lo5,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others}, this.EditUnitOperationCompleted, userState);
        }
        
        private void OnEditUnitOperationCompleted(object arg) {
            if ((this.EditUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUnitCompleted(this, new EditUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteUnit(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteUnitAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteUnitOperationCompleted == null)) {
                this.DeleteUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteUnitOperationCompleted, userState);
        }
        
        private void OnDeleteUnitOperationCompleted(object arg) {
            if ((this.DeleteUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUnitCompleted(this, new DeleteUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethod(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodOperationCompleted == null)) {
                this.AddInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodCompleted(this, new AddInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateInstructionalMethod(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password) {
            this.ValidateInstructionalMethodAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateInstructionalMethodOperationCompleted == null)) {
                this.ValidateInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnValidateInstructionalMethodOperationCompleted(object arg) {
            if ((this.ValidateInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateInstructionalMethodCompleted(this, new ValidateInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethodEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethodEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethodEntry(string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodEntryAsync(deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodEntryOperationCompleted == null)) {
                this.AddInstructionalMethodEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodEntryOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodEntryOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodEntryOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodEntryCompleted(this, new AddInstructionalMethodEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteInstructionalMethod(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteInstructionalMethodAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteInstructionalMethodOperationCompleted == null)) {
                this.DeleteInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnDeleteInstructionalMethodOperationCompleted(object arg) {
            if ((this.DeleteInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInstructionalMethodCompleted(this, new DeleteInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcome(string accreditationNo, int learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, int learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeAsync(accreditationNo, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, int learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeOperationCompleted == null)) {
                this.AddCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeCompleted(this, new AddCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateCourseLearningOutcome(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateCourseLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCourseLearningOutcomeAsync(string accreditationNo, string userCode, string password) {
            this.ValidateCourseLearningOutcomeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateCourseLearningOutcomeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateCourseLearningOutcomeOperationCompleted == null)) {
                this.ValidateCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("ValidateCourseLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnValidateCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.ValidateCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCourseLearningOutcomeCompleted(this, new ValidateCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcomeEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcomeEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcomeEntry(string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcomeEntry", new object[] {
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeEntryAsync(string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeEntryAsync(learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeEntryAsync(string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeEntryOperationCompleted == null)) {
                this.AddCourseLearningOutcomeEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeEntryOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcomeEntry", new object[] {
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeEntryOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeEntryOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeEntryCompleted(this, new AddCourseLearningOutcomeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCourseLearningOutcome(string accreditationNo, int code, int learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, int learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.EditCourseLearningOutcomeAsync(accreditationNo, code, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, int learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.EditCourseLearningOutcomeOperationCompleted == null)) {
                this.EditCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.EditCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCourseLearningOutcomeCompleted(this, new EditCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCourseLearningOutcome(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteCourseLearningOutcomeAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCourseLearningOutcomeOperationCompleted == null)) {
                this.DeleteCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseLearningOutcomeCompleted(this, new DeleteCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBook(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookAsync(accreditationNo, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookOperationCompleted == null)) {
                this.AddBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookOperationCompleted);
            }
            this.InvokeAsync("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookOperationCompleted, userState);
        }
        
        private void OnAddBookOperationCompleted(object arg) {
            if ((this.AddBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookCompleted(this, new AddBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateBook(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password) {
            this.ValidateBookAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateBookOperationCompleted == null)) {
                this.ValidateBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBookOperationCompleted);
            }
            this.InvokeAsync("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateBookOperationCompleted, userState);
        }
        
        private void OnValidateBookOperationCompleted(object arg) {
            if ((this.ValidateBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBookCompleted(this, new ValidateBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateProgrammeGeneralDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateProgrammeGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateProgrammeGeneralDetails(string userCode, string password) {
            object[] results = this.Invoke("ValidateProgrammeGeneralDetails", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateProgrammeGeneralDetailsAsync(string userCode, string password) {
            this.ValidateProgrammeGeneralDetailsAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateProgrammeGeneralDetailsAsync(string userCode, string password, object userState) {
            if ((this.ValidateProgrammeGeneralDetailsOperationCompleted == null)) {
                this.ValidateProgrammeGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateProgrammeGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("ValidateProgrammeGeneralDetails", new object[] {
                        userCode,
                        password}, this.ValidateProgrammeGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnValidateProgrammeGeneralDetailsOperationCompleted(object arg) {
            if ((this.ValidateProgrammeGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateProgrammeGeneralDetailsCompleted(this, new ValidateProgrammeGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateProgrammeBasicInformati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateProgrammeBasicInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateProgrammeBasicInformation(string userCode, string password) {
            object[] results = this.Invoke("ValidateProgrammeBasicInformation", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateProgrammeBasicInformationAsync(string userCode, string password) {
            this.ValidateProgrammeBasicInformationAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateProgrammeBasicInformationAsync(string userCode, string password, object userState) {
            if ((this.ValidateProgrammeBasicInformationOperationCompleted == null)) {
                this.ValidateProgrammeBasicInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateProgrammeBasicInformationOperationCompleted);
            }
            this.InvokeAsync("ValidateProgrammeBasicInformation", new object[] {
                        userCode,
                        password}, this.ValidateProgrammeBasicInformationOperationCompleted, userState);
        }
        
        private void OnValidateProgrammeBasicInformationOperationCompleted(object arg) {
            if ((this.ValidateProgrammeBasicInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateProgrammeBasicInformationCompleted(this, new ValidateProgrammeBasicInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBookEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBookEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBookEntry(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBookEntry", new object[] {
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookEntryAsync(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookEntryAsync(bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookEntryAsync(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookEntryOperationCompleted == null)) {
                this.AddBookEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookEntryOperationCompleted);
            }
            this.InvokeAsync("AddBookEntry", new object[] {
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookEntryOperationCompleted, userState);
        }
        
        private void OnAddBookEntryOperationCompleted(object arg) {
            if ((this.AddBookEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookEntryCompleted(this, new AddBookEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBook(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.EditBookAsync(accreditationNo, code, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.EditBookOperationCompleted == null)) {
                this.EditBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBookOperationCompleted);
            }
            this.InvokeAsync("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.EditBookOperationCompleted, userState);
        }
        
        private void OnEditBookOperationCompleted(object arg) {
            if ((this.EditBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBookCompleted(this, new EditBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBook(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteBookAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteBookOperationCompleted == null)) {
                this.DeleteBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBookOperationCompleted);
            }
            this.InvokeAsync("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteBookOperationCompleted, userState);
        }
        
        private void OnDeleteBookOperationCompleted(object arg) {
            if ((this.DeleteBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBookCompleted(this, new DeleteBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SaveDocumentsPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SaveDocumentsPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveDocumentsPayment(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password) {
            object[] results = this.Invoke("SaveDocumentsPayment", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentsPaymentAsync(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password) {
            this.SaveDocumentsPaymentAsync(accreditationNo, applicationLetter, paymentDocument, facilitiesdocument, equipmentdocument, coretextdocument, academcistaffdocument, universitypolicydocument, evidencedocument, userCode, password, null);
        }
        
        /// <remarks/>
        public void SaveDocumentsPaymentAsync(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password, object userState) {
            if ((this.SaveDocumentsPaymentOperationCompleted == null)) {
                this.SaveDocumentsPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentsPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentsPayment", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        userCode,
                        password}, this.SaveDocumentsPaymentOperationCompleted, userState);
        }
        
        private void OnSaveDocumentsPaymentOperationCompleted(object arg) {
            if ((this.SaveDocumentsPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentsPaymentCompleted(this, new SaveDocumentsPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SaveDocumentsInstProgrammes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SaveDocumentsInstProgrammes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveDocumentsInstProgrammes(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("SaveDocumentsInstProgrammes", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        picturePolicy,
                        facilitiesImage,
                        equipmentsImage,
                        coretextImage,
                        academicstaffImage,
                        supportstaffImage,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentsInstProgrammesAsync(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password) {
            this.SaveDocumentsInstProgrammesAsync(accreditationNo, applicationLetter, paymentDocument, facilitiesdocument, equipmentdocument, coretextdocument, academcistaffdocument, universitypolicydocument, evidencedocument, picturePolicy, facilitiesImage, equipmentsImage, coretextImage, academicstaffImage, supportstaffImage, userCode, password, null);
        }
        
        /// <remarks/>
        public void SaveDocumentsInstProgrammesAsync(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.SaveDocumentsInstProgrammesOperationCompleted == null)) {
                this.SaveDocumentsInstProgrammesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentsInstProgrammesOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentsInstProgrammes", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        picturePolicy,
                        facilitiesImage,
                        equipmentsImage,
                        coretextImage,
                        academicstaffImage,
                        supportstaffImage,
                        userCode,
                        password}, this.SaveDocumentsInstProgrammesOperationCompleted, userState);
        }
        
        private void OnSaveDocumentsInstProgrammesOperationCompleted(object arg) {
            if ((this.SaveDocumentsInstProgrammesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentsInstProgrammesCompleted(this, new SaveDocumentsInstProgrammesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPaymentsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPaymentsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsProgramme(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            object[] results = this.Invoke("ConfirmPaymentsProgramme", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsProgrammeAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            this.ConfirmPaymentsProgrammeAsync(accreditationNo, paymentDocument, paymentRef, userCode, password, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsProgrammeAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password, object userState) {
            if ((this.ConfirmPaymentsProgrammeOperationCompleted == null)) {
                this.ConfirmPaymentsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsProgrammeOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsProgramme", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password}, this.ConfirmPaymentsProgrammeOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsProgrammeOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsProgrammeCompleted(this, new ConfirmPaymentsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPaymentsInstitution", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPaymentsInstitution_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsInstitution(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            object[] results = this.Invoke("ConfirmPaymentsInstitution", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsInstitutionAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            this.ConfirmPaymentsInstitutionAsync(accreditationNo, paymentDocument, paymentRef, userCode, password, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsInstitutionAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password, object userState) {
            if ((this.ConfirmPaymentsInstitutionOperationCompleted == null)) {
                this.ConfirmPaymentsInstitutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsInstitutionOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsInstitution", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password}, this.ConfirmPaymentsInstitutionOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsInstitutionOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsInstitutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsInstitutionCompleted(this, new ConfirmPaymentsInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Fngeneratecodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Fngeneratecodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fngeneratecodes(string uninumber) {
            object[] results = this.Invoke("Fngeneratecodes", new object[] {
                        uninumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber) {
            this.FngeneratecodesAsync(uninumber, null);
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber, object userState) {
            if ((this.FngeneratecodesOperationCompleted == null)) {
                this.FngeneratecodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngeneratecodesOperationCompleted);
            }
            this.InvokeAsync("Fngeneratecodes", new object[] {
                        uninumber}, this.FngeneratecodesOperationCompleted, userState);
        }
        
        private void OnFngeneratecodesOperationCompleted(object arg) {
            if ((this.FngeneratecodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngeneratecodesCompleted(this, new FngeneratecodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddKnownStakeHolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddKnownStakeHolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddKnownStakeHolder(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            object[] results = this.Invoke("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            this.AddKnownStakeHolderAsync(qualityAuditNo, stakeHolderCode, isStakeHolder, isEngaged, isAnalyzed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password, object userState) {
            if ((this.AddKnownStakeHolderOperationCompleted == null)) {
                this.AddKnownStakeHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKnownStakeHolderOperationCompleted);
            }
            this.InvokeAsync("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password}, this.AddKnownStakeHolderOperationCompleted, userState);
        }
        
        private void OnAddKnownStakeHolderOperationCompleted(object arg) {
            if ((this.AddKnownStakeHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKnownStakeHolderCompleted(this, new AddKnownStakeHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNewStakeHolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNewStakeHolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNewStakeHolder(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            object[] results = this.Invoke("AddNewStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewStakeHolderAsync(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            this.AddNewStakeHolderAsync(qualityAuditNo, stakeHolder, isEngaged, isAnalyzed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNewStakeHolderAsync(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password, object userState) {
            if ((this.AddNewStakeHolderOperationCompleted == null)) {
                this.AddNewStakeHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewStakeHolderOperationCompleted);
            }
            this.InvokeAsync("AddNewStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password}, this.AddNewStakeHolderOperationCompleted, userState);
        }
        
        private void OnAddNewStakeHolderOperationCompleted(object arg) {
            if ((this.AddNewStakeHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewStakeHolderCompleted(this, new AddNewStakeHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStrengthOrWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStrengthOrWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStrengthOrWeakness(string qualityAuditNo, int type, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password) {
            this.AddStrengthOrWeaknessAsync(qualityAuditNo, type, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password, object userState) {
            if ((this.AddStrengthOrWeaknessOperationCompleted == null)) {
                this.AddStrengthOrWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStrengthOrWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password}, this.AddStrengthOrWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStrengthOrWeaknessOperationCompleted(object arg) {
            if ((this.AddStrengthOrWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStrengthOrWeaknessCompleted(this, new AddStrengthOrWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSARCommitteesComposition1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSARCommitteesComposition1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition1(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            object[] results = this.Invoke("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            this.AddSARCommitteesComposition1Async(qualityAuditNo, type, description, category, userCode, password, name, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name, object userState) {
            if ((this.AddSARCommitteesComposition1OperationCompleted == null)) {
                this.AddSARCommitteesComposition1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesComposition1OperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name}, this.AddSARCommitteesComposition1OperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesComposition1OperationCompleted(object arg) {
            if ((this.AddSARCommitteesComposition1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesComposition1Completed(this, new AddSARCommitteesComposition1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSARCommitteesComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSARCommitteesComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            object[] results = this.Invoke("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            this.AddSARCommitteesCompositionAsync(qualityAuditNo, type, description, category, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, object userState) {
            if ((this.AddSARCommitteesCompositionOperationCompleted == null)) {
                this.AddSARCommitteesCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesCompositionOperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password}, this.AddSARCommitteesCompositionOperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesCompositionOperationCompleted(object arg) {
            if ((this.AddSARCommitteesCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesCompositionCompleted(this, new AddSARCommitteesCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddTrusteeSenateComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddTrusteeSenateComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrusteeSenateComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentDate, string nationality) {
            object[] results = this.Invoke("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality) {
            this.AddTrusteeSenateCompositionAsync(qualityAuditNo, type, description, category, userCode, password, highestAcademicQualification, appointmentDate, nationality, null);
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality, object userState) {
            if ((this.AddTrusteeSenateCompositionOperationCompleted == null)) {
                this.AddTrusteeSenateCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrusteeSenateCompositionOperationCompleted);
            }
            this.InvokeAsync("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality}, this.AddTrusteeSenateCompositionOperationCompleted, userState);
        }
        
        private void OnAddTrusteeSenateCompositionOperationCompleted(object arg) {
            if ((this.AddTrusteeSenateCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrusteeSenateCompositionCompleted(this, new AddTrusteeSenateCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHRSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHRSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHRSummary(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            object[] results = this.Invoke("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            this.AddHRSummaryAsync(qualityAuditNo, type, category, noFullEstablishment, male, female, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password, object userState) {
            if ((this.AddHRSummaryOperationCompleted == null)) {
                this.AddHRSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHRSummaryOperationCompleted);
            }
            this.InvokeAsync("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password}, this.AddHRSummaryOperationCompleted, userState);
        }
        
        private void OnAddHRSummaryOperationCompleted(object arg) {
            if ((this.AddHRSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHRSummaryCompleted(this, new AddHRSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDevelopmentTraining", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDevelopmentTraining_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDevelopmentTraining(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password) {
            object[] results = this.Invoke("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year,
                        male,
                        female,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password) {
            this.AddDevelopmentTrainingAsync(qualityAuditNo, category, year, male, female, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password, object userState) {
            if ((this.AddDevelopmentTrainingOperationCompleted == null)) {
                this.AddDevelopmentTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDevelopmentTrainingOperationCompleted);
            }
            this.InvokeAsync("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year,
                        male,
                        female,
                        userCode,
                        password}, this.AddDevelopmentTrainingOperationCompleted, userState);
        }
        
        private void OnAddDevelopmentTrainingOperationCompleted(object arg) {
            if ((this.AddDevelopmentTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDevelopmentTrainingCompleted(this, new AddDevelopmentTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSchool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSchool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSchool(string schoolName, string userCode, string password) {
            object[] results = this.Invoke("AddSchool", new object[] {
                        schoolName,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSchoolAsync(string schoolName, string userCode, string password) {
            this.AddSchoolAsync(schoolName, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSchoolAsync(string schoolName, string userCode, string password, object userState) {
            if ((this.AddSchoolOperationCompleted == null)) {
                this.AddSchoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSchoolOperationCompleted);
            }
            this.InvokeAsync("AddSchool", new object[] {
                        schoolName,
                        userCode,
                        password}, this.AddSchoolOperationCompleted, userState);
        }
        
        private void OnAddSchoolOperationCompleted(object arg) {
            if ((this.AddSchoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSchoolCompleted(this, new AddSchoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSchoolDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSchoolDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSchoolDepartment(string schoolCode, string departentName, string universityCode, string userCode, string password) {
            object[] results = this.Invoke("AddSchoolDepartment", new object[] {
                        schoolCode,
                        departentName,
                        universityCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSchoolDepartmentAsync(string schoolCode, string departentName, string universityCode, string userCode, string password) {
            this.AddSchoolDepartmentAsync(schoolCode, departentName, universityCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSchoolDepartmentAsync(string schoolCode, string departentName, string universityCode, string userCode, string password, object userState) {
            if ((this.AddSchoolDepartmentOperationCompleted == null)) {
                this.AddSchoolDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSchoolDepartmentOperationCompleted);
            }
            this.InvokeAsync("AddSchoolDepartment", new object[] {
                        schoolCode,
                        departentName,
                        universityCode,
                        userCode,
                        password}, this.AddSchoolDepartmentOperationCompleted, userState);
        }
        
        private void OnAddSchoolDepartmentOperationCompleted(object arg) {
            if ((this.AddSchoolDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSchoolDepartmentCompleted(this, new AddSchoolDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSourceOfIncome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSourceOfIncome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSourceOfIncome(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password) {
            object[] results = this.Invoke("AddSourceOfIncome", new object[] {
                        qaNo,
                        incomeCode,
                        year,
                        expected,
                        actual,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSourceOfIncomeAsync(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password) {
            this.AddSourceOfIncomeAsync(qaNo, incomeCode, year, expected, actual, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSourceOfIncomeAsync(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password, object userState) {
            if ((this.AddSourceOfIncomeOperationCompleted == null)) {
                this.AddSourceOfIncomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSourceOfIncomeOperationCompleted);
            }
            this.InvokeAsync("AddSourceOfIncome", new object[] {
                        qaNo,
                        incomeCode,
                        year,
                        expected,
                        actual,
                        userCode,
                        password}, this.AddSourceOfIncomeOperationCompleted, userState);
        }
        
        private void OnAddSourceOfIncomeOperationCompleted(object arg) {
            if ((this.AddSourceOfIncomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSourceOfIncomeCompleted(this, new AddSourceOfIncomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCreditorsDebtors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCreditorsDebtors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCreditorsDebtors(string qaNo, int type, int creditordebitorCode, int year, decimal amount) {
            object[] results = this.Invoke("AddCreditorsDebtors", new object[] {
                        qaNo,
                        type,
                        creditordebitorCode,
                        year,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditorsDebtorsAsync(string qaNo, int type, int creditordebitorCode, int year, decimal amount) {
            this.AddCreditorsDebtorsAsync(qaNo, type, creditordebitorCode, year, amount, null);
        }
        
        /// <remarks/>
        public void AddCreditorsDebtorsAsync(string qaNo, int type, int creditordebitorCode, int year, decimal amount, object userState) {
            if ((this.AddCreditorsDebtorsOperationCompleted == null)) {
                this.AddCreditorsDebtorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditorsDebtorsOperationCompleted);
            }
            this.InvokeAsync("AddCreditorsDebtors", new object[] {
                        qaNo,
                        type,
                        creditordebitorCode,
                        year,
                        amount}, this.AddCreditorsDebtorsOperationCompleted, userState);
        }
        
        private void OnAddCreditorsDebtorsOperationCompleted(object arg) {
            if ((this.AddCreditorsDebtorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditorsDebtorsCompleted(this, new AddCreditorsDebtorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddActualBudget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddActualBudget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddActualBudget(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password) {
            object[] results = this.Invoke("AddActualBudget", new object[] {
                        qaNo,
                        type,
                        year,
                        budget,
                        actual,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddActualBudgetAsync(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password) {
            this.AddActualBudgetAsync(qaNo, type, year, budget, actual, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddActualBudgetAsync(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password, object userState) {
            if ((this.AddActualBudgetOperationCompleted == null)) {
                this.AddActualBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActualBudgetOperationCompleted);
            }
            this.InvokeAsync("AddActualBudget", new object[] {
                        qaNo,
                        type,
                        year,
                        budget,
                        actual,
                        userCode,
                        password}, this.AddActualBudgetOperationCompleted, userState);
        }
        
        private void OnAddActualBudgetOperationCompleted(object arg) {
            if ((this.AddActualBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActualBudgetCompleted(this, new AddActualBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDebtEquityCurrentAssetsLiabi" +
            "lities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDebtEquityCurrentAssetsLiabilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDebtEquityCurrentAssetsLiabilities(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password) {
            object[] results = this.Invoke("AddDebtEquityCurrentAssetsLiabilities", new object[] {
                        qaNo,
                        type,
                        year,
                        debt,
                        equity,
                        currentassets,
                        currentLiabilities,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDebtEquityCurrentAssetsLiabilitiesAsync(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password) {
            this.AddDebtEquityCurrentAssetsLiabilitiesAsync(qaNo, type, year, debt, equity, currentassets, currentLiabilities, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDebtEquityCurrentAssetsLiabilitiesAsync(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password, object userState) {
            if ((this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted == null)) {
                this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDebtEquityCurrentAssetsLiabilitiesOperationCompleted);
            }
            this.InvokeAsync("AddDebtEquityCurrentAssetsLiabilities", new object[] {
                        qaNo,
                        type,
                        year,
                        debt,
                        equity,
                        currentassets,
                        currentLiabilities,
                        userCode,
                        password}, this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted, userState);
        }
        
        private void OnAddDebtEquityCurrentAssetsLiabilitiesOperationCompleted(object arg) {
            if ((this.AddDebtEquityCurrentAssetsLiabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDebtEquityCurrentAssetsLiabilitiesCompleted(this, new AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaAcademicProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaAcademicProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaAcademicProgramme(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme) {
            object[] results = this.Invoke("AddQaAcademicProgramme", new object[] {
                        qaNo,
                        programmeName,
                        statusOfAccreditation,
                        highestAcademicQualification,
                        durationOfProgramme});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaAcademicProgrammeAsync(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme) {
            this.AddQaAcademicProgrammeAsync(qaNo, programmeName, statusOfAccreditation, highestAcademicQualification, durationOfProgramme, null);
        }
        
        /// <remarks/>
        public void AddQaAcademicProgrammeAsync(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme, object userState) {
            if ((this.AddQaAcademicProgrammeOperationCompleted == null)) {
                this.AddQaAcademicProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaAcademicProgrammeOperationCompleted);
            }
            this.InvokeAsync("AddQaAcademicProgramme", new object[] {
                        qaNo,
                        programmeName,
                        statusOfAccreditation,
                        highestAcademicQualification,
                        durationOfProgramme}, this.AddQaAcademicProgrammeOperationCompleted, userState);
        }
        
        private void OnAddQaAcademicProgrammeOperationCompleted(object arg) {
            if ((this.AddQaAcademicProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaAcademicProgrammeCompleted(this, new AddQaAcademicProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaCollaboratingAcademicProgr" +
            "amme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaCollaboratingAcademicProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaCollaboratingAcademicProgramme(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution) {
            object[] results = this.Invoke("AddQaCollaboratingAcademicProgramme", new object[] {
                        qaNo,
                        schoolCode,
                        programmeName,
                        collaboratingInstitution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaCollaboratingAcademicProgrammeAsync(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution) {
            this.AddQaCollaboratingAcademicProgrammeAsync(qaNo, schoolCode, programmeName, collaboratingInstitution, null);
        }
        
        /// <remarks/>
        public void AddQaCollaboratingAcademicProgrammeAsync(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution, object userState) {
            if ((this.AddQaCollaboratingAcademicProgrammeOperationCompleted == null)) {
                this.AddQaCollaboratingAcademicProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaCollaboratingAcademicProgrammeOperationCompleted);
            }
            this.InvokeAsync("AddQaCollaboratingAcademicProgramme", new object[] {
                        qaNo,
                        schoolCode,
                        programmeName,
                        collaboratingInstitution}, this.AddQaCollaboratingAcademicProgrammeOperationCompleted, userState);
        }
        
        private void OnAddQaCollaboratingAcademicProgrammeOperationCompleted(object arg) {
            if ((this.AddQaCollaboratingAcademicProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaCollaboratingAcademicProgrammeCompleted(this, new AddQaCollaboratingAcademicProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaProgrammeSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaProgrammeSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaProgrammeSummary(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate) {
            object[] results = this.Invoke("AddQaProgrammeSummary", new object[] {
                        qaNo,
                        schoolCode,
                        phd,
                        masters,
                        pgd,
                        bachelors,
                        diploma,
                        certificate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaProgrammeSummaryAsync(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate) {
            this.AddQaProgrammeSummaryAsync(qaNo, schoolCode, phd, masters, pgd, bachelors, diploma, certificate, null);
        }
        
        /// <remarks/>
        public void AddQaProgrammeSummaryAsync(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate, object userState) {
            if ((this.AddQaProgrammeSummaryOperationCompleted == null)) {
                this.AddQaProgrammeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaProgrammeSummaryOperationCompleted);
            }
            this.InvokeAsync("AddQaProgrammeSummary", new object[] {
                        qaNo,
                        schoolCode,
                        phd,
                        masters,
                        pgd,
                        bachelors,
                        diploma,
                        certificate}, this.AddQaProgrammeSummaryOperationCompleted, userState);
        }
        
        private void OnAddQaProgrammeSummaryOperationCompleted(object arg) {
            if ((this.AddQaProgrammeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaProgrammeSummaryCompleted(this, new AddQaProgrammeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddKenyanInternationalStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddKenyanInternationalStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddKenyanInternationalStudents(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents) {
            object[] results = this.Invoke("AddKenyanInternationalStudents", new object[] {
                        qaNo,
                        academicLevel,
                        kenyanStudents,
                        internationalStudents});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddKenyanInternationalStudentsAsync(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents) {
            this.AddKenyanInternationalStudentsAsync(qaNo, academicLevel, kenyanStudents, internationalStudents, null);
        }
        
        /// <remarks/>
        public void AddKenyanInternationalStudentsAsync(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents, object userState) {
            if ((this.AddKenyanInternationalStudentsOperationCompleted == null)) {
                this.AddKenyanInternationalStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKenyanInternationalStudentsOperationCompleted);
            }
            this.InvokeAsync("AddKenyanInternationalStudents", new object[] {
                        qaNo,
                        academicLevel,
                        kenyanStudents,
                        internationalStudents}, this.AddKenyanInternationalStudentsOperationCompleted, userState);
        }
        
        private void OnAddKenyanInternationalStudentsOperationCompleted(object arg) {
            if ((this.AddKenyanInternationalStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKenyanInternationalStudentsCompleted(this, new AddKenyanInternationalStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicStaffQuality", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicStaffQuality_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaffQuality(string qaNo, int category, int ageBracket, int noOfStaff) {
            object[] results = this.Invoke("AddAcademicStaffQuality", new object[] {
                        qaNo,
                        category,
                        ageBracket,
                        noOfStaff});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffQualityAsync(string qaNo, int category, int ageBracket, int noOfStaff) {
            this.AddAcademicStaffQualityAsync(qaNo, category, ageBracket, noOfStaff, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffQualityAsync(string qaNo, int category, int ageBracket, int noOfStaff, object userState) {
            if ((this.AddAcademicStaffQualityOperationCompleted == null)) {
                this.AddAcademicStaffQualityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffQualityOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaffQuality", new object[] {
                        qaNo,
                        category,
                        ageBracket,
                        noOfStaff}, this.AddAcademicStaffQualityOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffQualityOperationCompleted(object arg) {
            if ((this.AddAcademicStaffQualityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffQualityCompleted(this, new AddAcademicStaffQualityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBasicInformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBasicInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBasicInformation(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword) {
            object[] results = this.Invoke("AddBasicInformation", new object[] {
                        qualityAuditNo,
                        name,
                        domain,
                        dateofaccreditation,
                        profesionalbodyapproval,
                        proffessionalbodyeveidence,
                        approvedbyproffessinalbocy,
                        nameofbody,
                        dateofapprovalbyproffessionalbody,
                        universityniche,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBasicInformationAsync(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword) {
            this.AddBasicInformationAsync(qualityAuditNo, name, domain, dateofaccreditation, profesionalbodyapproval, proffessionalbodyeveidence, approvedbyproffessinalbocy, nameofbody, dateofapprovalbyproffessionalbody, universityniche, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddBasicInformationAsync(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword, object userState) {
            if ((this.AddBasicInformationOperationCompleted == null)) {
                this.AddBasicInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBasicInformationOperationCompleted);
            }
            this.InvokeAsync("AddBasicInformation", new object[] {
                        qualityAuditNo,
                        name,
                        domain,
                        dateofaccreditation,
                        profesionalbodyapproval,
                        proffessionalbodyeveidence,
                        approvedbyproffessinalbocy,
                        nameofbody,
                        dateofapprovalbyproffessionalbody,
                        universityniche,
                        userCode,
                        userPassword}, this.AddBasicInformationOperationCompleted, userState);
        }
        
        private void OnAddBasicInformationOperationCompleted(object arg) {
            if ((this.AddBasicInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBasicInformationCompleted(this, new AddBasicInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBasicInformation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBasicInformation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBasicInformation(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword) {
            object[] results = this.Invoke("EditBasicInformation", new object[] {
                        qualityAuditNo,
                        name,
                        domain,
                        dateofaccreditation,
                        profesionalbodyapproval,
                        proffessionalbodyeveidence,
                        approvedbyproffessinalbocy,
                        nameofbody,
                        dateofapprovalbyproffessionalbody,
                        universityniche,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBasicInformationAsync(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword) {
            this.EditBasicInformationAsync(qualityAuditNo, name, domain, dateofaccreditation, profesionalbodyapproval, proffessionalbodyeveidence, approvedbyproffessinalbocy, nameofbody, dateofapprovalbyproffessionalbody, universityniche, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditBasicInformationAsync(string qualityAuditNo, string name, string domain, string dateofaccreditation, bool profesionalbodyapproval, bool proffessionalbodyeveidence, bool approvedbyproffessinalbocy, string nameofbody, string dateofapprovalbyproffessionalbody, string universityniche, string userCode, string userPassword, object userState) {
            if ((this.EditBasicInformationOperationCompleted == null)) {
                this.EditBasicInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBasicInformationOperationCompleted);
            }
            this.InvokeAsync("EditBasicInformation", new object[] {
                        qualityAuditNo,
                        name,
                        domain,
                        dateofaccreditation,
                        profesionalbodyapproval,
                        proffessionalbodyeveidence,
                        approvedbyproffessinalbocy,
                        nameofbody,
                        dateofapprovalbyproffessionalbody,
                        universityniche,
                        userCode,
                        userPassword}, this.EditBasicInformationOperationCompleted, userState);
        }
        
        private void OnEditBasicInformationOperationCompleted(object arg) {
            if ((this.EditBasicInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBasicInformationCompleted(this, new EditBasicInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AcceptRejectPeerReviewerJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AcceptRejectPeerReviewerJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptRejectPeerReviewerJob(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptRejectPeerReviewerJob", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptRejectPeerReviewerJobAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptRejectPeerReviewerJobAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptRejectPeerReviewerJobAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptRejectPeerReviewerJobOperationCompleted == null)) {
                this.AcceptRejectPeerReviewerJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptRejectPeerReviewerJobOperationCompleted);
            }
            this.InvokeAsync("AcceptRejectPeerReviewerJob", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptRejectPeerReviewerJobOperationCompleted, userState);
        }
        
        private void OnAcceptRejectPeerReviewerJobOperationCompleted(object arg) {
            if ((this.AcceptRejectPeerReviewerJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptRejectPeerReviewerJobCompleted(this, new AcceptRejectPeerReviewerJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerReviewersEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerReviewersEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerReviewersEvaluation(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo) {
            object[] results = this.Invoke("AddPeerReviewersEvaluation", new object[] {
                        jobCode,
                        peerCode,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluationAsync(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo) {
            this.AddPeerReviewersEvaluationAsync(jobCode, peerCode, component, subComponent, strength, weakness, recommendation, score, applicationNo, null);
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluationAsync(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo, object userState) {
            if ((this.AddPeerReviewersEvaluationOperationCompleted == null)) {
                this.AddPeerReviewersEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerReviewersEvaluationOperationCompleted);
            }
            this.InvokeAsync("AddPeerReviewersEvaluation", new object[] {
                        jobCode,
                        peerCode,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        applicationNo}, this.AddPeerReviewersEvaluationOperationCompleted, userState);
        }
        
        private void OnAddPeerReviewersEvaluationOperationCompleted(object arg) {
            if ((this.AddPeerReviewersEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerReviewersEvaluationCompleted(this, new AddPeerReviewersEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGenericOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGenericOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGenericOutcome(string qaNo, string genericoutcome, string usercode, string password) {
            object[] results = this.Invoke("AddGenericOutcome", new object[] {
                        qaNo,
                        genericoutcome,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGenericOutcomeAsync(string qaNo, string genericoutcome, string usercode, string password) {
            this.AddGenericOutcomeAsync(qaNo, genericoutcome, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddGenericOutcomeAsync(string qaNo, string genericoutcome, string usercode, string password, object userState) {
            if ((this.AddGenericOutcomeOperationCompleted == null)) {
                this.AddGenericOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGenericOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddGenericOutcome", new object[] {
                        qaNo,
                        genericoutcome,
                        usercode,
                        password}, this.AddGenericOutcomeOperationCompleted, userState);
        }
        
        private void OnAddGenericOutcomeOperationCompleted(object arg) {
            if ((this.AddGenericOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGenericOutcomeCompleted(this, new AddGenericOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProffessionalOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProffessionalOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalOutcome(string qaNo, string genericoutcome, string usercode, string password) {
            object[] results = this.Invoke("AddProffessionalOutcome", new object[] {
                        qaNo,
                        genericoutcome,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalOutcomeAsync(string qaNo, string genericoutcome, string usercode, string password) {
            this.AddProffessionalOutcomeAsync(qaNo, genericoutcome, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddProffessionalOutcomeAsync(string qaNo, string genericoutcome, string usercode, string password, object userState) {
            if ((this.AddProffessionalOutcomeOperationCompleted == null)) {
                this.AddProffessionalOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalOutcome", new object[] {
                        qaNo,
                        genericoutcome,
                        usercode,
                        password}, this.AddProffessionalOutcomeOperationCompleted, userState);
        }
        
        private void OnAddProffessionalOutcomeOperationCompleted(object arg) {
            if ((this.AddProffessionalOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalOutcomeCompleted(this, new AddProffessionalOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNeedsRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNeedsRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNeedsRequirements(string qaNo, string stakeholder, string needsrequirements, string addressingrequirements, string usercode, string password) {
            object[] results = this.Invoke("AddNeedsRequirements", new object[] {
                        qaNo,
                        stakeholder,
                        needsrequirements,
                        addressingrequirements,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNeedsRequirementsAsync(string qaNo, string stakeholder, string needsrequirements, string addressingrequirements, string usercode, string password) {
            this.AddNeedsRequirementsAsync(qaNo, stakeholder, needsrequirements, addressingrequirements, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddNeedsRequirementsAsync(string qaNo, string stakeholder, string needsrequirements, string addressingrequirements, string usercode, string password, object userState) {
            if ((this.AddNeedsRequirementsOperationCompleted == null)) {
                this.AddNeedsRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNeedsRequirementsOperationCompleted);
            }
            this.InvokeAsync("AddNeedsRequirements", new object[] {
                        qaNo,
                        stakeholder,
                        needsrequirements,
                        addressingrequirements,
                        usercode,
                        password}, this.AddNeedsRequirementsOperationCompleted, userState);
        }
        
        private void OnAddNeedsRequirementsOperationCompleted(object arg) {
            if ((this.AddNeedsRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNeedsRequirementsCompleted(this, new AddNeedsRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCommunicationDetails(string qaNo, bool memos, bool newsletters, bool meetings, bool conferences, string othercommunications, string usercode, string password) {
            object[] results = this.Invoke("AddCommunicationDetails", new object[] {
                        qaNo,
                        memos,
                        newsletters,
                        meetings,
                        conferences,
                        othercommunications,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommunicationDetailsAsync(string qaNo, bool memos, bool newsletters, bool meetings, bool conferences, string othercommunications, string usercode, string password) {
            this.AddCommunicationDetailsAsync(qaNo, memos, newsletters, meetings, conferences, othercommunications, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddCommunicationDetailsAsync(string qaNo, bool memos, bool newsletters, bool meetings, bool conferences, string othercommunications, string usercode, string password, object userState) {
            if ((this.AddCommunicationDetailsOperationCompleted == null)) {
                this.AddCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("AddCommunicationDetails", new object[] {
                        qaNo,
                        memos,
                        newsletters,
                        meetings,
                        conferences,
                        othercommunications,
                        usercode,
                        password}, this.AddCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnAddCommunicationDetailsOperationCompleted(object arg) {
            if ((this.AddCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommunicationDetailsCompleted(this, new AddCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddExpectedLearningOutcomeDetai" +
            "ls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddExpectedLearningOutcomeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddExpectedLearningOutcomeDetails(string qaNo, string outcomefits, bool outcomereflects, string usercode, string password) {
            object[] results = this.Invoke("AddExpectedLearningOutcomeDetails", new object[] {
                        qaNo,
                        outcomefits,
                        outcomereflects,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExpectedLearningOutcomeDetailsAsync(string qaNo, string outcomefits, bool outcomereflects, string usercode, string password) {
            this.AddExpectedLearningOutcomeDetailsAsync(qaNo, outcomefits, outcomereflects, usercode, password, null);
        }
        
        /// <remarks/>
        public void AddExpectedLearningOutcomeDetailsAsync(string qaNo, string outcomefits, bool outcomereflects, string usercode, string password, object userState) {
            if ((this.AddExpectedLearningOutcomeDetailsOperationCompleted == null)) {
                this.AddExpectedLearningOutcomeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExpectedLearningOutcomeDetailsOperationCompleted);
            }
            this.InvokeAsync("AddExpectedLearningOutcomeDetails", new object[] {
                        qaNo,
                        outcomefits,
                        outcomereflects,
                        usercode,
                        password}, this.AddExpectedLearningOutcomeDetailsOperationCompleted, userState);
        }
        
        private void OnAddExpectedLearningOutcomeDetailsOperationCompleted(object arg) {
            if ((this.AddExpectedLearningOutcomeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExpectedLearningOutcomeDetailsCompleted(this, new AddExpectedLearningOutcomeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnEditPeerReviewersEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnEditPeerReviewersEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPeerReviewersEvaluation(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            object[] results = this.Invoke("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            this.FnEditPeerReviewersEvaluationAsync(entryCode, strength, weakness, recommendation, score, null);
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score, object userState) {
            if ((this.FnEditPeerReviewersEvaluationOperationCompleted == null)) {
                this.FnEditPeerReviewersEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPeerReviewersEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score}, this.FnEditPeerReviewersEvaluationOperationCompleted, userState);
        }
        
        private void OnFnEditPeerReviewersEvaluationOperationCompleted(object arg) {
            if ((this.FnEditPeerReviewersEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPeerReviewersEvaluationCompleted(this, new FnEditPeerReviewersEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendPeerApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendPeerApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password) {
            this.FnSendPeerApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.FnSendPeerApprovalRequestOperationCompleted == null)) {
                this.FnSendPeerApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password}, this.FnSendPeerApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnSendPeerApprovalRequestOperationCompleted(object arg) {
            if ((this.FnSendPeerApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerApprovalRequestCompleted(this, new FnSendPeerApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnRegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnRegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterPeerReviewer(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.FnRegisterPeerReviewerAsync(name, idNumber, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.FnRegisterPeerReviewerOperationCompleted == null)) {
                this.FnRegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.FnRegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnFnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.FnRegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterPeerReviewerCompleted(this, new FnRegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetVendornNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetVendornNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetVendornNumber(string usercode) {
            object[] results = this.Invoke("FnGetVendornNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode) {
            this.FnGetVendornNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode, object userState) {
            if ((this.FnGetVendornNumberOperationCompleted == null)) {
                this.FnGetVendornNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetVendornNumberOperationCompleted);
            }
            this.InvokeAsync("FnGetVendornNumber", new object[] {
                        usercode}, this.FnGetVendornNumberOperationCompleted, userState);
        }
        
        private void OnFnGetVendornNumberOperationCompleted(object arg) {
            if ((this.FnGetVendornNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetVendornNumberCompleted(this, new FnGetVendornNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertBlog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertBlog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlog(string blogTitle, string blogBody, string dirNo, string dirName) {
            object[] results = this.Invoke("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName) {
            this.FnInsertBlogAsync(blogTitle, blogBody, dirNo, dirName, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName, object userState) {
            if ((this.FnInsertBlogOperationCompleted == null)) {
                this.FnInsertBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName}, this.FnInsertBlogOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogOperationCompleted(object arg) {
            if ((this.FnInsertBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogCompleted(this, new FnInsertBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnInsertBlogReply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnInsertBlogReply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlogReply(string blogReply, string dirNo, string dirName, int blogId) {
            object[] results = this.Invoke("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId) {
            this.FnInsertBlogReplyAsync(blogReply, dirNo, dirName, blogId, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId, object userState) {
            if ((this.FnInsertBlogReplyOperationCompleted == null)) {
                this.FnInsertBlogReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogReplyOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId}, this.FnInsertBlogReplyOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogReplyOperationCompleted(object arg) {
            if ((this.FnInsertBlogReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogReplyCompleted(this, new FnInsertBlogReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetRationaleDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetRationaleDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetRationaleDescription(string accreditation, string universitycode, int category) {
            object[] results = this.Invoke("FngetRationaleDescription", new object[] {
                        accreditation,
                        universitycode,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetRationaleDescriptionAsync(string accreditation, string universitycode, int category) {
            this.FngetRationaleDescriptionAsync(accreditation, universitycode, category, null);
        }
        
        /// <remarks/>
        public void FngetRationaleDescriptionAsync(string accreditation, string universitycode, int category, object userState) {
            if ((this.FngetRationaleDescriptionOperationCompleted == null)) {
                this.FngetRationaleDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetRationaleDescriptionOperationCompleted);
            }
            this.InvokeAsync("FngetRationaleDescription", new object[] {
                        accreditation,
                        universitycode,
                        category}, this.FngetRationaleDescriptionOperationCompleted, userState);
        }
        
        private void OnFngetRationaleDescriptionOperationCompleted(object arg) {
            if ((this.FngetRationaleDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetRationaleDescriptionCompleted(this, new FngetRationaleDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetLearningOutcomeDescription" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetLearningOutcomeDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetLearningOutcomeDescription(string accreditation, string universitycode, int outcomecode) {
            object[] results = this.Invoke("FngetLearningOutcomeDescription", new object[] {
                        accreditation,
                        universitycode,
                        outcomecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeDescriptionAsync(string accreditation, string universitycode, int outcomecode) {
            this.FngetLearningOutcomeDescriptionAsync(accreditation, universitycode, outcomecode, null);
        }
        
        /// <remarks/>
        public void FngetLearningOutcomeDescriptionAsync(string accreditation, string universitycode, int outcomecode, object userState) {
            if ((this.FngetLearningOutcomeDescriptionOperationCompleted == null)) {
                this.FngetLearningOutcomeDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetLearningOutcomeDescriptionOperationCompleted);
            }
            this.InvokeAsync("FngetLearningOutcomeDescription", new object[] {
                        accreditation,
                        universitycode,
                        outcomecode}, this.FngetLearningOutcomeDescriptionOperationCompleted, userState);
        }
        
        private void OnFngetLearningOutcomeDescriptionOperationCompleted(object arg) {
            if ((this.FngetLearningOutcomeDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetLearningOutcomeDescriptionCompleted(this, new FngetLearningOutcomeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetSpecializationDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetSpecializationDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSpecializationDescription(string accreditation, string universitycode, int specializationarea) {
            object[] results = this.Invoke("FngetSpecializationDescription", new object[] {
                        accreditation,
                        universitycode,
                        specializationarea});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSpecializationDescriptionAsync(string accreditation, string universitycode, int specializationarea) {
            this.FngetSpecializationDescriptionAsync(accreditation, universitycode, specializationarea, null);
        }
        
        /// <remarks/>
        public void FngetSpecializationDescriptionAsync(string accreditation, string universitycode, int specializationarea, object userState) {
            if ((this.FngetSpecializationDescriptionOperationCompleted == null)) {
                this.FngetSpecializationDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSpecializationDescriptionOperationCompleted);
            }
            this.InvokeAsync("FngetSpecializationDescription", new object[] {
                        accreditation,
                        universitycode,
                        specializationarea}, this.FngetSpecializationDescriptionOperationCompleted, userState);
        }
        
        private void OnFngetSpecializationDescriptionOperationCompleted(object arg) {
            if ((this.FngetSpecializationDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSpecializationDescriptionCompleted(this, new FngetSpecializationDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUnitDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUnitDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUnitDescription(string accreditation, string universitycode, int code) {
            object[] results = this.Invoke("FngetUnitDescription", new object[] {
                        accreditation,
                        universitycode,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUnitDescriptionAsync(string accreditation, string universitycode, int code) {
            this.FngetUnitDescriptionAsync(accreditation, universitycode, code, null);
        }
        
        /// <remarks/>
        public void FngetUnitDescriptionAsync(string accreditation, string universitycode, int code, object userState) {
            if ((this.FngetUnitDescriptionOperationCompleted == null)) {
                this.FngetUnitDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUnitDescriptionOperationCompleted);
            }
            this.InvokeAsync("FngetUnitDescription", new object[] {
                        accreditation,
                        universitycode,
                        code}, this.FngetUnitDescriptionOperationCompleted, userState);
        }
        
        private void OnFngetUnitDescriptionOperationCompleted(object arg) {
            if ((this.FngetUnitDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUnitDescriptionCompleted(this, new FngetUnitDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetReferenceMaterial", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetReferenceMaterial_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetReferenceMaterial(string accreditation, string universitycode, string code) {
            object[] results = this.Invoke("FngetReferenceMaterial", new object[] {
                        accreditation,
                        universitycode,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetReferenceMaterialAsync(string accreditation, string universitycode, string code) {
            this.FngetReferenceMaterialAsync(accreditation, universitycode, code, null);
        }
        
        /// <remarks/>
        public void FngetReferenceMaterialAsync(string accreditation, string universitycode, string code, object userState) {
            if ((this.FngetReferenceMaterialOperationCompleted == null)) {
                this.FngetReferenceMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetReferenceMaterialOperationCompleted);
            }
            this.InvokeAsync("FngetReferenceMaterial", new object[] {
                        accreditation,
                        universitycode,
                        code}, this.FngetReferenceMaterialOperationCompleted, userState);
        }
        
        private void OnFngetReferenceMaterialOperationCompleted(object arg) {
            if ((this.FngetReferenceMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetReferenceMaterialCompleted(this, new FngetReferenceMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetPhylosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetPhylosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetPhylosophy(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetPhylosophy", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetPhylosophyAsync(string accreditation, string universitycode) {
            this.FngetPhylosophyAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetPhylosophyAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetPhylosophyOperationCompleted == null)) {
                this.FngetPhylosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetPhylosophyOperationCompleted);
            }
            this.InvokeAsync("FngetPhylosophy", new object[] {
                        accreditation,
                        universitycode}, this.FngetPhylosophyOperationCompleted, userState);
        }
        
        private void OnFngetPhylosophyOperationCompleted(object arg) {
            if ((this.FngetPhylosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetPhylosophyCompleted(this, new FngetPhylosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetAdmissionRequirement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetAdmissionRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetAdmissionRequirement(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetAdmissionRequirement", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetAdmissionRequirementAsync(string accreditation, string universitycode) {
            this.FngetAdmissionRequirementAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetAdmissionRequirementAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetAdmissionRequirementOperationCompleted == null)) {
                this.FngetAdmissionRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetAdmissionRequirementOperationCompleted);
            }
            this.InvokeAsync("FngetAdmissionRequirement", new object[] {
                        accreditation,
                        universitycode}, this.FngetAdmissionRequirementOperationCompleted, userState);
        }
        
        private void OnFngetAdmissionRequirementOperationCompleted(object arg) {
            if ((this.FngetAdmissionRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetAdmissionRequirementCompleted(this, new FngetAdmissionRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetGoalProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetGoalProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGoalProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetGoalProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGoalProgrammeAsync(string accreditation, string universitycode) {
            this.FngetGoalProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetGoalProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetGoalProgrammeOperationCompleted == null)) {
                this.FngetGoalProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGoalProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetGoalProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetGoalProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetGoalProgrammeOperationCompleted(object arg) {
            if ((this.FngetGoalProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGoalProgrammeCompleted(this, new FngetGoalProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetRequlationsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetRequlationsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetRequlationsProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetRequlationsProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetRequlationsProgrammeAsync(string accreditation, string universitycode) {
            this.FngetRequlationsProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetRequlationsProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetRequlationsProgrammeOperationCompleted == null)) {
                this.FngetRequlationsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetRequlationsProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetRequlationsProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetRequlationsProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetRequlationsProgrammeOperationCompleted(object arg) {
            if ((this.FngetRequlationsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetRequlationsProgrammeCompleted(this, new FngetRequlationsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetExaminationsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetExaminationsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetExaminationsProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetExaminationsProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetExaminationsProgrammeAsync(string accreditation, string universitycode) {
            this.FngetExaminationsProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetExaminationsProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetExaminationsProgrammeOperationCompleted == null)) {
                this.FngetExaminationsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetExaminationsProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetExaminationsProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetExaminationsProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetExaminationsProgrammeOperationCompleted(object arg) {
            if ((this.FngetExaminationsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetExaminationsProgrammeCompleted(this, new FngetExaminationsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetGraduationsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetGraduationsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGraduationsProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetGraduationsProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGraduationsProgrammeAsync(string accreditation, string universitycode) {
            this.FngetGraduationsProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetGraduationsProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetGraduationsProgrammeOperationCompleted == null)) {
                this.FngetGraduationsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGraduationsProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetGraduationsProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetGraduationsProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetGraduationsProgrammeOperationCompleted(object arg) {
            if ((this.FngetGraduationsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGraduationsProgrammeCompleted(this, new FngetGraduationsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetThesisProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetThesisProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetThesisProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetThesisProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetThesisProgrammeAsync(string accreditation, string universitycode) {
            this.FngetThesisProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetThesisProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetThesisProgrammeOperationCompleted == null)) {
                this.FngetThesisProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetThesisProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetThesisProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetThesisProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetThesisProgrammeOperationCompleted(object arg) {
            if ((this.FngetThesisProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetThesisProgrammeCompleted(this, new FngetThesisProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetManagementProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetManagementProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetManagementProgramme(string accreditation, string universitycode) {
            object[] results = this.Invoke("FngetManagementProgramme", new object[] {
                        accreditation,
                        universitycode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetManagementProgrammeAsync(string accreditation, string universitycode) {
            this.FngetManagementProgrammeAsync(accreditation, universitycode, null);
        }
        
        /// <remarks/>
        public void FngetManagementProgrammeAsync(string accreditation, string universitycode, object userState) {
            if ((this.FngetManagementProgrammeOperationCompleted == null)) {
                this.FngetManagementProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetManagementProgrammeOperationCompleted);
            }
            this.InvokeAsync("FngetManagementProgramme", new object[] {
                        accreditation,
                        universitycode}, this.FngetManagementProgrammeOperationCompleted, userState);
        }
        
        private void OnFngetManagementProgrammeOperationCompleted(object arg) {
            if ((this.FngetManagementProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetManagementProgrammeCompleted(this, new FngetManagementProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetApplicationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode) {
            this.GetApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetApplicationNumberOperationCompleted == null)) {
                this.GetApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetApplicationNumber", new object[] {
                        usercode}, this.GetApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetApplicationNumberOperationCompleted(object arg) {
            if ((this.GetApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationNumberCompleted(this, new GetApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetAccreditationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetAccreditationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAccreditationNumber(string university) {
            object[] results = this.Invoke("GetAccreditationNumber", new object[] {
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccreditationNumberAsync(string university) {
            this.GetAccreditationNumberAsync(university, null);
        }
        
        /// <remarks/>
        public void GetAccreditationNumberAsync(string university, object userState) {
            if ((this.GetAccreditationNumberOperationCompleted == null)) {
                this.GetAccreditationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccreditationNumberOperationCompleted);
            }
            this.InvokeAsync("GetAccreditationNumber", new object[] {
                        university}, this.GetAccreditationNumberOperationCompleted, userState);
        }
        
        private void OnGetAccreditationNumberOperationCompleted(object arg) {
            if ((this.GetAccreditationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccreditationNumberCompleted(this, new GetAccreditationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetQualityAuditNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetQualityAuditNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetQualityAuditNumber(string university) {
            object[] results = this.Invoke("GetQualityAuditNumber", new object[] {
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQualityAuditNumberAsync(string university) {
            this.GetQualityAuditNumberAsync(university, null);
        }
        
        /// <remarks/>
        public void GetQualityAuditNumberAsync(string university, object userState) {
            if ((this.GetQualityAuditNumberOperationCompleted == null)) {
                this.GetQualityAuditNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualityAuditNumberOperationCompleted);
            }
            this.InvokeAsync("GetQualityAuditNumber", new object[] {
                        university}, this.GetQualityAuditNumberOperationCompleted, userState);
        }
        
        private void OnGetQualityAuditNumberOperationCompleted(object arg) {
            if ((this.GetQualityAuditNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualityAuditNumberCompleted(this, new GetQualityAuditNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetOutComenNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetOutComenNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOutComenNumber(string institutionno) {
            object[] results = this.Invoke("GetOutComenNumber", new object[] {
                        institutionno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutComenNumberAsync(string institutionno) {
            this.GetOutComenNumberAsync(institutionno, null);
        }
        
        /// <remarks/>
        public void GetOutComenNumberAsync(string institutionno, object userState) {
            if ((this.GetOutComenNumberOperationCompleted == null)) {
                this.GetOutComenNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutComenNumberOperationCompleted);
            }
            this.InvokeAsync("GetOutComenNumber", new object[] {
                        institutionno}, this.GetOutComenNumberOperationCompleted, userState);
        }
        
        private void OnGetOutComenNumberOperationCompleted(object arg) {
            if ((this.GetOutComenNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutComenNumberCompleted(this, new GetOutComenNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryServices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryServices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryServices(string libraryname, bool informationLiteracy, bool referenceinformation, bool circulation, bool awareness, bool interlibraryloans, bool reprographic, bool multimedia, bool knowledgemanagement, bool preservation, bool archiving, string username, string password) {
            object[] results = this.Invoke("AddLibraryServices", new object[] {
                        libraryname,
                        informationLiteracy,
                        referenceinformation,
                        circulation,
                        awareness,
                        interlibraryloans,
                        reprographic,
                        multimedia,
                        knowledgemanagement,
                        preservation,
                        archiving,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryServicesAsync(string libraryname, bool informationLiteracy, bool referenceinformation, bool circulation, bool awareness, bool interlibraryloans, bool reprographic, bool multimedia, bool knowledgemanagement, bool preservation, bool archiving, string username, string password) {
            this.AddLibraryServicesAsync(libraryname, informationLiteracy, referenceinformation, circulation, awareness, interlibraryloans, reprographic, multimedia, knowledgemanagement, preservation, archiving, username, password, null);
        }
        
        /// <remarks/>
        public void AddLibraryServicesAsync(string libraryname, bool informationLiteracy, bool referenceinformation, bool circulation, bool awareness, bool interlibraryloans, bool reprographic, bool multimedia, bool knowledgemanagement, bool preservation, bool archiving, string username, string password, object userState) {
            if ((this.AddLibraryServicesOperationCompleted == null)) {
                this.AddLibraryServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryServicesOperationCompleted);
            }
            this.InvokeAsync("AddLibraryServices", new object[] {
                        libraryname,
                        informationLiteracy,
                        referenceinformation,
                        circulation,
                        awareness,
                        interlibraryloans,
                        reprographic,
                        multimedia,
                        knowledgemanagement,
                        preservation,
                        archiving,
                        username,
                        password}, this.AddLibraryServicesOperationCompleted, userState);
        }
        
        private void OnAddLibraryServicesOperationCompleted(object arg) {
            if ((this.AddLibraryServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryServicesCompleted(this, new AddLibraryServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCourseLearningOutcome(string appNo) {
            object[] results = this.Invoke("FnGetCourseLearningOutcome", new object[] {
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCourseLearningOutcomeAsync(string appNo) {
            this.FnGetCourseLearningOutcomeAsync(appNo, null);
        }
        
        /// <remarks/>
        public void FnGetCourseLearningOutcomeAsync(string appNo, object userState) {
            if ((this.FnGetCourseLearningOutcomeOperationCompleted == null)) {
                this.FnGetCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("FnGetCourseLearningOutcome", new object[] {
                        appNo}, this.FnGetCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnFnGetCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.FnGetCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCourseLearningOutcomeCompleted(this, new FnGetCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryFunctionalAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryFunctionalAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryFunctionalAreas(string libraryname, bool tcirculations, bool treferenceinformation, bool tdigitalsections, bool tlibrarianoffice, bool tstaffworking, bool ttrechnicalarea, bool tstackarea, bool treadingsection, bool tluggagearea, bool treprographic, string username, string password) {
            object[] results = this.Invoke("AddLibraryFunctionalAreas", new object[] {
                        libraryname,
                        tcirculations,
                        treferenceinformation,
                        tdigitalsections,
                        tlibrarianoffice,
                        tstaffworking,
                        ttrechnicalarea,
                        tstackarea,
                        treadingsection,
                        tluggagearea,
                        treprographic,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryFunctionalAreasAsync(string libraryname, bool tcirculations, bool treferenceinformation, bool tdigitalsections, bool tlibrarianoffice, bool tstaffworking, bool ttrechnicalarea, bool tstackarea, bool treadingsection, bool tluggagearea, bool treprographic, string username, string password) {
            this.AddLibraryFunctionalAreasAsync(libraryname, tcirculations, treferenceinformation, tdigitalsections, tlibrarianoffice, tstaffworking, ttrechnicalarea, tstackarea, treadingsection, tluggagearea, treprographic, username, password, null);
        }
        
        /// <remarks/>
        public void AddLibraryFunctionalAreasAsync(string libraryname, bool tcirculations, bool treferenceinformation, bool tdigitalsections, bool tlibrarianoffice, bool tstaffworking, bool ttrechnicalarea, bool tstackarea, bool treadingsection, bool tluggagearea, bool treprographic, string username, string password, object userState) {
            if ((this.AddLibraryFunctionalAreasOperationCompleted == null)) {
                this.AddLibraryFunctionalAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryFunctionalAreasOperationCompleted);
            }
            this.InvokeAsync("AddLibraryFunctionalAreas", new object[] {
                        libraryname,
                        tcirculations,
                        treferenceinformation,
                        tdigitalsections,
                        tlibrarianoffice,
                        tstaffworking,
                        ttrechnicalarea,
                        tstackarea,
                        treadingsection,
                        tluggagearea,
                        treprographic,
                        username,
                        password}, this.AddLibraryFunctionalAreasOperationCompleted, userState);
        }
        
        private void OnAddLibraryFunctionalAreasOperationCompleted(object arg) {
            if ((this.AddLibraryFunctionalAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryFunctionalAreasCompleted(this, new AddLibraryFunctionalAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ProgramAccreditationAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ProgramAccreditationAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProgramAccreditationAlert(int user, string universityCode, string accreditno) {
            object[] results = this.Invoke("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno) {
            this.ProgramAccreditationAlertAsync(user, universityCode, accreditno, null);
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno, object userState) {
            if ((this.ProgramAccreditationAlertOperationCompleted == null)) {
                this.ProgramAccreditationAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramAccreditationAlertOperationCompleted);
            }
            this.InvokeAsync("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno}, this.ProgramAccreditationAlertOperationCompleted, userState);
        }
        
        private void OnProgramAccreditationAlertOperationCompleted(object arg) {
            if ((this.ProgramAccreditationAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramAccreditationAlertCompleted(this, new ProgramAccreditationAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetProgramApplicationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetProgramApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProgramApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetProgramApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode) {
            this.GetProgramApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetProgramApplicationNumberOperationCompleted == null)) {
                this.GetProgramApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetProgramApplicationNumber", new object[] {
                        usercode}, this.GetProgramApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetProgramApplicationNumberOperationCompleted(object arg) {
            if ((this.GetProgramApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramApplicationNumberCompleted(this, new GetProgramApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionCreateinvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionCreateinvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionCreateinvoice(string universityCode, int usercode) {
            object[] results = this.Invoke("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode) {
            this.InstitutionCreateinvoiceAsync(universityCode, usercode, null);
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode, object userState) {
            if ((this.InstitutionCreateinvoiceOperationCompleted == null)) {
                this.InstitutionCreateinvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionCreateinvoiceOperationCompleted);
            }
            this.InvokeAsync("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode}, this.InstitutionCreateinvoiceOperationCompleted, userState);
        }
        
        private void OnInstitutionCreateinvoiceOperationCompleted(object arg) {
            if ((this.InstitutionCreateinvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionCreateinvoiceCompleted(this, new InstitutionCreateinvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddComments(string usercode, string universitycode, string commentdescription) {
            object[] results = this.Invoke("AddComments", new object[] {
                        usercode,
                        universitycode,
                        commentdescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentsAsync(string usercode, string universitycode, string commentdescription) {
            this.AddCommentsAsync(usercode, universitycode, commentdescription, null);
        }
        
        /// <remarks/>
        public void AddCommentsAsync(string usercode, string universitycode, string commentdescription, object userState) {
            if ((this.AddCommentsOperationCompleted == null)) {
                this.AddCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentsOperationCompleted);
            }
            this.InvokeAsync("AddComments", new object[] {
                        usercode,
                        universitycode,
                        commentdescription}, this.AddCommentsOperationCompleted, userState);
        }
        
        private void OnAddCommentsOperationCompleted(object arg) {
            if ((this.AddCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentsCompleted(this, new AddCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryPolicies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryPolicies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryPolicies(string usercode, string password, bool attachedpolicy, bool repositorypolicy, bool rulesandrequlations, bool circulationpolicy, bool disasterpolicy, bool ictpolcy, bool collectionpolicy) {
            object[] results = this.Invoke("AddLibraryPolicies", new object[] {
                        usercode,
                        password,
                        attachedpolicy,
                        repositorypolicy,
                        rulesandrequlations,
                        circulationpolicy,
                        disasterpolicy,
                        ictpolcy,
                        collectionpolicy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryPoliciesAsync(string usercode, string password, bool attachedpolicy, bool repositorypolicy, bool rulesandrequlations, bool circulationpolicy, bool disasterpolicy, bool ictpolcy, bool collectionpolicy) {
            this.AddLibraryPoliciesAsync(usercode, password, attachedpolicy, repositorypolicy, rulesandrequlations, circulationpolicy, disasterpolicy, ictpolcy, collectionpolicy, null);
        }
        
        /// <remarks/>
        public void AddLibraryPoliciesAsync(string usercode, string password, bool attachedpolicy, bool repositorypolicy, bool rulesandrequlations, bool circulationpolicy, bool disasterpolicy, bool ictpolcy, bool collectionpolicy, object userState) {
            if ((this.AddLibraryPoliciesOperationCompleted == null)) {
                this.AddLibraryPoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryPoliciesOperationCompleted);
            }
            this.InvokeAsync("AddLibraryPolicies", new object[] {
                        usercode,
                        password,
                        attachedpolicy,
                        repositorypolicy,
                        rulesandrequlations,
                        circulationpolicy,
                        disasterpolicy,
                        ictpolcy,
                        collectionpolicy}, this.AddLibraryPoliciesOperationCompleted, userState);
        }
        
        private void OnAddLibraryPoliciesOperationCompleted(object arg) {
            if ((this.AddLibraryPoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryPoliciesCompleted(this, new AddLibraryPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmPayment(string universityCode) {
            this.Invoke("ConfirmPayment", new object[] {
                        universityCode});
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode) {
            this.ConfirmPaymentAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode, object userState) {
            if ((this.ConfirmPaymentOperationCompleted == null)) {
                this.ConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ConfirmPayment", new object[] {
                        universityCode}, this.ConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentOperationCompleted(object arg) {
            if ((this.ConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ProgramConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ProgramConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProgramConfirmPayment(decimal amount) {
            this.Invoke("ProgramConfirmPayment", new object[] {
                        amount});
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount) {
            this.ProgramConfirmPaymentAsync(amount, null);
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount, object userState) {
            if ((this.ProgramConfirmPaymentOperationCompleted == null)) {
                this.ProgramConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ProgramConfirmPayment", new object[] {
                        amount}, this.ProgramConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnProgramConfirmPaymentOperationCompleted(object arg) {
            if ((this.ProgramConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentDraft", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentDraft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentDraft(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    int submissioncategory, 
                    string userCode, 
                    string userPassword) {
            object[] results = this.Invoke("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        submissioncategory,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    int submissioncategory, 
                    string userCode, 
                    string userPassword) {
            this.AddStudentDraftAsync(idPassport, admissionNo, surname, middleName, firstName, gender, dob, homeCounty, ethnicBckground, nationality, sponsorship, yearOfStudy, disabilityDescription, disabilityCode, myProgram, dateOfAdmission, campusCode, residentstatus, studentstatus, submissioncategory, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    int submissioncategory, 
                    string userCode, 
                    string userPassword, 
                    object userState) {
            if ((this.AddStudentDraftOperationCompleted == null)) {
                this.AddStudentDraftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentDraftOperationCompleted);
            }
            this.InvokeAsync("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        submissioncategory,
                        userCode,
                        userPassword}, this.AddStudentDraftOperationCompleted, userState);
        }
        
        private void OnAddStudentDraftOperationCompleted(object arg) {
            if ((this.AddStudentDraftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentDraftCompleted(this, new AddStudentDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdateStudentDraft", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdateStudentDraft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateStudentDraft(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword) {
            object[] results = this.Invoke("UpdateStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword) {
            this.UpdateStudentDraftAsync(idPassport, admissionNo, surname, middleName, firstName, gender, dob, homeCounty, ethnicBckground, nationality, sponsorship, yearOfStudy, disabilityDescription, disabilityCode, myProgram, dateOfAdmission, campusCode, residentstatus, studentstatus, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void UpdateStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword, 
                    object userState) {
            if ((this.UpdateStudentDraftOperationCompleted == null)) {
                this.UpdateStudentDraftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStudentDraftOperationCompleted);
            }
            this.InvokeAsync("UpdateStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        userCode,
                        userPassword}, this.UpdateStudentDraftOperationCompleted, userState);
        }
        
        private void OnUpdateStudentDraftOperationCompleted(object arg) {
            if ((this.UpdateStudentDraftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStudentDraftCompleted(this, new UpdateStudentDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Approve", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Approve_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approve(string category, string userId, string password, bool action) {
            object[] results = this.Invoke("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action) {
            this.ApproveAsync(category, userId, password, action, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteStudent(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password) {
            this.DeleteStudentAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteStudentOperationCompleted == null)) {
                this.DeleteStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentOperationCompleted);
            }
            this.InvokeAsync("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteStudentOperationCompleted, userState);
        }
        
        private void OnDeleteStudentOperationCompleted(object arg) {
            if ((this.DeleteStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentCompleted(this, new DeleteStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSanitations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSanitations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSanitations(string campus, string type, string number, string location, string userCode, string password) {
            object[] results = this.Invoke("EditSanitations", new object[] {
                        campus,
                        type,
                        number,
                        location,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSanitationsAsync(string campus, string type, string number, string location, string userCode, string password) {
            this.EditSanitationsAsync(campus, type, number, location, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditSanitationsAsync(string campus, string type, string number, string location, string userCode, string password, object userState) {
            if ((this.EditSanitationsOperationCompleted == null)) {
                this.EditSanitationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSanitationsOperationCompleted);
            }
            this.InvokeAsync("EditSanitations", new object[] {
                        campus,
                        type,
                        number,
                        location,
                        userCode,
                        password}, this.EditSanitationsOperationCompleted, userState);
        }
        
        private void OnEditSanitationsOperationCompleted(object arg) {
            if ((this.EditSanitationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSanitationsCompleted(this, new EditSanitationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditUtility", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditUtility_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditUtility(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password) {
            object[] results = this.Invoke("EditUtility", new object[] {
                        universitycode,
                        campus,
                        category,
                        name,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUtilityAsync(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password) {
            this.EditUtilityAsync(universitycode, campus, category, name, utilitystatus, capacity, serviceprovider, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditUtilityAsync(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password, object userState) {
            if ((this.EditUtilityOperationCompleted == null)) {
                this.EditUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUtilityOperationCompleted);
            }
            this.InvokeAsync("EditUtility", new object[] {
                        universitycode,
                        campus,
                        category,
                        name,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        password}, this.EditUtilityOperationCompleted, userState);
        }
        
        private void OnEditUtilityOperationCompleted(object arg) {
            if ((this.EditUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUtilityCompleted(this, new EditUtilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBuilding(int buildingCode, string campus, string category, string description, int capacity, string location, decimal size, int trooms, string userCode, string userPassword) {
            object[] results = this.Invoke("EditBuilding", new object[] {
                        buildingCode,
                        campus,
                        category,
                        description,
                        capacity,
                        location,
                        size,
                        trooms,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBuildingAsync(int buildingCode, string campus, string category, string description, int capacity, string location, decimal size, int trooms, string userCode, string userPassword) {
            this.EditBuildingAsync(buildingCode, campus, category, description, capacity, location, size, trooms, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditBuildingAsync(int buildingCode, string campus, string category, string description, int capacity, string location, decimal size, int trooms, string userCode, string userPassword, object userState) {
            if ((this.EditBuildingOperationCompleted == null)) {
                this.EditBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBuildingOperationCompleted);
            }
            this.InvokeAsync("EditBuilding", new object[] {
                        buildingCode,
                        campus,
                        category,
                        description,
                        capacity,
                        location,
                        size,
                        trooms,
                        userCode,
                        userPassword}, this.EditBuildingOperationCompleted, userState);
        }
        
        private void OnEditBuildingOperationCompleted(object arg) {
            if ((this.EditBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBuildingCompleted(this, new EditBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFire(string universitycode, string campus, string @class, string location, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofinspection, int noofdevices, string userCode, string password) {
            object[] results = this.Invoke("EditFire", new object[] {
                        universitycode,
                        campus,
                        @class,
                        location,
                        dateofinspection,
                        noofdevices,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFireAsync(string universitycode, string campus, string @class, string location, System.DateTime dateofinspection, int noofdevices, string userCode, string password) {
            this.EditFireAsync(universitycode, campus, @class, location, dateofinspection, noofdevices, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditFireAsync(string universitycode, string campus, string @class, string location, System.DateTime dateofinspection, int noofdevices, string userCode, string password, object userState) {
            if ((this.EditFireOperationCompleted == null)) {
                this.EditFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFireOperationCompleted);
            }
            this.InvokeAsync("EditFire", new object[] {
                        universitycode,
                        campus,
                        @class,
                        location,
                        dateofinspection,
                        noofdevices,
                        userCode,
                        password}, this.EditFireOperationCompleted, userState);
        }
        
        private void OnEditFireOperationCompleted(object arg) {
            if ((this.EditFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFireCompleted(this, new EditFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditRoadAccess", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditRoadAccess_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditRoadAccess(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password) {
            object[] results = this.Invoke("EditRoadAccess", new object[] {
                        universitycode,
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditRoadAccessAsync(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password) {
            this.EditRoadAccessAsync(universitycode, campus, roadstatus, description, distance, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditRoadAccessAsync(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password, object userState) {
            if ((this.EditRoadAccessOperationCompleted == null)) {
                this.EditRoadAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditRoadAccessOperationCompleted);
            }
            this.InvokeAsync("EditRoadAccess", new object[] {
                        universitycode,
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        password}, this.EditRoadAccessOperationCompleted, userState);
        }
        
        private void OnEditRoadAccessOperationCompleted(object arg) {
            if ((this.EditRoadAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditRoadAccessCompleted(this, new EditRoadAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditRecreatonal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditRecreatonal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditRecreatonal(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password) {
            object[] results = this.Invoke("EditRecreatonal", new object[] {
                        universitycode,
                        campus,
                        type,
                        location,
                        quantity,
                        ownership,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditRecreatonalAsync(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password) {
            this.EditRecreatonalAsync(universitycode, campus, type, location, quantity, ownership, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditRecreatonalAsync(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password, object userState) {
            if ((this.EditRecreatonalOperationCompleted == null)) {
                this.EditRecreatonalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditRecreatonalOperationCompleted);
            }
            this.InvokeAsync("EditRecreatonal", new object[] {
                        universitycode,
                        campus,
                        type,
                        location,
                        quantity,
                        ownership,
                        userCode,
                        password}, this.EditRecreatonalOperationCompleted, userState);
        }
        
        private void OnEditRecreatonalOperationCompleted(object arg) {
            if ((this.EditRecreatonalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditRecreatonalCompleted(this, new EditRecreatonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditPlantsEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditPlantsEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPlantsEquipments(string universitycode, string campus, string type, int quantity, string location, string userCode, string password) {
            object[] results = this.Invoke("EditPlantsEquipments", new object[] {
                        universitycode,
                        campus,
                        type,
                        quantity,
                        location,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPlantsEquipmentsAsync(string universitycode, string campus, string type, int quantity, string location, string userCode, string password) {
            this.EditPlantsEquipmentsAsync(universitycode, campus, type, quantity, location, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditPlantsEquipmentsAsync(string universitycode, string campus, string type, int quantity, string location, string userCode, string password, object userState) {
            if ((this.EditPlantsEquipmentsOperationCompleted == null)) {
                this.EditPlantsEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPlantsEquipmentsOperationCompleted);
            }
            this.InvokeAsync("EditPlantsEquipments", new object[] {
                        universitycode,
                        campus,
                        type,
                        quantity,
                        location,
                        userCode,
                        password}, this.EditPlantsEquipmentsOperationCompleted, userState);
        }
        
        private void OnEditPlantsEquipmentsOperationCompleted(object arg) {
            if ((this.EditPlantsEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPlantsEquipmentsCompleted(this, new EditPlantsEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditWasteManagement(string universitycode, string campus, string category, string description, string others, string wastecapacity, string userCode, string password) {
            object[] results = this.Invoke("EditWasteManagement", new object[] {
                        universitycode,
                        campus,
                        category,
                        description,
                        others,
                        wastecapacity,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWasteManagementAsync(string universitycode, string campus, string category, string description, string others, string wastecapacity, string userCode, string password) {
            this.EditWasteManagementAsync(universitycode, campus, category, description, others, wastecapacity, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditWasteManagementAsync(string universitycode, string campus, string category, string description, string others, string wastecapacity, string userCode, string password, object userState) {
            if ((this.EditWasteManagementOperationCompleted == null)) {
                this.EditWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWasteManagementOperationCompleted);
            }
            this.InvokeAsync("EditWasteManagement", new object[] {
                        universitycode,
                        campus,
                        category,
                        description,
                        others,
                        wastecapacity,
                        userCode,
                        password}, this.EditWasteManagementOperationCompleted, userState);
        }
        
        private void OnEditWasteManagementOperationCompleted(object arg) {
            if ((this.EditWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWasteManagementCompleted(this, new EditWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLibrary(
                    string universitycode, 
                    string campus, 
                    string description, 
                    string sitting, 
                    string functional, 
                    int volume, 
                    int title, 
                    string bandwith, 
                    int staff, 
                    string qualifications, 
                    int computers, 
                    string accesspoints, 
                    bool librarymanagementcommittee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepo, 
                    bool securitysystem, 
                    bool offcampussystem, 
                    bool opacs, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("EditLibrary", new object[] {
                        universitycode,
                        campus,
                        description,
                        sitting,
                        functional,
                        volume,
                        title,
                        bandwith,
                        staff,
                        qualifications,
                        computers,
                        accesspoints,
                        librarymanagementcommittee,
                        libraryadvisorycommittee,
                        antiplagiarism,
                        digitalrepo,
                        securitysystem,
                        offcampussystem,
                        opacs,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLibraryAsync(
                    string universitycode, 
                    string campus, 
                    string description, 
                    string sitting, 
                    string functional, 
                    int volume, 
                    int title, 
                    string bandwith, 
                    int staff, 
                    string qualifications, 
                    int computers, 
                    string accesspoints, 
                    bool librarymanagementcommittee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepo, 
                    bool securitysystem, 
                    bool offcampussystem, 
                    bool opacs, 
                    string userCode, 
                    string password) {
            this.EditLibraryAsync(universitycode, campus, description, sitting, functional, volume, title, bandwith, staff, qualifications, computers, accesspoints, librarymanagementcommittee, libraryadvisorycommittee, antiplagiarism, digitalrepo, securitysystem, offcampussystem, opacs, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLibraryAsync(
                    string universitycode, 
                    string campus, 
                    string description, 
                    string sitting, 
                    string functional, 
                    int volume, 
                    int title, 
                    string bandwith, 
                    int staff, 
                    string qualifications, 
                    int computers, 
                    string accesspoints, 
                    bool librarymanagementcommittee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepo, 
                    bool securitysystem, 
                    bool offcampussystem, 
                    bool opacs, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.EditLibraryOperationCompleted == null)) {
                this.EditLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLibraryOperationCompleted);
            }
            this.InvokeAsync("EditLibrary", new object[] {
                        universitycode,
                        campus,
                        description,
                        sitting,
                        functional,
                        volume,
                        title,
                        bandwith,
                        staff,
                        qualifications,
                        computers,
                        accesspoints,
                        librarymanagementcommittee,
                        libraryadvisorycommittee,
                        antiplagiarism,
                        digitalrepo,
                        securitysystem,
                        offcampussystem,
                        opacs,
                        userCode,
                        password}, this.EditLibraryOperationCompleted, userState);
        }
        
        private void OnEditLibraryOperationCompleted(object arg) {
            if ((this.EditLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLibraryCompleted(this, new EditLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAdminSpace", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAdminSpace_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddAdminSpace(string category, decimal space, string campus) {
            object[] results = this.Invoke("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus) {
            this.AddAdminSpaceAsync(category, space, campus, null);
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus, object userState) {
            if ((this.AddAdminSpaceOperationCompleted == null)) {
                this.AddAdminSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdminSpaceOperationCompleted);
            }
            this.InvokeAsync("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus}, this.AddAdminSpaceOperationCompleted, userState);
        }
        
        private void OnAddAdminSpaceOperationCompleted(object arg) {
            if ((this.AddAdminSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdminSpaceCompleted(this, new AddAdminSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionSignup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionSignup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionSignup(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            object[] results = this.Invoke("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            this.InstitutionSignupAsync(proposedName, kraPin, proposedLocation, sponsor, county, constituency, postAddress, postCode, institutionWebsite, phoneNumber, emailAddress, password, confirmPassword, null);
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword, object userState) {
            if ((this.InstitutionSignupOperationCompleted == null)) {
                this.InstitutionSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionSignupOperationCompleted);
            }
            this.InvokeAsync("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword}, this.InstitutionSignupOperationCompleted, userState);
        }
        
        private void OnInstitutionSignupOperationCompleted(object arg) {
            if ((this.InstitutionSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionSignupCompleted(this, new InstitutionSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForAccreditation(string docNo, string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string coporatesponsor, string tConstituency, string phonenumber, string sponsor, string unicode, string county) {
            object[] results = this.Invoke("ApplyForAccreditation", new object[] {
                        docNo,
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        coporatesponsor,
                        tConstituency,
                        phonenumber,
                        sponsor,
                        unicode,
                        county});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string docNo, string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string coporatesponsor, string tConstituency, string phonenumber, string sponsor, string unicode, string county) {
            this.ApplyForAccreditationAsync(docNo, proposedName, proposedLocation, postaddress, postcode, email, accreditationType, institutionwebsite, coporatesponsor, tConstituency, phonenumber, sponsor, unicode, county, null);
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string docNo, string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string coporatesponsor, string tConstituency, string phonenumber, string sponsor, string unicode, string county, object userState) {
            if ((this.ApplyForAccreditationOperationCompleted == null)) {
                this.ApplyForAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForAccreditation", new object[] {
                        docNo,
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        coporatesponsor,
                        tConstituency,
                        phonenumber,
                        sponsor,
                        unicode,
                        county}, this.ApplyForAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForAccreditationCompleted(this, new ApplyForAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForProgramAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForProgramAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForProgramAccreditation(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            object[] results = this.Invoke("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            this.ApplyForProgramAccreditationAsync(userCode, campus, programName, programDomain, programLevel, paymentReference, null);
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference, object userState) {
            if ((this.ApplyForProgramAccreditationOperationCompleted == null)) {
                this.ApplyForProgramAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForProgramAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference}, this.ApplyForProgramAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForProgramAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForProgramAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForProgramAccreditationCompleted(this, new ApplyForProgramAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaff(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password) {
            object[] results = this.Invoke("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        submissioncategory,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password) {
            this.AddAcademicStaffAsync(idNumber, payrollNo, firstName, middleName, lastName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistrationCode, programDomain, rankCode, dateOfFirstAppointment, termsOfService, highestAcademicQualification, campus, dateofCurrentAppointment, submissioncategory, userName, password, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddAcademicStaffOperationCompleted == null)) {
                this.AddAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        submissioncategory,
                        userName,
                        password}, this.AddAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffOperationCompleted(object arg) {
            if ((this.AddAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffCompleted(this, new AddAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAcademicStaff(int idNo, string staffIdNumber, string payrollNo, string user, string password) {
            object[] results = this.Invoke("DeleteAcademicStaff", new object[] {
                        idNo,
                        staffIdNumber,
                        payrollNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(int idNo, string staffIdNumber, string payrollNo, string user, string password) {
            this.DeleteAcademicStaffAsync(idNo, staffIdNumber, payrollNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(int idNo, string staffIdNumber, string payrollNo, string user, string password, object userState) {
            if ((this.DeleteAcademicStaffOperationCompleted == null)) {
                this.DeleteAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicStaff", new object[] {
                        idNo,
                        staffIdNumber,
                        payrollNo,
                        user,
                        password}, this.DeleteAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicStaffCompleted(this, new DeleteAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAllAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAllAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAllAcademicStaff(string staffIdNumber, string user, string password) {
            object[] results = this.Invoke("DeleteAllAcademicStaff", new object[] {
                        staffIdNumber,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllAcademicStaffAsync(string staffIdNumber, string user, string password) {
            this.DeleteAllAcademicStaffAsync(staffIdNumber, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAllAcademicStaffAsync(string staffIdNumber, string user, string password, object userState) {
            if ((this.DeleteAllAcademicStaffOperationCompleted == null)) {
                this.DeleteAllAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAllAcademicStaff", new object[] {
                        staffIdNumber,
                        user,
                        password}, this.DeleteAllAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAllAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteAllAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllAcademicStaffCompleted(this, new DeleteAllAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAllLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAllLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAllLibraryStaff(string staffIdNumber, string user, string password) {
            object[] results = this.Invoke("DeleteAllLibraryStaff", new object[] {
                        staffIdNumber,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllLibraryStaffAsync(string staffIdNumber, string user, string password) {
            this.DeleteAllLibraryStaffAsync(staffIdNumber, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAllLibraryStaffAsync(string staffIdNumber, string user, string password, object userState) {
            if ((this.DeleteAllLibraryStaffOperationCompleted == null)) {
                this.DeleteAllLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAllLibraryStaff", new object[] {
                        staffIdNumber,
                        user,
                        password}, this.DeleteAllLibraryStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAllLibraryStaffOperationCompleted(object arg) {
            if ((this.DeleteAllLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllLibraryStaffCompleted(this, new DeleteAllLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAllNonTeachingStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAllNonTeachingStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAllNonTeachingStaff(string staffIdNumber, string user, string password) {
            object[] results = this.Invoke("DeleteAllNonTeachingStaff", new object[] {
                        staffIdNumber,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllNonTeachingStaffAsync(string staffIdNumber, string user, string password) {
            this.DeleteAllNonTeachingStaffAsync(staffIdNumber, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAllNonTeachingStaffAsync(string staffIdNumber, string user, string password, object userState) {
            if ((this.DeleteAllNonTeachingStaffOperationCompleted == null)) {
                this.DeleteAllNonTeachingStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllNonTeachingStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAllNonTeachingStaff", new object[] {
                        staffIdNumber,
                        user,
                        password}, this.DeleteAllNonTeachingStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAllNonTeachingStaffOperationCompleted(object arg) {
            if ((this.DeleteAllNonTeachingStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllNonTeachingStaffCompleted(this, new DeleteAllNonTeachingStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAllPartTimeTeachingStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAllPartTimeTeachingStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAllPartTimeTeachingStaff(string staffIdNumber, string user, string password) {
            object[] results = this.Invoke("DeleteAllPartTimeTeachingStaff", new object[] {
                        staffIdNumber,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllPartTimeTeachingStaffAsync(string staffIdNumber, string user, string password) {
            this.DeleteAllPartTimeTeachingStaffAsync(staffIdNumber, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAllPartTimeTeachingStaffAsync(string staffIdNumber, string user, string password, object userState) {
            if ((this.DeleteAllPartTimeTeachingStaffOperationCompleted == null)) {
                this.DeleteAllPartTimeTeachingStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllPartTimeTeachingStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAllPartTimeTeachingStaff", new object[] {
                        staffIdNumber,
                        user,
                        password}, this.DeleteAllPartTimeTeachingStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAllPartTimeTeachingStaffOperationCompleted(object arg) {
            if ((this.DeleteAllPartTimeTeachingStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllPartTimeTeachingStaffCompleted(this, new DeleteAllPartTimeTeachingStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAllStudentsEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAllStudentsEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAllStudentsEntries(string studentsIdNumber, string user, string password) {
            object[] results = this.Invoke("DeleteAllStudentsEntries", new object[] {
                        studentsIdNumber,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllStudentsEntriesAsync(string studentsIdNumber, string user, string password) {
            this.DeleteAllStudentsEntriesAsync(studentsIdNumber, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAllStudentsEntriesAsync(string studentsIdNumber, string user, string password, object userState) {
            if ((this.DeleteAllStudentsEntriesOperationCompleted == null)) {
                this.DeleteAllStudentsEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllStudentsEntriesOperationCompleted);
            }
            this.InvokeAsync("DeleteAllStudentsEntries", new object[] {
                        studentsIdNumber,
                        user,
                        password}, this.DeleteAllStudentsEntriesOperationCompleted, userState);
        }
        
        private void OnDeleteAllStudentsEntriesOperationCompleted(object arg) {
            if ((this.DeleteAllStudentsEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllStudentsEntriesCompleted(this, new DeleteAllStudentsEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonAcademicStaff(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateoffirstappointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofcurrentappointment, 
                    int ttermsOfService, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        dateoffirstappointment,
                        dateofcurrentappointment,
                        ttermsOfService,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    System.DateTime dateoffirstappointment, 
                    System.DateTime dateofcurrentappointment, 
                    int ttermsOfService, 
                    string userCode, 
                    string password) {
            this.AddNonAcademicStaffAsync(idNo, payrollNo, surname, middleName, firstName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistration, campus, highestAcademciQualification, staffRank, dateoffirstappointment, dateofcurrentappointment, ttermsOfService, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    System.DateTime dateoffirstappointment, 
                    System.DateTime dateofcurrentappointment, 
                    int ttermsOfService, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddNonAcademicStaffOperationCompleted == null)) {
                this.AddNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        dateoffirstappointment,
                        dateofcurrentappointment,
                        ttermsOfService,
                        userCode,
                        password}, this.AddNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddNonAcademicStaffOperationCompleted(object arg) {
            if ((this.AddNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonAcademicStaffCompleted(this, new AddNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPartTimeAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPartTimeAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPartTimeAcademicStaff(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateoffirstappointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofcurrentappointment, 
                    int submissioncategory, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddPartTimeAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        category,
                        dateoffirstappointment,
                        dateofcurrentappointment,
                        submissioncategory,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPartTimeAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    System.DateTime dateoffirstappointment, 
                    System.DateTime dateofcurrentappointment, 
                    int submissioncategory, 
                    string userCode, 
                    string password) {
            this.AddPartTimeAcademicStaffAsync(idNo, payrollNo, surname, middleName, firstName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistration, campus, highestAcademciQualification, staffRank, category, dateoffirstappointment, dateofcurrentappointment, submissioncategory, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddPartTimeAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    System.DateTime dateoffirstappointment, 
                    System.DateTime dateofcurrentappointment, 
                    int submissioncategory, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddPartTimeAcademicStaffOperationCompleted == null)) {
                this.AddPartTimeAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPartTimeAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddPartTimeAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        category,
                        dateoffirstappointment,
                        dateofcurrentappointment,
                        submissioncategory,
                        userCode,
                        password}, this.AddPartTimeAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddPartTimeAcademicStaffOperationCompleted(object arg) {
            if ((this.AddPartTimeAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPartTimeAcademicStaffCompleted(this, new AddPartTimeAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteNonAcademicStaff(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password) {
            this.DeleteNonAcademicStaffAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteNonAcademicStaffOperationCompleted == null)) {
                this.DeleteNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteNonAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNonAcademicStaffCompleted(this, new DeleteNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePartTimeAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePartTimeAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeletePartTimeAcademicStaff(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeletePartTimeAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePartTimeAcademicStaffAsync(int entryNo, string user, string password) {
            this.DeletePartTimeAcademicStaffAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeletePartTimeAcademicStaffAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeletePartTimeAcademicStaffOperationCompleted == null)) {
                this.DeletePartTimeAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePartTimeAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeletePartTimeAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password}, this.DeletePartTimeAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeletePartTimeAcademicStaffOperationCompleted(object arg) {
            if ((this.DeletePartTimeAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePartTimeAcademicStaffCompleted(this, new DeletePartTimeAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteResearch(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteResearch", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResearchAsync(int entryNo, string user, string password) {
            this.DeleteResearchAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteResearchAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteResearchOperationCompleted == null)) {
                this.DeleteResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteResearch", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteResearchOperationCompleted, userState);
        }
        
        private void OnDeleteResearchOperationCompleted(object arg) {
            if ((this.DeleteResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResearchCompleted(this, new DeleteResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGraduation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGraduation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteGraduation(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteGraduation", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGraduationAsync(int entryNo, string user, string password) {
            this.DeleteGraduationAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteGraduationAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteGraduationOperationCompleted == null)) {
                this.DeleteGraduationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGraduationOperationCompleted);
            }
            this.InvokeAsync("DeleteGraduation", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteGraduationOperationCompleted, userState);
        }
        
        private void OnDeleteGraduationOperationCompleted(object arg) {
            if ((this.DeleteGraduationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGraduationCompleted(this, new DeleteGraduationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteStudentsResearch(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteStudentsResearch", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsResearchAsync(int entryNo, string user, string password) {
            this.DeleteStudentsResearchAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsResearchAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteStudentsResearchOperationCompleted == null)) {
                this.DeleteStudentsResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsResearch", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteStudentsResearchOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsResearchOperationCompleted(object arg) {
            if ((this.DeleteStudentsResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsResearchCompleted(this, new DeleteStudentsResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInitialPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInitialPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInitialPrograms(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password) {
            object[] results = this.Invoke("AddInitialPrograms", new object[] {
                        courseid,
                        coursetitle,
                        credithours,
                        courseyear,
                        coursecategory,
                        coursecomments,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInitialProgramsAsync(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password) {
            this.AddInitialProgramsAsync(courseid, coursetitle, credithours, courseyear, coursecategory, coursecomments, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInitialProgramsAsync(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password, object userState) {
            if ((this.AddInitialProgramsOperationCompleted == null)) {
                this.AddInitialProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInitialProgramsOperationCompleted);
            }
            this.InvokeAsync("AddInitialPrograms", new object[] {
                        courseid,
                        coursetitle,
                        credithours,
                        courseyear,
                        coursecategory,
                        coursecomments,
                        userCode,
                        password}, this.AddInitialProgramsOperationCompleted, userState);
        }
        
        private void OnAddInitialProgramsOperationCompleted(object arg) {
            if ((this.AddInitialProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInitialProgramsCompleted(this, new AddInitialProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddReferenceMaterial", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddReferenceMaterial_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddReferenceMaterial(string applicationNo, string coursecode, string referencematerial, string userCode, string password) {
            object[] results = this.Invoke("AddReferenceMaterial", new object[] {
                        applicationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReferenceMaterialAsync(string applicationNo, string coursecode, string referencematerial, string userCode, string password) {
            this.AddReferenceMaterialAsync(applicationNo, coursecode, referencematerial, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddReferenceMaterialAsync(string applicationNo, string coursecode, string referencematerial, string userCode, string password, object userState) {
            if ((this.AddReferenceMaterialOperationCompleted == null)) {
                this.AddReferenceMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReferenceMaterialOperationCompleted);
            }
            this.InvokeAsync("AddReferenceMaterial", new object[] {
                        applicationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password}, this.AddReferenceMaterialOperationCompleted, userState);
        }
        
        private void OnAddReferenceMaterialOperationCompleted(object arg) {
            if ((this.AddReferenceMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReferenceMaterialCompleted(this, new AddReferenceMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDisciplineCase(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, int verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string casereferenceid, string userCode, string password) {
            object[] results = this.Invoke("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        casereferenceid,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string casereferenceid, string userCode, string password) {
            this.AddDisciplineCaseAsync(studentId, admissionNo, firstName, middleName, lastName, caseDescription, caseDate, verdict, verdictDate, casereferenceid, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string casereferenceid, string userCode, string password, object userState) {
            if ((this.AddDisciplineCaseOperationCompleted == null)) {
                this.AddDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        casereferenceid,
                        userCode,
                        password}, this.AddDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnAddDisciplineCaseOperationCompleted(object arg) {
            if ((this.AddDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDisciplineCaseCompleted(this, new AddDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSuccessfulAppeals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSuccessfulAppeals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSuccessfulAppeals(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, int verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string casereferenceid, string userCode, string password) {
            object[] results = this.Invoke("AddSuccessfulAppeals", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        casereferenceid,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSuccessfulAppealsAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string casereferenceid, string userCode, string password) {
            this.AddSuccessfulAppealsAsync(studentId, admissionNo, firstName, middleName, lastName, caseDescription, caseDate, verdict, verdictDate, casereferenceid, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSuccessfulAppealsAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string casereferenceid, string userCode, string password, object userState) {
            if ((this.AddSuccessfulAppealsOperationCompleted == null)) {
                this.AddSuccessfulAppealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSuccessfulAppealsOperationCompleted);
            }
            this.InvokeAsync("AddSuccessfulAppeals", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        casereferenceid,
                        userCode,
                        password}, this.AddSuccessfulAppealsOperationCompleted, userState);
        }
        
        private void OnAddSuccessfulAppealsOperationCompleted(object arg) {
            if ((this.AddSuccessfulAppealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSuccessfulAppealsCompleted(this, new AddSuccessfulAppealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EditDisciplineCase(int caseId, string studentId, string casereference, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, int verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        casereference,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string casereference, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string userCode, string password) {
            this.EditDisciplineCaseAsync(caseId, studentId, casereference, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string casereference, string caseDescription, System.DateTime caseDate, int verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.EditDisciplineCaseOperationCompleted == null)) {
                this.EditDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        casereference,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.EditDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnEditDisciplineCaseOperationCompleted(object arg) {
            if ((this.EditDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDisciplineCaseCompleted(this, new EditDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddExpectedActualAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddExpectedActualAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddExpectedActualAmounts(string universityCode, int type, int year, decimal expected, decimal actual, string fnstartyear, string fnendyear, string userCode, string password) {
            object[] results = this.Invoke("AddExpectedActualAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        expected,
                        actual,
                        fnstartyear,
                        fnendyear,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExpectedActualAmountsAsync(string universityCode, int type, int year, decimal expected, decimal actual, string fnstartyear, string fnendyear, string userCode, string password) {
            this.AddExpectedActualAmountsAsync(universityCode, type, year, expected, actual, fnstartyear, fnendyear, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddExpectedActualAmountsAsync(string universityCode, int type, int year, decimal expected, decimal actual, string fnstartyear, string fnendyear, string userCode, string password, object userState) {
            if ((this.AddExpectedActualAmountsOperationCompleted == null)) {
                this.AddExpectedActualAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExpectedActualAmountsOperationCompleted);
            }
            this.InvokeAsync("AddExpectedActualAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        expected,
                        actual,
                        fnstartyear,
                        fnendyear,
                        userCode,
                        password}, this.AddExpectedActualAmountsOperationCompleted, userState);
        }
        
        private void OnAddExpectedActualAmountsOperationCompleted(object arg) {
            if ((this.AddExpectedActualAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExpectedActualAmountsCompleted(this, new AddExpectedActualAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteExpectedActualAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteExpectedActualAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteExpectedActualAmounts(string universityCode, int entrycode, int type, string userCode, string password) {
            object[] results = this.Invoke("DeleteExpectedActualAmounts", new object[] {
                        universityCode,
                        entrycode,
                        type,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteExpectedActualAmountsAsync(string universityCode, int entrycode, int type, string userCode, string password) {
            this.DeleteExpectedActualAmountsAsync(universityCode, entrycode, type, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteExpectedActualAmountsAsync(string universityCode, int entrycode, int type, string userCode, string password, object userState) {
            if ((this.DeleteExpectedActualAmountsOperationCompleted == null)) {
                this.DeleteExpectedActualAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpectedActualAmountsOperationCompleted);
            }
            this.InvokeAsync("DeleteExpectedActualAmounts", new object[] {
                        universityCode,
                        entrycode,
                        type,
                        userCode,
                        password}, this.DeleteExpectedActualAmountsOperationCompleted, userState);
        }
        
        private void OnDeleteExpectedActualAmountsOperationCompleted(object arg) {
            if ((this.DeleteExpectedActualAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpectedActualAmountsCompleted(this, new DeleteExpectedActualAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCreditorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCreditorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCreditorsAmounts(string universityCode, int type, int year, decimal amounts, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialyeardate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialendyeardate, string userCode, string password) {
            object[] results = this.Invoke("AddCreditorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        financialyeardate,
                        financialendyeardate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditorsAmountsAsync(string universityCode, int type, int year, decimal amounts, System.DateTime financialyeardate, System.DateTime financialendyeardate, string userCode, string password) {
            this.AddCreditorsAmountsAsync(universityCode, type, year, amounts, financialyeardate, financialendyeardate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCreditorsAmountsAsync(string universityCode, int type, int year, decimal amounts, System.DateTime financialyeardate, System.DateTime financialendyeardate, string userCode, string password, object userState) {
            if ((this.AddCreditorsAmountsOperationCompleted == null)) {
                this.AddCreditorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditorsAmountsOperationCompleted);
            }
            this.InvokeAsync("AddCreditorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        financialyeardate,
                        financialendyeardate,
                        userCode,
                        password}, this.AddCreditorsAmountsOperationCompleted, userState);
        }
        
        private void OnAddCreditorsAmountsOperationCompleted(object arg) {
            if ((this.AddCreditorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditorsAmountsCompleted(this, new AddCreditorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCreditorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCreditorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCreditorsAmounts(string universityCode, int entryCode, int type, string userCode, string password) {
            object[] results = this.Invoke("DeleteCreditorsAmounts", new object[] {
                        universityCode,
                        entryCode,
                        type,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCreditorsAmountsAsync(string universityCode, int entryCode, int type, string userCode, string password) {
            this.DeleteCreditorsAmountsAsync(universityCode, entryCode, type, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCreditorsAmountsAsync(string universityCode, int entryCode, int type, string userCode, string password, object userState) {
            if ((this.DeleteCreditorsAmountsOperationCompleted == null)) {
                this.DeleteCreditorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCreditorsAmountsOperationCompleted);
            }
            this.InvokeAsync("DeleteCreditorsAmounts", new object[] {
                        universityCode,
                        entryCode,
                        type,
                        userCode,
                        password}, this.DeleteCreditorsAmountsOperationCompleted, userState);
        }
        
        private void OnDeleteCreditorsAmountsOperationCompleted(object arg) {
            if ((this.DeleteCreditorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCreditorsAmountsCompleted(this, new DeleteCreditorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDebtorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDebtorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDebtorsAmounts(string universityCode, int type, int year, decimal amounts, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialyearstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialyearenddate, string userCode, string password) {
            object[] results = this.Invoke("AddDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        financialyearstartdate,
                        financialyearenddate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDebtorsAmountsAsync(string universityCode, int type, int year, decimal amounts, System.DateTime financialyearstartdate, System.DateTime financialyearenddate, string userCode, string password) {
            this.AddDebtorsAmountsAsync(universityCode, type, year, amounts, financialyearstartdate, financialyearenddate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDebtorsAmountsAsync(string universityCode, int type, int year, decimal amounts, System.DateTime financialyearstartdate, System.DateTime financialyearenddate, string userCode, string password, object userState) {
            if ((this.AddDebtorsAmountsOperationCompleted == null)) {
                this.AddDebtorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDebtorsAmountsOperationCompleted);
            }
            this.InvokeAsync("AddDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        financialyearstartdate,
                        financialyearenddate,
                        userCode,
                        password}, this.AddDebtorsAmountsOperationCompleted, userState);
        }
        
        private void OnAddDebtorsAmountsOperationCompleted(object arg) {
            if ((this.AddDebtorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDebtorsAmountsCompleted(this, new AddDebtorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDebtorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDebtorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDebtorsAmounts(string universityCode, int type, int entryCode, string userCode, string password) {
            object[] results = this.Invoke("DeleteDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        entryCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDebtorsAmountsAsync(string universityCode, int type, int entryCode, string userCode, string password) {
            this.DeleteDebtorsAmountsAsync(universityCode, type, entryCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteDebtorsAmountsAsync(string universityCode, int type, int entryCode, string userCode, string password, object userState) {
            if ((this.DeleteDebtorsAmountsOperationCompleted == null)) {
                this.DeleteDebtorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDebtorsAmountsOperationCompleted);
            }
            this.InvokeAsync("DeleteDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        entryCode,
                        userCode,
                        password}, this.DeleteDebtorsAmountsOperationCompleted, userState);
        }
        
        private void OnDeleteDebtorsAmountsOperationCompleted(object arg) {
            if ((this.DeleteDebtorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDebtorsAmountsCompleted(this, new DeleteDebtorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDisciplineCase(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password) {
            this.DeleteDisciplineCaseAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDisciplineCaseOperationCompleted == null)) {
                this.DeleteDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnDeleteDisciplineCaseOperationCompleted(object arg) {
            if ((this.DeleteDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDisciplineCaseCompleted(this, new DeleteDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAppeals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAppeals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAppeals(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteAppeals", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAppealsAsync(int entryNo, string user, string password) {
            this.DeleteAppealsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAppealsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteAppealsOperationCompleted == null)) {
                this.DeleteAppealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAppealsOperationCompleted);
            }
            this.InvokeAsync("DeleteAppeals", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteAppealsOperationCompleted, userState);
        }
        
        private void OnDeleteAppealsOperationCompleted(object arg) {
            if ((this.DeleteAppealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAppealsCompleted(this, new DeleteAppealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteChancellors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password) {
            this.DeleteChancellorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteChancellorsOperationCompleted == null)) {
                this.DeleteChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChancellorsOperationCompleted);
            }
            this.InvokeAsync("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteChancellorsOperationCompleted, userState);
        }
        
        private void OnDeleteChancellorsOperationCompleted(object arg) {
            if ((this.DeleteChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChancellorsCompleted(this, new DeleteChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSponsors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password) {
            this.DeleteSponsorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSponsorsOperationCompleted == null)) {
                this.DeleteSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSponsorsOperationCompleted);
            }
            this.InvokeAsync("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSponsorsOperationCompleted, userState);
        }
        
        private void OnDeleteSponsorsOperationCompleted(object arg) {
            if ((this.DeleteSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSponsorsCompleted(this, new DeleteSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDepartments(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password) {
            this.DeleteDepartmentsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDepartmentsOperationCompleted == null)) {
                this.DeleteDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentsOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDepartmentsOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentsOperationCompleted(object arg) {
            if ((this.DeleteDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentsCompleted(this, new DeleteDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSchools", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSchools_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSchools(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password) {
            this.DeleteSchoolsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSchoolsOperationCompleted == null)) {
                this.DeleteSchoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchoolsOperationCompleted);
            }
            this.InvokeAsync("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSchoolsOperationCompleted, userState);
        }
        
        private void OnDeleteSchoolsOperationCompleted(object arg) {
            if ((this.DeleteSchoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchoolsCompleted(this, new DeleteSchoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAffiliations(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password) {
            this.DeleteAffiliationsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteAffiliationsOperationCompleted == null)) {
                this.DeleteAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAffiliationsOperationCompleted);
            }
            this.InvokeAsync("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteAffiliationsOperationCompleted, userState);
        }
        
        private void OnDeleteAffiliationsOperationCompleted(object arg) {
            if ((this.DeleteAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAffiliationsCompleted(this, new DeleteAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFinancialSubmission(string voteHead, decimal amount, string userCode, string password) {
            object[] results = this.Invoke("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password) {
            this.AddFinancialSubmissionAsync(voteHead, amount, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password, object userState) {
            if ((this.AddFinancialSubmissionOperationCompleted == null)) {
                this.AddFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password}, this.AddFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnAddFinancialSubmissionOperationCompleted(object arg) {
            if ((this.AddFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFinancialSubmissionCompleted(this, new AddFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFinancialSubmission(string voteHead, string userCode, string password) {
            object[] results = this.Invoke("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password) {
            this.DeleteFinancialSubmissionAsync(voteHead, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password, object userState) {
            if ((this.DeleteFinancialSubmissionOperationCompleted == null)) {
                this.DeleteFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password}, this.DeleteFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnDeleteFinancialSubmissionOperationCompleted(object arg) {
            if ((this.DeleteFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFinancialSubmissionCompleted(this, new DeleteFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddResearch(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string doi, string userName, string password) {
            object[] results = this.Invoke("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        doi,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string doi, string userName, string password) {
            this.AddResearchAsync(category, domain, subdomain, campus, publicationType, title, description, link, patentingOrganisation, patentNo, patentYear, authorIds, doi, userName, password, null);
        }
        
        /// <remarks/>
        public void AddResearchAsync(
                    int category, 
                    string domain, 
                    string subdomain, 
                    string campus, 
                    int publicationType, 
                    string title, 
                    string description, 
                    string link, 
                    string patentingOrganisation, 
                    string patentNo, 
                    int patentYear, 
                    string authorIds, 
                    string doi, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddResearchOperationCompleted == null)) {
                this.AddResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResearchOperationCompleted);
            }
            this.InvokeAsync("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        doi,
                        userName,
                        password}, this.AddResearchOperationCompleted, userState);
        }
        
        private void OnAddResearchOperationCompleted(object arg) {
            if ((this.AddResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResearchCompleted(this, new AddResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUniversityChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUniversityChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUniversityChancellors(string universityCode, string chancellorName, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofAppointment, string nationality) {
            object[] results = this.Invoke("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality) {
            this.AddUniversityChancellorsAsync(universityCode, chancellorName, qualifications, dateofAppointment, nationality, null);
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality, object userState) {
            if ((this.AddUniversityChancellorsOperationCompleted == null)) {
                this.AddUniversityChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUniversityChancellorsOperationCompleted);
            }
            this.InvokeAsync("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality}, this.AddUniversityChancellorsOperationCompleted, userState);
        }
        
        private void OnAddUniversityChancellorsOperationCompleted(object arg) {
            if ((this.AddUniversityChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUniversityChancellorsCompleted(this, new AddUniversityChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUniversityViceChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUniversityViceChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUniversityViceChancellors(string universityCode, string name, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofAppointment, string nationality, int yearsserved) {
            object[] results = this.Invoke("AddUniversityViceChancellors", new object[] {
                        universityCode,
                        name,
                        qualifications,
                        dateofAppointment,
                        nationality,
                        yearsserved});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUniversityViceChancellorsAsync(string universityCode, string name, string qualifications, System.DateTime dateofAppointment, string nationality, int yearsserved) {
            this.AddUniversityViceChancellorsAsync(universityCode, name, qualifications, dateofAppointment, nationality, yearsserved, null);
        }
        
        /// <remarks/>
        public void AddUniversityViceChancellorsAsync(string universityCode, string name, string qualifications, System.DateTime dateofAppointment, string nationality, int yearsserved, object userState) {
            if ((this.AddUniversityViceChancellorsOperationCompleted == null)) {
                this.AddUniversityViceChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUniversityViceChancellorsOperationCompleted);
            }
            this.InvokeAsync("AddUniversityViceChancellors", new object[] {
                        universityCode,
                        name,
                        qualifications,
                        dateofAppointment,
                        nationality,
                        yearsserved}, this.AddUniversityViceChancellorsOperationCompleted, userState);
        }
        
        private void OnAddUniversityViceChancellorsOperationCompleted(object arg) {
            if ((this.AddUniversityViceChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUniversityViceChancellorsCompleted(this, new AddUniversityViceChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsResearch(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string doi, string userName, string password) {
            object[] results = this.Invoke("AddStudentsResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        doi,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string doi, string userName, string password) {
            this.AddStudentsResearchAsync(category, domain, subdomain, campus, publicationType, title, description, link, patentingOrganisation, patentNo, patentYear, authorIds, doi, userName, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsResearchAsync(
                    int category, 
                    string domain, 
                    string subdomain, 
                    string campus, 
                    int publicationType, 
                    string title, 
                    string description, 
                    string link, 
                    string patentingOrganisation, 
                    string patentNo, 
                    int patentYear, 
                    string authorIds, 
                    string doi, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddStudentsResearchOperationCompleted == null)) {
                this.AddStudentsResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsResearchOperationCompleted);
            }
            this.InvokeAsync("AddStudentsResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        doi,
                        userName,
                        password}, this.AddStudentsResearchOperationCompleted, userState);
        }
        
        private void OnAddStudentsResearchOperationCompleted(object arg) {
            if ((this.AddStudentsResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsResearchCompleted(this, new AddStudentsResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditResearch() {
            this.Invoke("EditResearch", new object[0]);
        }
        
        /// <remarks/>
        public void EditResearchAsync() {
            this.EditResearchAsync(null);
        }
        
        /// <remarks/>
        public void EditResearchAsync(object userState) {
            if ((this.EditResearchOperationCompleted == null)) {
                this.EditResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditResearchOperationCompleted);
            }
            this.InvokeAsync("EditResearch", new object[0], this.EditResearchOperationCompleted, userState);
        }
        
        private void OnEditResearchOperationCompleted(object arg) {
            if ((this.EditResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditResearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:RegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="RegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RegisterPeerReviewer(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.RegisterPeerReviewerAsync(name, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.RegisterPeerReviewerOperationCompleted == null)) {
                this.RegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.RegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.RegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterPeerReviewerCompleted(this, new RegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdatePeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdatePeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewer(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            this.UpdatePeerReviewerAsync(name, reviewerCode, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title, object userState) {
            if ((this.UpdatePeerReviewerOperationCompleted == null)) {
                this.UpdatePeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title}, this.UpdatePeerReviewerOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerCompleted(this, new UpdatePeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdatePeerReviewerPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdatePeerReviewerPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewerPassword(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            this.UpdatePeerReviewerPasswordAsync(vendorNumber, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.UpdatePeerReviewerPasswordOperationCompleted == null)) {
                this.UpdatePeerReviewerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.UpdatePeerReviewerPasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerPasswordOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerPasswordCompleted(this, new UpdatePeerReviewerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerAcademicQualifications(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            object[] results = this.Invoke("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            this.AddPeerAcademicQualificationsAsync(vendorNo, password, description, yearObtained, institution, areaOfSpecialization, durationOfStudy, country, null);
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country, object userState) {
            if ((this.AddPeerAcademicQualificationsOperationCompleted == null)) {
                this.AddPeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country}, this.AddPeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddPeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddPeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerAcademicQualificationsCompleted(this, new AddPeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerEmploymentRecord(string vendorNo, string password, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber) {
            object[] results = this.Invoke("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber) {
            this.AddPeerEmploymentRecordAsync(vendorNo, password, employer, postion, dateFrom, dateTo, contactPerson, address, email, phonenumber, null);
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber, object userState) {
            if ((this.AddPeerEmploymentRecordOperationCompleted == null)) {
                this.AddPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber}, this.AddPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnAddPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.AddPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerEmploymentRecordCompleted(this, new AddPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditPeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPeerEmploymentRecord(string vendorNo, string password, int recordCode, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson) {
            object[] results = this.Invoke("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson) {
            this.EditPeerEmploymentRecordAsync(vendorNo, password, recordCode, employer, postion, dateFrom, dateTo, contactPerson, null);
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, object userState) {
            if ((this.EditPeerEmploymentRecordOperationCompleted == null)) {
                this.EditPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson}, this.EditPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnEditPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.EditPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPeerEmploymentRecordCompleted(this, new EditPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePeerEmploymentRecord(string vendorNo, string password, int recordCode) {
            object[] results = this.Invoke("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, string password, int recordCode) {
            this.DeletePeerEmploymentRecordAsync(vendorNo, password, recordCode, null);
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, object userState) {
            if ((this.DeletePeerEmploymentRecordOperationCompleted == null)) {
                this.DeletePeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode}, this.DeletePeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnDeletePeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.DeletePeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePeerEmploymentRecordCompleted(this, new DeletePeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInstitutionNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInstitutionNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInstitutionNumber(string userCode, string password) {
            object[] results = this.Invoke("GetInstitutionNumber", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password) {
            this.GetInstitutionNumberAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password, object userState) {
            if ((this.GetInstitutionNumberOperationCompleted == null)) {
                this.GetInstitutionNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstitutionNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstitutionNumber", new object[] {
                        userCode,
                        password}, this.GetInstitutionNumberOperationCompleted, userState);
        }
        
        private void OnGetInstitutionNumberOperationCompleted(object arg) {
            if ((this.GetInstitutionNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstitutionNumberCompleted(this, new GetInstitutionNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInvitationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInvitationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInvitationNumber(string universityCode) {
            object[] results = this.Invoke("GetInvitationNumber", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvitationNumberAsync(string universityCode) {
            this.GetInvitationNumberAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void GetInvitationNumberAsync(string universityCode, object userState) {
            if ((this.GetInvitationNumberOperationCompleted == null)) {
                this.GetInvitationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvitationNumberOperationCompleted);
            }
            this.InvokeAsync("GetInvitationNumber", new object[] {
                        universityCode}, this.GetInvitationNumberOperationCompleted, userState);
        }
        
        private void OnGetInvitationNumberOperationCompleted(object arg) {
            if ((this.GetInvitationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvitationNumberCompleted(this, new GetInvitationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetAmendmentsNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetAmendmentsNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAmendmentsNumber(string universityCode) {
            object[] results = this.Invoke("GetAmendmentsNumber", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmendmentsNumberAsync(string universityCode) {
            this.GetAmendmentsNumberAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void GetAmendmentsNumberAsync(string universityCode, object userState) {
            if ((this.GetAmendmentsNumberOperationCompleted == null)) {
                this.GetAmendmentsNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmendmentsNumberOperationCompleted);
            }
            this.InvokeAsync("GetAmendmentsNumber", new object[] {
                        universityCode}, this.GetAmendmentsNumberOperationCompleted, userState);
        }
        
        private void OnGetAmendmentsNumberOperationCompleted(object arg) {
            if ((this.GetAmendmentsNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmendmentsNumberCompleted(this, new GetAmendmentsNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInvitationDataSetID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInvitationDataSetID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInvitationDataSetID(string university, string noticenumber, string dataId) {
            object[] results = this.Invoke("GetInvitationDataSetID", new object[] {
                        university,
                        noticenumber,
                        dataId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvitationDataSetIDAsync(string university, string noticenumber, string dataId) {
            this.GetInvitationDataSetIDAsync(university, noticenumber, dataId, null);
        }
        
        /// <remarks/>
        public void GetInvitationDataSetIDAsync(string university, string noticenumber, string dataId, object userState) {
            if ((this.GetInvitationDataSetIDOperationCompleted == null)) {
                this.GetInvitationDataSetIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvitationDataSetIDOperationCompleted);
            }
            this.InvokeAsync("GetInvitationDataSetID", new object[] {
                        university,
                        noticenumber,
                        dataId}, this.GetInvitationDataSetIDOperationCompleted, userState);
        }
        
        private void OnGetInvitationDataSetIDOperationCompleted(object arg) {
            if ((this.GetInvitationDataSetIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvitationDataSetIDCompleted(this, new GetInvitationDataSetIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOperationBudget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOperationBudget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOperationBudget(decimal operationBudget, decimal actualExpenditure, int year, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialstartyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialendyear, string userCode, string userPassword) {
            object[] results = this.Invoke("AddOperationBudget", new object[] {
                        operationBudget,
                        actualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOperationBudgetAsync(decimal operationBudget, decimal actualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword) {
            this.AddOperationBudgetAsync(operationBudget, actualExpenditure, year, financialstartyear, financialendyear, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddOperationBudgetAsync(decimal operationBudget, decimal actualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword, object userState) {
            if ((this.AddOperationBudgetOperationCompleted == null)) {
                this.AddOperationBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationBudgetOperationCompleted);
            }
            this.InvokeAsync("AddOperationBudget", new object[] {
                        operationBudget,
                        actualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword}, this.AddOperationBudgetOperationCompleted, userState);
        }
        
        private void OnAddOperationBudgetOperationCompleted(object arg) {
            if ((this.AddOperationBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperationBudgetCompleted(this, new AddOperationBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteOperationBudget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteOperationBudget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteOperationBudget(string universityId, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteOperationBudget", new object[] {
                        universityId,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOperationBudgetAsync(string universityId, string userCode, string userPassword) {
            this.DeleteOperationBudgetAsync(universityId, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteOperationBudgetAsync(string universityId, string userCode, string userPassword, object userState) {
            if ((this.DeleteOperationBudgetOperationCompleted == null)) {
                this.DeleteOperationBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationBudgetOperationCompleted);
            }
            this.InvokeAsync("DeleteOperationBudget", new object[] {
                        universityId,
                        userCode,
                        userPassword}, this.DeleteOperationBudgetOperationCompleted, userState);
        }
        
        private void OnDeleteOperationBudgetOperationCompleted(object arg) {
            if ((this.DeleteOperationBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOperationBudgetCompleted(this, new DeleteOperationBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryBudgetDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryBudgetDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryBudgetDetails(decimal libraryoperationBudget, decimal libraryactualExpenditure, int year, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialstartyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialendyear, string userCode, string userPassword) {
            object[] results = this.Invoke("AddLibraryBudgetDetails", new object[] {
                        libraryoperationBudget,
                        libraryactualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryBudgetDetailsAsync(decimal libraryoperationBudget, decimal libraryactualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword) {
            this.AddLibraryBudgetDetailsAsync(libraryoperationBudget, libraryactualExpenditure, year, financialstartyear, financialendyear, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLibraryBudgetDetailsAsync(decimal libraryoperationBudget, decimal libraryactualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword, object userState) {
            if ((this.AddLibraryBudgetDetailsOperationCompleted == null)) {
                this.AddLibraryBudgetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryBudgetDetailsOperationCompleted);
            }
            this.InvokeAsync("AddLibraryBudgetDetails", new object[] {
                        libraryoperationBudget,
                        libraryactualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword}, this.AddLibraryBudgetDetailsOperationCompleted, userState);
        }
        
        private void OnAddLibraryBudgetDetailsOperationCompleted(object arg) {
            if ((this.AddLibraryBudgetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryBudgetDetailsCompleted(this, new AddLibraryBudgetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryBudgetDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryBudgetDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryBudgetDetails(string university, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLibraryBudgetDetails", new object[] {
                        university,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryBudgetDetailsAsync(string university, string userCode, string userPassword) {
            this.DeleteLibraryBudgetDetailsAsync(university, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryBudgetDetailsAsync(string university, string userCode, string userPassword, object userState) {
            if ((this.DeleteLibraryBudgetDetailsOperationCompleted == null)) {
                this.DeleteLibraryBudgetDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryBudgetDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryBudgetDetails", new object[] {
                        university,
                        userCode,
                        userPassword}, this.DeleteLibraryBudgetDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryBudgetDetailsOperationCompleted(object arg) {
            if ((this.DeleteLibraryBudgetDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryBudgetDetailsCompleted(this, new DeleteLibraryBudgetDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddResearchBudgetRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddResearchBudgetRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddResearchBudgetRecord(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialstartyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialendyear, string userCode, string userPassword) {
            object[] results = this.Invoke("AddResearchBudgetRecord", new object[] {
                        researchBudgetAllocation,
                        researchActualExpenditure,
                        researchAttractedBudgetAllocation,
                        researchAttractedActualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResearchBudgetRecordAsync(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword) {
            this.AddResearchBudgetRecordAsync(researchBudgetAllocation, researchActualExpenditure, researchAttractedBudgetAllocation, researchAttractedActualExpenditure, year, financialstartyear, financialendyear, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddResearchBudgetRecordAsync(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword, object userState) {
            if ((this.AddResearchBudgetRecordOperationCompleted == null)) {
                this.AddResearchBudgetRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResearchBudgetRecordOperationCompleted);
            }
            this.InvokeAsync("AddResearchBudgetRecord", new object[] {
                        researchBudgetAllocation,
                        researchActualExpenditure,
                        researchAttractedBudgetAllocation,
                        researchAttractedActualExpenditure,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword}, this.AddResearchBudgetRecordOperationCompleted, userState);
        }
        
        private void OnAddResearchBudgetRecordOperationCompleted(object arg) {
            if ((this.AddResearchBudgetRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResearchBudgetRecordCompleted(this, new AddResearchBudgetRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteResearchBudgetRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteResearchBudgetRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteResearchBudgetRecord(string university, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteResearchBudgetRecord", new object[] {
                        university,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResearchBudgetRecordAsync(string university, string userCode, string userPassword) {
            this.DeleteResearchBudgetRecordAsync(university, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteResearchBudgetRecordAsync(string university, string userCode, string userPassword, object userState) {
            if ((this.DeleteResearchBudgetRecordOperationCompleted == null)) {
                this.DeleteResearchBudgetRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResearchBudgetRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteResearchBudgetRecord", new object[] {
                        university,
                        userCode,
                        userPassword}, this.DeleteResearchBudgetRecordOperationCompleted, userState);
        }
        
        private void OnDeleteResearchBudgetRecordOperationCompleted(object arg) {
            if ((this.DeleteResearchBudgetRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResearchBudgetRecordCompleted(this, new DeleteResearchBudgetRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCurrentAssetsLiabilitiesEqui" +
            "tytRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCurrentAssetsLiabilitiesEquitytRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurrentAssetsLiabilitiesEquitytRecord(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialstartyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime financialendyear, string userCode, string userPassword) {
            object[] results = this.Invoke("AddCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        totaldebt,
                        totalequity,
                        currentassets,
                        currentliabilities,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurrentAssetsLiabilitiesEquitytRecordAsync(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword) {
            this.AddCurrentAssetsLiabilitiesEquitytRecordAsync(totaldebt, totalequity, currentassets, currentliabilities, year, financialstartyear, financialendyear, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddCurrentAssetsLiabilitiesEquitytRecordAsync(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, System.DateTime financialstartyear, System.DateTime financialendyear, string userCode, string userPassword, object userState) {
            if ((this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted == null)) {
                this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted);
            }
            this.InvokeAsync("AddCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        totaldebt,
                        totalequity,
                        currentassets,
                        currentliabilities,
                        year,
                        financialstartyear,
                        financialendyear,
                        userCode,
                        userPassword}, this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted, userState);
        }
        
        private void OnAddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted(object arg) {
            if ((this.AddCurrentAssetsLiabilitiesEquitytRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurrentAssetsLiabilitiesEquitytRecordCompleted(this, new AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCurrentAssetsLiabilitiesE" +
            "quitytRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCurrentAssetsLiabilitiesEquitytRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCurrentAssetsLiabilitiesEquitytRecord(string university, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        university,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCurrentAssetsLiabilitiesEquitytRecordAsync(string university, string userCode, string userPassword) {
            this.DeleteCurrentAssetsLiabilitiesEquitytRecordAsync(university, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteCurrentAssetsLiabilitiesEquitytRecordAsync(string university, string userCode, string userPassword, object userState) {
            if ((this.DeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted == null)) {
                this.DeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        university,
                        userCode,
                        userPassword}, this.DeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted, userState);
        }
        
        private void OnDeleteCurrentAssetsLiabilitiesEquitytRecordOperationCompleted(object arg) {
            if ((this.DeleteCurrentAssetsLiabilitiesEquitytRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCurrentAssetsLiabilitiesEquitytRecordCompleted(this, new DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLand(string campus, string ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, string ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.AddLandAsync(campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, string ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.AddLandOperationCompleted == null)) {
                this.AddLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLandOperationCompleted);
            }
            this.InvokeAsync("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.AddLandOperationCompleted, userState);
        }
        
        private void OnAddLandOperationCompleted(object arg) {
            if ((this.AddLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLandCompleted(this, new AddLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFire(string campus, string @class, string location, int devices, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime inspectiondate, string userCode, string userPassword) {
            object[] results = this.Invoke("AddFire", new object[] {
                        campus,
                        @class,
                        location,
                        devices,
                        inspectiondate,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFireAsync(string campus, string @class, string location, int devices, System.DateTime inspectiondate, string userCode, string userPassword) {
            this.AddFireAsync(campus, @class, location, devices, inspectiondate, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddFireAsync(string campus, string @class, string location, int devices, System.DateTime inspectiondate, string userCode, string userPassword, object userState) {
            if ((this.AddFireOperationCompleted == null)) {
                this.AddFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFireOperationCompleted);
            }
            this.InvokeAsync("AddFire", new object[] {
                        campus,
                        @class,
                        location,
                        devices,
                        inspectiondate,
                        userCode,
                        userPassword}, this.AddFireOperationCompleted, userState);
        }
        
        private void OnAddFireOperationCompleted(object arg) {
            if ((this.AddFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFireCompleted(this, new AddFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddEelevatedWater", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddEelevatedWater_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEelevatedWater(string campus, decimal volume, string userCode, string userPassword) {
            object[] results = this.Invoke("AddEelevatedWater", new object[] {
                        campus,
                        volume,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEelevatedWaterAsync(string campus, decimal volume, string userCode, string userPassword) {
            this.AddEelevatedWaterAsync(campus, volume, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddEelevatedWaterAsync(string campus, decimal volume, string userCode, string userPassword, object userState) {
            if ((this.AddEelevatedWaterOperationCompleted == null)) {
                this.AddEelevatedWaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEelevatedWaterOperationCompleted);
            }
            this.InvokeAsync("AddEelevatedWater", new object[] {
                        campus,
                        volume,
                        userCode,
                        userPassword}, this.AddEelevatedWaterOperationCompleted, userState);
        }
        
        private void OnAddEelevatedWaterOperationCompleted(object arg) {
            if ((this.AddEelevatedWaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEelevatedWaterCompleted(this, new AddEelevatedWaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditEelevatedWater", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditEelevatedWater_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditEelevatedWater(string campus, int waterCode, decimal volume, string userCode, string userPassword) {
            object[] results = this.Invoke("EditEelevatedWater", new object[] {
                        campus,
                        waterCode,
                        volume,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditEelevatedWaterAsync(string campus, int waterCode, decimal volume, string userCode, string userPassword) {
            this.EditEelevatedWaterAsync(campus, waterCode, volume, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditEelevatedWaterAsync(string campus, int waterCode, decimal volume, string userCode, string userPassword, object userState) {
            if ((this.EditEelevatedWaterOperationCompleted == null)) {
                this.EditEelevatedWaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditEelevatedWaterOperationCompleted);
            }
            this.InvokeAsync("EditEelevatedWater", new object[] {
                        campus,
                        waterCode,
                        volume,
                        userCode,
                        userPassword}, this.EditEelevatedWaterOperationCompleted, userState);
        }
        
        private void OnEditEelevatedWaterOperationCompleted(object arg) {
            if ((this.EditEelevatedWaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditEelevatedWaterCompleted(this, new EditEelevatedWaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteEelevatedWater", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteEelevatedWater_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEelevatedWater(int waterCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteEelevatedWater", new object[] {
                        waterCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEelevatedWaterAsync(int waterCode, string userCode, string userPassword) {
            this.DeleteEelevatedWaterAsync(waterCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteEelevatedWaterAsync(int waterCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteEelevatedWaterOperationCompleted == null)) {
                this.DeleteEelevatedWaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEelevatedWaterOperationCompleted);
            }
            this.InvokeAsync("DeleteEelevatedWater", new object[] {
                        waterCode,
                        userCode,
                        userPassword}, this.DeleteEelevatedWaterOperationCompleted, userState);
        }
        
        private void OnDeleteEelevatedWaterOperationCompleted(object arg) {
            if ((this.DeleteEelevatedWaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEelevatedWaterCompleted(this, new DeleteEelevatedWaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUtilityService", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUtilityService_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUtilityService(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword) {
            object[] results = this.Invoke("AddUtilityService", new object[] {
                        campus,
                        utilticategory,
                        description,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUtilityServiceAsync(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword) {
            this.AddUtilityServiceAsync(campus, utilticategory, description, utilitystatus, capacity, serviceprovider, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddUtilityServiceAsync(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword, object userState) {
            if ((this.AddUtilityServiceOperationCompleted == null)) {
                this.AddUtilityServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUtilityServiceOperationCompleted);
            }
            this.InvokeAsync("AddUtilityService", new object[] {
                        campus,
                        utilticategory,
                        description,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        userPassword}, this.AddUtilityServiceOperationCompleted, userState);
        }
        
        private void OnAddUtilityServiceOperationCompleted(object arg) {
            if ((this.AddUtilityServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUtilityServiceCompleted(this, new AddUtilityServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPlantsEquipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPlantsEquipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPlantsEquipment(string campus, string category, int quantity, string location, string userCode, string userPassword) {
            object[] results = this.Invoke("AddPlantsEquipment", new object[] {
                        campus,
                        category,
                        quantity,
                        location,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPlantsEquipmentAsync(string campus, string category, int quantity, string location, string userCode, string userPassword) {
            this.AddPlantsEquipmentAsync(campus, category, quantity, location, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddPlantsEquipmentAsync(string campus, string category, int quantity, string location, string userCode, string userPassword, object userState) {
            if ((this.AddPlantsEquipmentOperationCompleted == null)) {
                this.AddPlantsEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPlantsEquipmentOperationCompleted);
            }
            this.InvokeAsync("AddPlantsEquipment", new object[] {
                        campus,
                        category,
                        quantity,
                        location,
                        userCode,
                        userPassword}, this.AddPlantsEquipmentOperationCompleted, userState);
        }
        
        private void OnAddPlantsEquipmentOperationCompleted(object arg) {
            if ((this.AddPlantsEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPlantsEquipmentCompleted(this, new AddPlantsEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddRecreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddRecreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddRecreation(string campus, string location, string category, int quantity, string ownership, string tsubCategory, string userCode, string userPassword) {
            object[] results = this.Invoke("AddRecreation", new object[] {
                        campus,
                        location,
                        category,
                        quantity,
                        ownership,
                        tsubCategory,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecreationAsync(string campus, string location, string category, int quantity, string ownership, string tsubCategory, string userCode, string userPassword) {
            this.AddRecreationAsync(campus, location, category, quantity, ownership, tsubCategory, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddRecreationAsync(string campus, string location, string category, int quantity, string ownership, string tsubCategory, string userCode, string userPassword, object userState) {
            if ((this.AddRecreationOperationCompleted == null)) {
                this.AddRecreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecreationOperationCompleted);
            }
            this.InvokeAsync("AddRecreation", new object[] {
                        campus,
                        location,
                        category,
                        quantity,
                        ownership,
                        tsubCategory,
                        userCode,
                        userPassword}, this.AddRecreationOperationCompleted, userState);
        }
        
        private void OnAddRecreationOperationCompleted(object arg) {
            if ((this.AddRecreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecreationCompleted(this, new AddRecreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSanitation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSanitation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSanitation(string campus, string sanitationtype, string name, string location, string userCode, string userPassword) {
            object[] results = this.Invoke("AddSanitation", new object[] {
                        campus,
                        sanitationtype,
                        name,
                        location,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSanitationAsync(string campus, string sanitationtype, string name, string location, string userCode, string userPassword) {
            this.AddSanitationAsync(campus, sanitationtype, name, location, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddSanitationAsync(string campus, string sanitationtype, string name, string location, string userCode, string userPassword, object userState) {
            if ((this.AddSanitationOperationCompleted == null)) {
                this.AddSanitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSanitationOperationCompleted);
            }
            this.InvokeAsync("AddSanitation", new object[] {
                        campus,
                        sanitationtype,
                        name,
                        location,
                        userCode,
                        userPassword}, this.AddSanitationOperationCompleted, userState);
        }
        
        private void OnAddSanitationOperationCompleted(object arg) {
            if ((this.AddSanitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSanitationCompleted(this, new AddSanitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAccessRoads", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAccessRoads_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAccessRoads(string campus, string roadstatus, string description, string distance, string userCode, string userPassword) {
            object[] results = this.Invoke("AddAccessRoads", new object[] {
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccessRoadsAsync(string campus, string roadstatus, string description, string distance, string userCode, string userPassword) {
            this.AddAccessRoadsAsync(campus, roadstatus, description, distance, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddAccessRoadsAsync(string campus, string roadstatus, string description, string distance, string userCode, string userPassword, object userState) {
            if ((this.AddAccessRoadsOperationCompleted == null)) {
                this.AddAccessRoadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccessRoadsOperationCompleted);
            }
            this.InvokeAsync("AddAccessRoads", new object[] {
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        userPassword}, this.AddAccessRoadsOperationCompleted, userState);
        }
        
        private void OnAddAccessRoadsOperationCompleted(object arg) {
            if ((this.AddAccessRoadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccessRoadsCompleted(this, new AddAccessRoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibrary(
                    string campus, 
                    string name, 
                    string capacity, 
                    int noofVolumes, 
                    int noofTitles, 
                    string librarybandwith, 
                    int nooflibrarystaff, 
                    int noofcomputers, 
                    string dataaccesspoints, 
                    bool librarymanagementcommitee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepository, 
                    bool securitysystems, 
                    bool offcampussystem, 
                    bool opac, 
                    string userCode, 
                    string userPassword) {
            object[] results = this.Invoke("AddLibrary", new object[] {
                        campus,
                        name,
                        capacity,
                        noofVolumes,
                        noofTitles,
                        librarybandwith,
                        nooflibrarystaff,
                        noofcomputers,
                        dataaccesspoints,
                        librarymanagementcommitee,
                        libraryadvisorycommittee,
                        antiplagiarism,
                        digitalrepository,
                        securitysystems,
                        offcampussystem,
                        opac,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryAsync(
                    string campus, 
                    string name, 
                    string capacity, 
                    int noofVolumes, 
                    int noofTitles, 
                    string librarybandwith, 
                    int nooflibrarystaff, 
                    int noofcomputers, 
                    string dataaccesspoints, 
                    bool librarymanagementcommitee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepository, 
                    bool securitysystems, 
                    bool offcampussystem, 
                    bool opac, 
                    string userCode, 
                    string userPassword) {
            this.AddLibraryAsync(campus, name, capacity, noofVolumes, noofTitles, librarybandwith, nooflibrarystaff, noofcomputers, dataaccesspoints, librarymanagementcommitee, libraryadvisorycommittee, antiplagiarism, digitalrepository, securitysystems, offcampussystem, opac, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLibraryAsync(
                    string campus, 
                    string name, 
                    string capacity, 
                    int noofVolumes, 
                    int noofTitles, 
                    string librarybandwith, 
                    int nooflibrarystaff, 
                    int noofcomputers, 
                    string dataaccesspoints, 
                    bool librarymanagementcommitee, 
                    bool libraryadvisorycommittee, 
                    bool antiplagiarism, 
                    bool digitalrepository, 
                    bool securitysystems, 
                    bool offcampussystem, 
                    bool opac, 
                    string userCode, 
                    string userPassword, 
                    object userState) {
            if ((this.AddLibraryOperationCompleted == null)) {
                this.AddLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryOperationCompleted);
            }
            this.InvokeAsync("AddLibrary", new object[] {
                        campus,
                        name,
                        capacity,
                        noofVolumes,
                        noofTitles,
                        librarybandwith,
                        nooflibrarystaff,
                        noofcomputers,
                        dataaccesspoints,
                        librarymanagementcommitee,
                        libraryadvisorycommittee,
                        antiplagiarism,
                        digitalrepository,
                        securitysystems,
                        offcampussystem,
                        opac,
                        userCode,
                        userPassword}, this.AddLibraryOperationCompleted, userState);
        }
        
        private void OnAddLibraryOperationCompleted(object arg) {
            if ((this.AddLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryCompleted(this, new AddLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLand(int landCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword) {
            this.DeleteLandAsync(landCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLandOperationCompleted == null)) {
                this.DeleteLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLandOperationCompleted);
            }
            this.InvokeAsync("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword}, this.DeleteLandOperationCompleted, userState);
        }
        
        private void OnDeleteLandOperationCompleted(object arg) {
            if ((this.DeleteLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLandCompleted(this, new DeleteLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSanitation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSanitation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteSanitation(int sanitationCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteSanitation", new object[] {
                        sanitationCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSanitationAsync(int sanitationCode, string userCode, string userPassword) {
            this.DeleteSanitationAsync(sanitationCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteSanitationAsync(int sanitationCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteSanitationOperationCompleted == null)) {
                this.DeleteSanitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSanitationOperationCompleted);
            }
            this.InvokeAsync("DeleteSanitation", new object[] {
                        sanitationCode,
                        userCode,
                        userPassword}, this.DeleteSanitationOperationCompleted, userState);
        }
        
        private void OnDeleteSanitationOperationCompleted(object arg) {
            if ((this.DeleteSanitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSanitationCompleted(this, new DeleteSanitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteUtilityService", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteUtilityService_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteUtilityService(int utilityCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteUtilityService", new object[] {
                        utilityCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUtilityServiceAsync(int utilityCode, string userCode, string userPassword) {
            this.DeleteUtilityServiceAsync(utilityCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteUtilityServiceAsync(int utilityCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteUtilityServiceOperationCompleted == null)) {
                this.DeleteUtilityServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUtilityServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteUtilityService", new object[] {
                        utilityCode,
                        userCode,
                        userPassword}, this.DeleteUtilityServiceOperationCompleted, userState);
        }
        
        private void OnDeleteUtilityServiceOperationCompleted(object arg) {
            if ((this.DeleteUtilityServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUtilityServiceCompleted(this, new DeleteUtilityServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibrary(int libraryCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLibrary", new object[] {
                        libraryCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryAsync(int libraryCode, string userCode, string userPassword) {
            this.DeleteLibraryAsync(libraryCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryAsync(int libraryCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLibraryOperationCompleted == null)) {
                this.DeleteLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryOperationCompleted);
            }
            this.InvokeAsync("DeleteLibrary", new object[] {
                        libraryCode,
                        userCode,
                        userPassword}, this.DeleteLibraryOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryOperationCompleted(object arg) {
            if ((this.DeleteLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryCompleted(this, new DeleteLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteClassification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteClassification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClassification(int entryNumber, string accreditationNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteClassification", new object[] {
                        entryNumber,
                        accreditationNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClassificationAsync(int entryNumber, string accreditationNumber, string userCode, string userPassword) {
            this.DeleteClassificationAsync(entryNumber, accreditationNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteClassificationAsync(int entryNumber, string accreditationNumber, string userCode, string userPassword, object userState) {
            if ((this.DeleteClassificationOperationCompleted == null)) {
                this.DeleteClassificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClassificationOperationCompleted);
            }
            this.InvokeAsync("DeleteClassification", new object[] {
                        entryNumber,
                        accreditationNumber,
                        userCode,
                        userPassword}, this.DeleteClassificationOperationCompleted, userState);
        }
        
        private void OnDeleteClassificationOperationCompleted(object arg) {
            if ((this.DeleteClassificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClassificationCompleted(this, new DeleteClassificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryServices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryServices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryServices(int libraryCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLibraryServices", new object[] {
                        libraryCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryServicesAsync(int libraryCode, string userCode, string userPassword) {
            this.DeleteLibraryServicesAsync(libraryCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryServicesAsync(int libraryCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLibraryServicesOperationCompleted == null)) {
                this.DeleteLibraryServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryServicesOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryServices", new object[] {
                        libraryCode,
                        userCode,
                        userPassword}, this.DeleteLibraryServicesOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryServicesOperationCompleted(object arg) {
            if ((this.DeleteLibraryServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryServicesCompleted(this, new DeleteLibraryServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryFunctionalAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryFunctionalAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryFunctionalAreas(int libraryCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLibraryFunctionalAreas", new object[] {
                        libraryCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryFunctionalAreasAsync(int libraryCode, string userCode, string userPassword) {
            this.DeleteLibraryFunctionalAreasAsync(libraryCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryFunctionalAreasAsync(int libraryCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLibraryFunctionalAreasOperationCompleted == null)) {
                this.DeleteLibraryFunctionalAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryFunctionalAreasOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryFunctionalAreas", new object[] {
                        libraryCode,
                        userCode,
                        userPassword}, this.DeleteLibraryFunctionalAreasOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryFunctionalAreasOperationCompleted(object arg) {
            if ((this.DeleteLibraryFunctionalAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryFunctionalAreasCompleted(this, new DeleteLibraryFunctionalAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAccessRoads", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAccessRoads_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAccessRoads(int accessCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteAccessRoads", new object[] {
                        accessCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccessRoadsAsync(int accessCode, string userCode, string userPassword) {
            this.DeleteAccessRoadsAsync(accessCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteAccessRoadsAsync(int accessCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteAccessRoadsOperationCompleted == null)) {
                this.DeleteAccessRoadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccessRoadsOperationCompleted);
            }
            this.InvokeAsync("DeleteAccessRoads", new object[] {
                        accessCode,
                        userCode,
                        userPassword}, this.DeleteAccessRoadsOperationCompleted, userState);
        }
        
        private void OnDeleteAccessRoadsOperationCompleted(object arg) {
            if ((this.DeleteAccessRoadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccessRoadsCompleted(this, new DeleteAccessRoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteWasteManagement(int wasteCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteWasteManagement", new object[] {
                        wasteCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWasteManagementAsync(int wasteCode, string userCode, string userPassword) {
            this.DeleteWasteManagementAsync(wasteCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteWasteManagementAsync(int wasteCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteWasteManagementOperationCompleted == null)) {
                this.DeleteWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWasteManagementOperationCompleted);
            }
            this.InvokeAsync("DeleteWasteManagement", new object[] {
                        wasteCode,
                        userCode,
                        userPassword}, this.DeleteWasteManagementOperationCompleted, userState);
        }
        
        private void OnDeleteWasteManagementOperationCompleted(object arg) {
            if ((this.DeleteWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWasteManagementCompleted(this, new DeleteWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePlantsEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePlantsEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePlantsEquipments(int plantsCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeletePlantsEquipments", new object[] {
                        plantsCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePlantsEquipmentsAsync(int plantsCode, string userCode, string userPassword) {
            this.DeletePlantsEquipmentsAsync(plantsCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeletePlantsEquipmentsAsync(int plantsCode, string userCode, string userPassword, object userState) {
            if ((this.DeletePlantsEquipmentsOperationCompleted == null)) {
                this.DeletePlantsEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlantsEquipmentsOperationCompleted);
            }
            this.InvokeAsync("DeletePlantsEquipments", new object[] {
                        plantsCode,
                        userCode,
                        userPassword}, this.DeletePlantsEquipmentsOperationCompleted, userState);
        }
        
        private void OnDeletePlantsEquipmentsOperationCompleted(object arg) {
            if ((this.DeletePlantsEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlantsEquipmentsCompleted(this, new DeletePlantsEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteRecreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteRecreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRecreation(int recreationCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteRecreation", new object[] {
                        recreationCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecreationAsync(int recreationCode, string userCode, string userPassword) {
            this.DeleteRecreationAsync(recreationCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteRecreationAsync(int recreationCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteRecreationOperationCompleted == null)) {
                this.DeleteRecreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecreationOperationCompleted);
            }
            this.InvokeAsync("DeleteRecreation", new object[] {
                        recreationCode,
                        userCode,
                        userPassword}, this.DeleteRecreationOperationCompleted, userState);
        }
        
        private void OnDeleteRecreationOperationCompleted(object arg) {
            if ((this.DeleteRecreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecreationCompleted(this, new DeleteRecreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFire(int fireCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteFire", new object[] {
                        fireCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFireAsync(int fireCode, string userCode, string userPassword) {
            this.DeleteFireAsync(fireCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteFireAsync(int fireCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteFireOperationCompleted == null)) {
                this.DeleteFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFireOperationCompleted);
            }
            this.InvokeAsync("DeleteFire", new object[] {
                        fireCode,
                        userCode,
                        userPassword}, this.DeleteFireOperationCompleted, userState);
        }
        
        private void OnDeleteFireOperationCompleted(object arg) {
            if ((this.DeleteFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFireCompleted(this, new DeleteFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletekeymilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletekeymilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletekeymilestone(int milestoneCode, string userCode, string userPassword) {
            object[] results = this.Invoke("Deletekeymilestone", new object[] {
                        milestoneCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletekeymilestoneAsync(int milestoneCode, string userCode, string userPassword) {
            this.DeletekeymilestoneAsync(milestoneCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeletekeymilestoneAsync(int milestoneCode, string userCode, string userPassword, object userState) {
            if ((this.DeletekeymilestoneOperationCompleted == null)) {
                this.DeletekeymilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletekeymilestoneOperationCompleted);
            }
            this.InvokeAsync("Deletekeymilestone", new object[] {
                        milestoneCode,
                        userCode,
                        userPassword}, this.DeletekeymilestoneOperationCompleted, userState);
        }
        
        private void OnDeletekeymilestoneOperationCompleted(object arg) {
            if ((this.DeletekeymilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletekeymilestoneCompleted(this, new DeletekeymilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBuilding(int buildingCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteBuilding", new object[] {
                        buildingCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBuildingAsync(int buildingCode, string userCode, string userPassword) {
            this.DeleteBuildingAsync(buildingCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteBuildingAsync(int buildingCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteBuildingOperationCompleted == null)) {
                this.DeleteBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBuildingOperationCompleted);
            }
            this.InvokeAsync("DeleteBuilding", new object[] {
                        buildingCode,
                        userCode,
                        userPassword}, this.DeleteBuildingOperationCompleted, userState);
        }
        
        private void OnDeleteBuildingOperationCompleted(object arg) {
            if ((this.DeleteBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBuildingCompleted(this, new DeleteBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteReference", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteReference_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteReference(int refcode, string accreditationNo, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteReference", new object[] {
                        refcode,
                        accreditationNo,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(int refcode, string accreditationNo, string userCode, string userPassword) {
            this.DeleteReferenceAsync(refcode, accreditationNo, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(int refcode, string accreditationNo, string userCode, string userPassword, object userState) {
            if ((this.DeleteReferenceOperationCompleted == null)) {
                this.DeleteReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferenceOperationCompleted);
            }
            this.InvokeAsync("DeleteReference", new object[] {
                        refcode,
                        accreditationNo,
                        userCode,
                        userPassword}, this.DeleteReferenceOperationCompleted, userState);
        }
        
        private void OnDeleteReferenceOperationCompleted(object arg) {
            if ((this.DeleteReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferenceCompleted(this, new DeleteReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLand(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.EditLandAsync(landCode, campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.EditLandOperationCompleted == null)) {
                this.EditLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLandOperationCompleted);
            }
            this.InvokeAsync("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.EditLandOperationCompleted, userState);
        }
        
        private void OnEditLandOperationCompleted(object arg) {
            if ((this.EditLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLandCompleted(this, new EditLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditChancellors(string universitycode, string name, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            object[] results = this.Invoke("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            this.EditChancellorsAsync(universitycode, name, qualifications, appointmentdate, nationality, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword, object userState) {
            if ((this.EditChancellorsOperationCompleted == null)) {
                this.EditChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditChancellorsOperationCompleted);
            }
            this.InvokeAsync("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword}, this.EditChancellorsOperationCompleted, userState);
        }
        
        private void OnEditChancellorsOperationCompleted(object arg) {
            if ((this.EditChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditChancellorsCompleted(this, new EditChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditAffiliations(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword) {
            object[] results = this.Invoke("EditAffiliations", new object[] {
                        universitycode,
                        affilicationcode,
                        name,
                        affiliationcountry,
                        organisationname,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword) {
            this.EditAffiliationsAsync(universitycode, affilicationcode, name, affiliationcountry, organisationname, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword, object userState) {
            if ((this.EditAffiliationsOperationCompleted == null)) {
                this.EditAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAffiliationsOperationCompleted);
            }
            this.InvokeAsync("EditAffiliations", new object[] {
                        universitycode,
                        affilicationcode,
                        name,
                        affiliationcountry,
                        organisationname,
                        userCode,
                        userPassword}, this.EditAffiliationsOperationCompleted, userState);
        }
        
        private void OnEditAffiliationsOperationCompleted(object arg) {
            if ((this.EditAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAffiliationsCompleted(this, new EditAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSponsor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSponsor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSponsor(string universitycode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword) {
            this.EditSponsorAsync(universitycode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSponsorOperationCompleted == null)) {
                this.EditSponsorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSponsorOperationCompleted);
            }
            this.InvokeAsync("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword}, this.EditSponsorOperationCompleted, userState);
        }
        
        private void OnEditSponsorOperationCompleted(object arg) {
            if ((this.EditSponsorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSponsorCompleted(this, new EditSponsorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditKeyMilestones", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditKeyMilestones_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditKeyMilestones(string universitycode, int code, string year, string milestone, string userCode, string userPassword) {
            object[] results = this.Invoke("EditKeyMilestones", new object[] {
                        universitycode,
                        code,
                        year,
                        milestone,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, int code, string year, string milestone, string userCode, string userPassword) {
            this.EditKeyMilestonesAsync(universitycode, code, year, milestone, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, int code, string year, string milestone, string userCode, string userPassword, object userState) {
            if ((this.EditKeyMilestonesOperationCompleted == null)) {
                this.EditKeyMilestonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditKeyMilestonesOperationCompleted);
            }
            this.InvokeAsync("EditKeyMilestones", new object[] {
                        universitycode,
                        code,
                        year,
                        milestone,
                        userCode,
                        userPassword}, this.EditKeyMilestonesOperationCompleted, userState);
        }
        
        private void OnEditKeyMilestonesOperationCompleted(object arg) {
            if ((this.EditKeyMilestonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditKeyMilestonesCompleted(this, new EditKeyMilestonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSchool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSchool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSchool(string universitycode, int schoolcode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSchool", new object[] {
                        universitycode,
                        schoolcode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, int schoolcode, string name, string userCode, string userPassword) {
            this.EditSchoolAsync(universitycode, schoolcode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, int schoolcode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSchoolOperationCompleted == null)) {
                this.EditSchoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSchoolOperationCompleted);
            }
            this.InvokeAsync("EditSchool", new object[] {
                        universitycode,
                        schoolcode,
                        name,
                        userCode,
                        userPassword}, this.EditSchoolOperationCompleted, userState);
        }
        
        private void OnEditSchoolOperationCompleted(object arg) {
            if ((this.EditSchoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSchoolCompleted(this, new EditSchoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeDiplomaStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeCertificateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityProgrammesCompletedEventHandler(object sender, FnGetUniversityTotalUniversityProgrammesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityProgrammesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityProgrammesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityCampusesCompletedEventHandler(object sender, FnGetUniversityTotalUniversityCampusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityCampusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityCampusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendMailProgramApplicationCompletedEventHandler(object sender, FnSendMailProgramApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendMailProgramApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendMailProgramApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedProgramsCompletedEventHandler(object sender, FnSubmitSelectedProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnTerminateApplicationCompletedEventHandler(object sender, FnTerminateApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTerminateApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTerminateApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveSelectedProgramsCompletedEventHandler(object sender, FnRemoveSelectedProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveSelectedProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveSelectedProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertTechnicalCommentsCompletedEventHandler(object sender, FnInsertTechnicalCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertTechnicalCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertTechnicalCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnapproveAuditCMNTeamCompletedEventHandler(object sender, FnapproveAuditCMNTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnapproveAuditCMNTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnapproveAuditCMNTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnrejectAuditCMNTeamCompletedEventHandler(object sender, FnrejectAuditCMNTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnrejectAuditCMNTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnrejectAuditCMNTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddAuditeeCMNTeamCompletedEventHandler(object sender, FnAddAuditeeCMNTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddAuditeeCMNTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddAuditeeCMNTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditAuditeeCMNTeamCompletedEventHandler(object sender, FnEditAuditeeCMNTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditAuditeeCMNTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditAuditeeCMNTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveAuditeeCMNTeamCompletedEventHandler(object sender, FnRemoveAuditeeCMNTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveAuditeeCMNTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveAuditeeCMNTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAuditEngagementLetterCompletedEventHandler(object sender, FnAuditEngagementLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAuditEngagementLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAuditEngagementLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddAuditAnswersCompletedEventHandler(object sender, FnAddAuditAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddAuditAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddAuditAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddLosedEndedAuditAnswersCompletedEventHandler(object sender, FnAddLosedEndedAuditAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddLosedEndedAuditAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddLosedEndedAuditAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddDateAuditAnswersCompletedEventHandler(object sender, FnAddDateAuditAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDateAuditAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDateAuditAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddAttachmentAuditAnswersCompletedEventHandler(object sender, FnAddAttachmentAuditAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddAttachmentAuditAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddAttachmentAuditAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAuditInvitationPrintoutCompletedEventHandler(object sender, FnAuditInvitationPrintoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAuditInvitationPrintoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAuditInvitationPrintoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnViewRoadmapPrintoutCompletedEventHandler(object sender, FnViewRoadmapPrintoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnViewRoadmapPrintoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnViewRoadmapPrintoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPeerFeedbackCompletedEventHandler(object sender, FnSubmitPeerFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPeerFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPeerFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPeerFeedbackLinesCompletedEventHandler(object sender, FnSubmitPeerFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPeerFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPeerFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendCueWorkorderRatingEmailCompletedEventHandler(object sender, FnSendCueWorkorderRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendCueWorkorderRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendCueWorkorderRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerWorkorderRatingEmailCompletedEventHandler(object sender, FnSendPeerWorkorderRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerWorkorderRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerWorkorderRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertAuditRoadmapLinesCompletedEventHandler(object sender, FnInsertAuditRoadmapLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertAuditRoadmapLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertAuditRoadmapLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitRoadmapCompletedEventHandler(object sender, FnSubmitRoadmapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitRoadmapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitRoadmapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCheckUniversityBalanceCompletedEventHandler(object sender, FnCheckUniversityBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckUniversityBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckUniversityBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendNotificationCompletedEventHandler(object sender, FnSendNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendUniversityNotificationCompletedEventHandler(object sender, FnSendUniversityNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendUniversityNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendUniversityNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendCueNotificationCompletedEventHandler(object sender, FnSendCueNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendCueNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendCueNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendQAApprovalRequestCompletedEventHandler(object sender, SendQAApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQAApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQAApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelQAApprovalRequestCompletedEventHandler(object sender, CancelQAApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelQAApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelQAApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveQARejectRequestCompletedEventHandler(object sender, ApproveQARejectRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveQARejectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveQARejectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QAdataClerkEmailRequestCompletedEventHandler(object sender, QAdataClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QAdataClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QAdataClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QACancelClerkEmailRequestCompletedEventHandler(object sender, QACancelClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QACancelClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QACancelClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QAdvcApprovalEmailRequestCompletedEventHandler(object sender, QAdvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QAdvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QAdvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QAvcApprovalEmailRequestCompletedEventHandler(object sender, QAvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QAvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QAvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QAdvcfinalvcApprovalEmailRequestCompletedEventHandler(object sender, QAdvcfinalvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QAdvcfinalvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QAdvcfinalvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendAuditRoadmapCueNotificationCompletedEventHandler(object sender, FnSendAuditRoadmapCueNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendAuditRoadmapCueNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendAuditRoadmapCueNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendAuditRoadmapUniversityNotificationCompletedEventHandler(object sender, FnSendAuditRoadmapUniversityNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendAuditRoadmapUniversityNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendAuditRoadmapUniversityNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnProgrammeUserHelpEmailRequestCompletedEventHandler(object sender, FnProgrammeUserHelpEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProgrammeUserHelpEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProgrammeUserHelpEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInstitutionUserHelpEmailRequestCompletedEventHandler(object sender, FnInstitutionUserHelpEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInstitutionUserHelpEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInstitutionUserHelpEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitQAInvitationCompletedEventHandler(object sender, FnSubmitQAInvitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitQAInvitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitQAInvitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendQaInvitationEmailToCUECompletedEventHandler(object sender, FnSendQaInvitationEmailToCUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendQaInvitationEmailToCUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendQaInvitationEmailToCUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendQaInvitationEmailToUniversityCompletedEventHandler(object sender, FnSendQaInvitationEmailToUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendQaInvitationEmailToUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendQaInvitationEmailToUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitQASARResponseCompletedEventHandler(object sender, FnSubmitQASARResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitQASARResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitQASARResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendQaSARResponseEmailToCUECompletedEventHandler(object sender, FnSendQaSARResponseEmailToCUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendQaSARResponseEmailToCUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendQaSARResponseEmailToCUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendQaSARResponseEmailToUniversityCompletedEventHandler(object sender, FnSendQaSARResponseEmailToUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendQaSARResponseEmailToUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendQaSARResponseEmailToUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string sARNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateCorrectionOfFuctualErrorsCompletedEventHandler(object sender, FnCreateCorrectionOfFuctualErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateCorrectionOfFuctualErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateCorrectionOfFuctualErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertCorrectionOfFuctualErrorsLinesCompletedEventHandler(object sender, FnInsertCorrectionOfFuctualErrorsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertCorrectionOfFuctualErrorsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertCorrectionOfFuctualErrorsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCheckAuditPaymentDocumentCompletedEventHandler(object sender, FnCheckAuditPaymentDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckAuditPaymentDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckAuditPaymentDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetAuditFindingsCompletedEventHandler(object sender, FngetAuditFindingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetAuditFindingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetAuditFindingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAccademicStaffCompletedEventHandler(object sender, FnGetAccademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAccademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAccademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetNonTeachingStaffCompletedEventHandler(object sender, FnGetNonTeachingStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetNonTeachingStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetNonTeachingStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetLibraryStaffCompletedEventHandler(object sender, FnGetLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPartTimeTeachingStaffCompletedEventHandler(object sender, FnGetPartTimeTeachingStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPartTimeTeachingStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPartTimeTeachingStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetTerminatedProgramsCompletedEventHandler(object sender, FnGetTerminatedProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetTerminatedProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetTerminatedProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetStaffCounterCompletedEventHandler(object sender, FnGetStaffCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetStaffCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetStaffCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeOutcomesCompletedEventHandler(object sender, FnGetProgrammeOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetOpenProgramsCompletedEventHandler(object sender, FnGetOpenProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetOpenProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetOpenProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetOpenPrograms1CompletedEventHandler(object sender, FnGetOpenPrograms1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetOpenPrograms1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetOpenPrograms1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertProgrammeOutcome1CompletedEventHandler(object sender, FnInsertProgrammeOutcome1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertProgrammeOutcome1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertProgrammeOutcome1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertProgrammeOutcome2CompletedEventHandler(object sender, FnInsertProgrammeOutcome2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertProgrammeOutcome2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertProgrammeOutcome2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertProgrammeOutcome3CompletedEventHandler(object sender, FnInsertProgrammeOutcome3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertProgrammeOutcome3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertProgrammeOutcome3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertProgrammeOutcome4CompletedEventHandler(object sender, FnInsertProgrammeOutcome4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertProgrammeOutcome4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertProgrammeOutcome4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertProgrammeOutcome5CompletedEventHandler(object sender, FnInsertProgrammeOutcome5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertProgrammeOutcome5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertProgrammeOutcome5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewProgrammeDetailsCompletedEventHandler(object sender, FnNewProgrammeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewProgrammeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewProgrammeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRecommendationLinesCompletedEventHandler(object sender, FnInsertRecommendationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRecommendationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRecommendationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitRecommendationToCUECompletedEventHandler(object sender, FnSubmitRecommendationToCUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitRecommendationToCUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitRecommendationToCUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCuriculumCompletedEventHandler(object sender, FnGenerateCuriculumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCuriculumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCuriculumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammePhilosopyCompletedEventHandler(object sender, FnGetProgrammePhilosopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammePhilosopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammePhilosopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeAdmissionRequirementsCompletedEventHandler(object sender, FnGetProgrammeAdmissionRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeAdmissionRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeAdmissionRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeGoalCompletedEventHandler(object sender, FnGetProgrammeGoalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeGoalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeGoalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeCourseRequirementCompletedEventHandler(object sender, FnGetProgrammeCourseRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeCourseRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeCourseRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeCourseEvaluationCompletedEventHandler(object sender, FnGetProgrammeCourseEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeCourseEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeCourseEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeRequirementCreditTransferCompletedEventHandler(object sender, FnGetProgrammeRequirementCreditTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeRequirementCreditTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeRequirementCreditTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeStudentAssPolicyCompletedEventHandler(object sender, FnGetProgrammeStudentAssPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeStudentAssPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeStudentAssPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeExaminationRequlationsCompletedEventHandler(object sender, FnGetProgrammeExaminationRequlationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeExaminationRequlationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeExaminationRequlationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeModerationOfExaminationsCompletedEventHandler(object sender, FnGetProgrammeModerationOfExaminationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeModerationOfExaminationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeModerationOfExaminationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeProgramManagementCompletedEventHandler(object sender, FnGetProgrammeProgramManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeProgramManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeProgramManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeGraduationRequirementsCompletedEventHandler(object sender, FnGetProgrammeGraduationRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeGraduationRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeGraduationRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgrammeDescriptionOfThesisCompletedEventHandler(object sender, FnGetProgrammeDescriptionOfThesisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgrammeDescriptionOfThesisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgrammeDescriptionOfThesisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAuditLineDescriptionCompletedEventHandler(object sender, FnGetAuditLineDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAuditLineDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAuditLineDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAllAuditLinesCompletedEventHandler(object sender, FnGetAllAuditLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAllAuditLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAllAuditLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateSARCompletedEventHandler(object sender, FnGenerateSARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateSARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateSARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAllAuditLinesEachCompletedEventHandler(object sender, FnGetAllAuditLinesEachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAllAuditLinesEachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAllAuditLinesEachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAllAuditLinesDetailsCompletedEventHandler(object sender, FnGetAllAuditLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAllAuditLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAllAuditLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAuditOpenEndedCompletedEventHandler(object sender, FnSaveAuditOpenEndedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAuditOpenEndedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAuditOpenEndedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAuditDateCompletedEventHandler(object sender, FnSaveAuditDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAuditDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAuditDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAuditClosedEndedCompletedEventHandler(object sender, FnSaveAuditClosedEndedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAuditClosedEndedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAuditClosedEndedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAuditAttachmentCompletedEventHandler(object sender, FnSaveAuditAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAuditAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAuditAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgramUnitsCompletedEventHandler(object sender, FnGetProgramUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgramUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgramUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProgramUnits2CompletedEventHandler(object sender, FnGetProgramUnits2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProgramUnits2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProgramUnits2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateOverallReportCompletedEventHandler(object sender, FnGenerateOverallReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateOverallReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateOverallReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatePortalUsersCompletedEventHandler(object sender, FnCreatePortalUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatePortalUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatePortalUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnActivatePortalUserCompletedEventHandler(object sender, FnActivatePortalUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivatePortalUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivatePortalUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeActivatePortalUserCompletedEventHandler(object sender, FnDeActivatePortalUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeActivatePortalUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeActivatePortalUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendOTPCompletedEventHandler(object sender, FnSendOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitICTHelpDeskRequestCompletedEventHandler(object sender, FnSubmitICTHelpDeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitICTHelpDeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitICTHelpDeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendHELPDeskNotificationToCueCompletedEventHandler(object sender, FnSendHELPDeskNotificationToCueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendHELPDeskNotificationToCueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendHELPDeskNotificationToCueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetHelpdeskRequestsCompletedEventHandler(object sender, FnGetHelpdeskRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetHelpdeskRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetHelpdeskRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetResolvedHelpdeskRequestsCompletedEventHandler(object sender, FnGetResolvedHelpdeskRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetResolvedHelpdeskRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetResolvedHelpdeskRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetSARCompletenessLinesCompletedEventHandler(object sender, FnGetSARCompletenessLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSARCompletenessLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSARCompletenessLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCorrectionFactualErrorsCompletedEventHandler(object sender, FnGenerateCorrectionFactualErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCorrectionFactualErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCorrectionFactualErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitCorrectionFactualErrorsCompletedEventHandler(object sender, FnSubmitCorrectionFactualErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitCorrectionFactualErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitCorrectionFactualErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertRecommendationLinesDetailsCompletedEventHandler(object sender, FnInsertRecommendationLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRecommendationLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRecommendationLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetProposalRecCompletedEventHandler(object sender, FnGetProposalRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetProposalRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetProposalRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteProposalRecCompletedEventHandler(object sender, FnDeleteProposalRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteProposalRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteProposalRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeObjectivesCompletedEventHandler(object sender, DeleteProgrammeObjectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeObjectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeObjectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCourseDistributionsCompletedEventHandler(object sender, DeleteCourseDistributionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCourseDistributionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCourseDistributionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteContactHoursCompletedEventHandler(object sender, DeleteContactHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeSpecificationsStrengthsCompletedEventHandler(object sender, DeleteProgrammeSpecificationsStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeSpecificationsStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeSpecificationsStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeSpecificationsWeaknessCompletedEventHandler(object sender, DeleteProgrammeSpecificationsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeSpecificationsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeSpecificationsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeContentStrengthsCompletedEventHandler(object sender, DeleteProgrammeContentStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeContentStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeContentStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeContentWeaknessCompletedEventHandler(object sender, DeleteProgrammeContentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeContentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeContentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeOrganizationsStrengthsCompletedEventHandler(object sender, DeleteProgrammeOrganizationsStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeOrganizationsStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeOrganizationsStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeOrganizationsWeaknessCompletedEventHandler(object sender, DeleteProgrammeOrganizationsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeOrganizationsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeOrganizationsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeInternshipWeaknessCompletedEventHandler(object sender, DeleteProgrammeInternshipWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeInternshipWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeInternshipWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeInternshipStrengthsCompletedEventHandler(object sender, DeleteProgrammeInternshipStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeInternshipStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeInternshipStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeDidecticStrengthsCompletedEventHandler(object sender, DeleteProgrammeDidecticStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeDidecticStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeDidecticStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeDidecticWeaknessCompletedEventHandler(object sender, DeleteProgrammeDidecticWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeDidecticWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeDidecticWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsAssesmentsCompletedEventHandler(object sender, DeleteStudentsAssesmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsAssesmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsAssesmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsAssesmentsStrengthsCompletedEventHandler(object sender, DeleteStudentsAssesmentsStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsAssesmentsStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsAssesmentsStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsAssesmentsWeaknessCompletedEventHandler(object sender, DeleteStudentsAssesmentsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsAssesmentsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsAssesmentsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgrammeLeaderCompletedEventHandler(object sender, DeleteProgrammeLeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgrammeLeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgrammeLeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTeachingStaffWeaknessCompletedEventHandler(object sender, DeleteTeachingStaffWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTeachingStaffWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTeachingStaffWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTeachingStaffStrengthsCompletedEventHandler(object sender, DeleteTeachingStaffStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTeachingStaffStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTeachingStaffStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletequalitysupportstaffCompletedEventHandler(object sender, DeletequalitysupportstaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletequalitysupportstaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletequalitysupportstaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletequalitysupportstaffstrengthsCompletedEventHandler(object sender, DeletequalitysupportstaffstrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletequalitysupportstaffstrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletequalitysupportstaffstrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletequalitysupportstaffweaknessCompletedEventHandler(object sender, DeletequalitysupportstaffweaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletequalitysupportstaffweaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletequalitysupportstaffweaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentsprofileCompletedEventHandler(object sender, DeletestudentsprofileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentsprofileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentsprofileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentprofileweaknessCompletedEventHandler(object sender, DeletestudentprofileweaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentprofileweaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentprofileweaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentprofilestrengthsCompletedEventHandler(object sender, DeletestudentprofilestrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentprofilestrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentprofilestrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentsupportCompletedEventHandler(object sender, DeletestudentsupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentsupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentsupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentsupportstrengthsCompletedEventHandler(object sender, DeletestudentsupportstrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentsupportstrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentsupportstrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestudentsupportweaknessCompletedEventHandler(object sender, DeletestudentsupportweaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestudentsupportweaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestudentsupportweaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTeachingMaterialsCompletedEventHandler(object sender, DeleteTeachingMaterialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTeachingMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTeachingMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFacilitiesStrengthsCompletedEventHandler(object sender, DeleteFacilitiesStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFacilitiesStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFacilitiesStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFacilitiesStWeaknessCompletedEventHandler(object sender, DeleteFacilitiesStWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFacilitiesStWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFacilitiesStWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsEvaluationsStrengthsCompletedEventHandler(object sender, DeleteStudentsEvaluationsStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsEvaluationsStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsEvaluationsStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsEvaluationsWeaknessCompletedEventHandler(object sender, DeleteStudentsEvaluationsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsEvaluationsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsEvaluationsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCurriculumnDesignWeaknessCompletedEventHandler(object sender, DeleteCurriculumnDesignWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCurriculumnDesignWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCurriculumnDesignWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCurriculumnDesignStrengthsCompletedEventHandler(object sender, DeleteCurriculumnDesignStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCurriculumnDesignStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCurriculumnDesignStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentDevelopmentActivitiesStrengthsCompletedEventHandler(object sender, DeleteStudentDevelopmentActivitiesStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentDevelopmentActivitiesStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentDevelopmentActivitiesStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentDevelopmentActivitiesWeaknessCompletedEventHandler(object sender, DeleteStudentDevelopmentActivitiesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentDevelopmentActivitiesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentDevelopmentActivitiesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBenchmarkingStrengthsCompletedEventHandler(object sender, DeleteBenchmarkingStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBenchmarkingStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBenchmarkingStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBenchmarkingWeaknessCompletedEventHandler(object sender, DeleteBenchmarkingWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBenchmarkingWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBenchmarkingWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGraduatesStrengthsCompletedEventHandler(object sender, DeleteGraduatesStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGraduatesStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGraduatesStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGraduatesWeaknessCompletedEventHandler(object sender, DeleteGraduatesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGraduatesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGraduatesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStakeholdersSatisfactionStrengthsCompletedEventHandler(object sender, DeleteStakeholdersSatisfactionStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStakeholdersSatisfactionStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStakeholdersSatisfactionStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStakeholdersSatisfactionWeaknessCompletedEventHandler(object sender, DeleteStakeholdersSatisfactionWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStakeholdersSatisfactionWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStakeholdersSatisfactionWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataClerkEmailRequestCompletedEventHandler(object sender, DataClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataCancelClerkEmailRequestCompletedEventHandler(object sender, DataCancelClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCancelClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataCancelClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DvcApprovalEmailRequestCompletedEventHandler(object sender, DvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VcApprovalEmailRequestCompletedEventHandler(object sender, VcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataclerkfinalvcApprovalEmailRequestCompletedEventHandler(object sender, DataclerkfinalvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataclerkfinalvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataclerkfinalvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DvcfinalvcApprovalEmailRequestCompletedEventHandler(object sender, DvcfinalvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DvcfinalvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DvcfinalvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccountCreationEmailRequestCompletedEventHandler(object sender, AccountCreationEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountCreationEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountCreationEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUseraccountCreationEmailRequestCompletedEventHandler(object sender, FnUseraccountCreationEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUseraccountCreationEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUseraccountCreationEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUserHelpEmaiRequestCompletedEventHandler(object sender, FnUserHelpEmaiRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUserHelpEmaiRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUserHelpEmaiRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApprovalStatusDataCollectionCompletedEventHandler(object sender, ApprovalStatusDataCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovalStatusDataCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovalStatusDataCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnuseraccountcreationCompletedEventHandler(object sender, FnuseraccountcreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnuseraccountcreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnuseraccountcreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateDataCollectionDatasetsCompletedEventHandler(object sender, ValidateDataCollectionDatasetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDataCollectionDatasetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDataCollectionDatasetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateAmmendmentsDatasetsCompletedEventHandler(object sender, ValidateAmmendmentsDatasetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAmmendmentsDatasetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAmmendmentsDatasetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAmendmentsRequestCompletedEventHandler(object sender, AddAmendmentsRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAmendmentsRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAmendmentsRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAmendmentsRequestDatasetCodesCompletedEventHandler(object sender, AddAmendmentsRequestDatasetCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAmendmentsRequestDatasetCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAmendmentsRequestDatasetCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PortalResetPasswordCompletedEventHandler(object sender, PortalResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PortalResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PortalResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversityDomainCompletedEventHandler(object sender, FngetUniversityDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversityDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversityDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddAmendmentDatasetCodesCompletedEventHandler(object sender, FnAddAmendmentDatasetCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddAmendmentDatasetCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddAmendmentDatasetCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeFeedbackVoucherCompletedEventHandler(object sender, FnGenerateProgrammeFeedbackVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeFeedbackVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeEvaluationTooolCompletedEventHandler(object sender, FnGenerateProgrammeEvaluationTooolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeEvaluationTooolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeEvaluationTooolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewWorkOrderEmailAlertCompletedEventHandler(object sender, FnNewWorkOrderEmailAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewWorkOrderEmailAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewWorkOrderEmailAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAccreditationPaymentsAlertsCompletedEventHandler(object sender, FnAccreditationPaymentsAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAccreditationPaymentsAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAccreditationPaymentsAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAccreditationAlertsToUniversityCompletedEventHandler(object sender, FnAccreditationAlertsToUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAccreditationAlertsToUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAccreditationAlertsToUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateExitReportCompletedEventHandler(object sender, FnGenerateExitReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateExitReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateExitReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitUniversityAccreditationFeedbackCompletedEventHandler(object sender, FnSubmitUniversityAccreditationFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitUniversityAccreditationFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitUniversityAccreditationFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitInstitutionAccreditationCompletedEventHandler(object sender, FnSubmitInstitutionAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitInstitutionAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitInstitutionAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUniversityFeedbackCommentsEmailAlertCompletedEventHandler(object sender, FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalStudentsCompletedEventHandler(object sender, FnGetUniversityTotalStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalMaleStudentsCompletedEventHandler(object sender, FnGetUniversityTotalMaleStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalMaleStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalMaleStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalFemaleStudentsCompletedEventHandler(object sender, FnGetUniversityTotalFemaleStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalFemaleStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalFemaleStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalIntersexStudentsCompletedEventHandler(object sender, FnGetUniversityTotalIntersexStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalIntersexStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalIntersexStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventHandler(object sender, FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalGovernmentSponsoredStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalSelfSponsoredStudentsCompletedEventHandler(object sender, FnGetUniversityTotalSelfSponsoredStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalSelfSponsoredStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalSelfSponsoredStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalFullTimeStudentsCompletedEventHandler(object sender, FnGetUniversityTotalFullTimeStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalFullTimeStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalFullTimeStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalPartTimeStudentsCompletedEventHandler(object sender, FnGetUniversityTotalPartTimeStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalPartTimeStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalPartTimeStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityBachelorsStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityMastersStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityMastersStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityMastersStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityMastersStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityDoctorateStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityCertificateStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityCertificateStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityCertificateStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityCertificateStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPostgraduateStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventHandler(object sender, FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityDiplomaStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalFirstYearStudentsCompletedEventHandler(object sender, FnGetUniversityTotalFirstYearStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalFirstYearStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalFirstYearStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalSecondYearStudentsCompletedEventHandler(object sender, FnGetUniversityTotalSecondYearStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalSecondYearStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalSecondYearStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotaFourthYearStudentsCompletedEventHandler(object sender, FnGetUniversityTotaFourthYearStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotaFourthYearStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotaFourthYearStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalThridYearStudentsCompletedEventHandler(object sender, FnGetUniversityTotalThridYearStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalThridYearStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalThridYearStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityPWDTotalStudentsCompletedEventHandler(object sender, FnGetUniversityPWDTotalStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityPWDTotalStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityPWDTotalStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityEducationStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityEducationStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityEducationStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityEducationStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversitBusinessStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversitBusinessStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversitBusinessStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversitBusinessStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversitHealthStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversitHealthStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversitHealthStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversitHealthStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityArtsStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityArtsStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityArtsStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityArtsStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityScienceStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityScienceStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityScienceStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityScienceStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityServicesStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityServicesStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityServicesStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityServicesStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityNaturalScienceStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityEngineeringStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityEngineeringStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityEngineeringStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityEngineeringStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityICTStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityICTStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityICTStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityICTStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityLifeScienceStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityAgricultureStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityAgricultureStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityAgricultureStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityAgricultureStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityGraduateAssistantStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityResearchAssistantStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityTutorialFellowStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityJuniorResearchStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityLecturerStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityLecturerStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityLecturerStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityLecturerStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityResearchFellowStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversitySeniorLecturerStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversitySeniorReserachFellowStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityAssociateProffesorStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityProfessorsStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityProfessorsStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityProfessorsStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityProfessorsStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityAdjunctAcademicStaffStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPhysicalImpairmentStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityMaleStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityMaleStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityMaleStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityMaleStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityFemaleStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityFemaleStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityFemaleStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityFemaleStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityIntersexStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityIntersexStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityIntersexStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityIntersexStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityFullTimeStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityFullTimeStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityFullTimeStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityFullTimeStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityBachelorsStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityBachelorsStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityBachelorsStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityBachelorsStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityMastersStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityMastersStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityMastersStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityMastersStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityDoctorateStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityDoctorateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityDoctorateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityDoctorateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityDiplomaStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityDiplomaStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityDiplomaStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityDiplomaStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityCertificateStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityCertificateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityCertificateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityCertificateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeBachelorsStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeMastersStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventHandler(object sender, FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetUniversityTotalUniversityPartTimeDoctorateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetModerationsProgrammeCompletedEventHandler(object sender, FngetModerationsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetModerationsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetModerationsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCourseContentCompletedEventHandler(object sender, FngetCourseContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCourseContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCourseContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetInstructionalMaterialsCompletedEventHandler(object sender, FngetInstructionalMaterialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetInstructionalMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetInstructionalMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCourseAssessmentCompletedEventHandler(object sender, FngetCourseAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCourseAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCourseAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStakeholderStrenghtCompletedEventHandler(object sender, FngetStakeholderStrenghtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStakeholderStrenghtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStakeholderStrenghtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStakeholderWeaknessCompletedEventHandler(object sender, FngetStakeholderWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStakeholderWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStakeholderWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGenericOutcomeCompletedEventHandler(object sender, FngetGenericOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGenericOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGenericOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProfessionalOutcomeCompletedEventHandler(object sender, FngetProfessionalOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProfessionalOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProfessionalOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetNeedsDemandsCompletedEventHandler(object sender, FngetNeedsDemandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetNeedsDemandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetNeedsDemandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStakeholderRequirementsCompletedEventHandler(object sender, FngetStakeholderRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStakeholderRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStakeholderRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetLearningOutcomeStrenghtCompletedEventHandler(object sender, FngetLearningOutcomeStrenghtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetLearningOutcomeStrenghtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetLearningOutcomeStrenghtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetLearningOutcomeWeaknessCompletedEventHandler(object sender, FngetLearningOutcomeWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetLearningOutcomeWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetLearningOutcomeWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetAuditRoadmapReccomendationCompletedEventHandler(object sender, FngetAuditRoadmapReccomendationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetAuditRoadmapReccomendationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetAuditRoadmapReccomendationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeObjectiveCompletedEventHandler(object sender, FngetProgrammeObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetKnowledgeUnderstandingCompletedEventHandler(object sender, FngetKnowledgeUnderstandingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetKnowledgeUnderstandingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetKnowledgeUnderstandingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCognitiveSkillsCompletedEventHandler(object sender, FngetCognitiveSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCognitiveSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCognitiveSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSubjectSpecificCompletedEventHandler(object sender, FngetSubjectSpecificCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSubjectSpecificCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSubjectSpecificCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeSpecificationStrengthCompletedEventHandler(object sender, FngetProgrammeSpecificationStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeSpecificationStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeSpecificationStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeSpecificationWeaknessCompletedEventHandler(object sender, FngetProgrammeSpecificationWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeSpecificationWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeSpecificationWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeContentStrengthsCompletedEventHandler(object sender, FngetProgrammeContentStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeContentStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeContentStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeContentWeaknessCompletedEventHandler(object sender, FngetProgrammeContentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeContentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeContentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeOrganizationStrengthsCompletedEventHandler(object sender, FngetProgrammeOrganizationStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeOrganizationStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeOrganizationStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeOrganizationWeaknessCompletedEventHandler(object sender, FngetProgrammeOrganizationWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeOrganizationWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeOrganizationWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeAttachmentStrengthCompletedEventHandler(object sender, FngetProgrammeAttachmentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeAttachmentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeAttachmentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeAttachmentWeaknessCompletedEventHandler(object sender, FngetProgrammeAttachmentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeAttachmentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeAttachmentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeDidacticStrengthCompletedEventHandler(object sender, FngetProgrammeDidacticStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeDidacticStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeDidacticStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsAssesmentStrengthCompletedEventHandler(object sender, FngetStudentsAssesmentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsAssesmentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsAssesmentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetProgrammeDidacticWeaknessCompletedEventHandler(object sender, FngetProgrammeDidacticWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetProgrammeDidacticWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetProgrammeDidacticWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsAssesmentWeaknessCompletedEventHandler(object sender, FngetStudentsAssesmentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsAssesmentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsAssesmentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetQualityStaffStrengthCompletedEventHandler(object sender, FngetQualityStaffStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetQualityStaffStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetQualityStaffStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetQualityStaffWeaknessCompletedEventHandler(object sender, FngetQualityStaffWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetQualityStaffWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetQualityStaffWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentProfileStrengthCompletedEventHandler(object sender, FngetStudentProfileStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentProfileStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentProfileStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentProfileWeaknessCompletedEventHandler(object sender, FngetStudentProfileWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentProfileWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentProfileWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentSupportStrengthCompletedEventHandler(object sender, FngetStudentSupportStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentSupportStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentSupportStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentSupportWeaknessCompletedEventHandler(object sender, FngetStudentSupportWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentSupportWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentSupportWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetFacilitiesStrengthCompletedEventHandler(object sender, FngetFacilitiesStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetFacilitiesStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetFacilitiesStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetFacilitiesWeaknessCompletedEventHandler(object sender, FngetFacilitiesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetFacilitiesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetFacilitiesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsEvaluationsStrengthCompletedEventHandler(object sender, FngetStudentsEvaluationsStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsEvaluationsStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsEvaluationsStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsEvaluationsWeaknessCompletedEventHandler(object sender, FngetStudentsEvaluationsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsEvaluationsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsEvaluationsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCurriculumnDesignStrengthCompletedEventHandler(object sender, FngetCurriculumnDesignStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCurriculumnDesignStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCurriculumnDesignStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetCurriculumnDesignWeaknessCompletedEventHandler(object sender, FngetCurriculumnDesignWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetCurriculumnDesignWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetCurriculumnDesignWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsDevelopmentStrengthCompletedEventHandler(object sender, FngetStudentsDevelopmentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsDevelopmentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsDevelopmentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStudentsDevelopmentWeaknessCompletedEventHandler(object sender, FngetStudentsDevelopmentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStudentsDevelopmentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStudentsDevelopmentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetBenchmarkingStrengthCompletedEventHandler(object sender, FngetBenchmarkingStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetBenchmarkingStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetBenchmarkingStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetBenchmarkingWeaknessCompletedEventHandler(object sender, FngetBenchmarkingWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetBenchmarkingWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetBenchmarkingWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGraduatesStrengthCompletedEventHandler(object sender, FngetGraduatesStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGraduatesStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGraduatesStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGraduatesWeaknessCompletedEventHandler(object sender, FngetGraduatesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGraduatesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGraduatesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStakeholdersSatisactionsStrengthCompletedEventHandler(object sender, FngetStakeholdersSatisactionsStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStakeholdersSatisactionsStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStakeholdersSatisactionsStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetStakeholdersSatisfactionsWeaknessCompletedEventHandler(object sender, FngetStakeholdersSatisfactionsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetStakeholdersSatisfactionsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetStakeholdersSatisfactionsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversityMissionCompletedEventHandler(object sender, FngetUniversityMissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversityMissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversityMissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversityVissionCompletedEventHandler(object sender, FngetUniversityVissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversityVissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversityVissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversityAimCompletedEventHandler(object sender, FngetUniversityAimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversityAimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversityAimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversitHistoryCompletedEventHandler(object sender, FngetUniversitHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversitHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversitHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversitPhylosophyCompletedEventHandler(object sender, FngetUniversitPhylosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversitPhylosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversitPhylosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversitKeyMilestoneCompletedEventHandler(object sender, FngetUniversitKeyMilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversitKeyMilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversitKeyMilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOutComesStrengthCompletedEventHandler(object sender, AddOutComesStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOutComesStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOutComesStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramSpecificationStrengthCompletedEventHandler(object sender, AddProgramSpecificationStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramSpecificationStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramSpecificationStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramSpecificationWeaknessCompletedEventHandler(object sender, AddProgramSpecificationWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramSpecificationWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramSpecificationWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramContentWeaknessCompletedEventHandler(object sender, AddProgramContentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramContentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramContentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramContentStrengthCompletedEventHandler(object sender, AddProgramContentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramContentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramContentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramOrganizationStrengthCompletedEventHandler(object sender, AddProgramOrganizationStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramOrganizationStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramOrganizationStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramOrganizationWeaknessCompletedEventHandler(object sender, AddProgramOrganizationWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramOrganizationWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramOrganizationWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsAssesmentStrengthCompletedEventHandler(object sender, AddStudentsAssesmentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsAssesmentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsAssesmentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsAssesmentWeaknessCompletedEventHandler(object sender, AddStudentsAssesmentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsAssesmentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsAssesmentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQualityStaffStrengthCompletedEventHandler(object sender, AddQualityStaffStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualityStaffStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualityStaffStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQualityStaffWeaknessCompletedEventHandler(object sender, AddQualityStaffWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualityStaffWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualityStaffWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentProfileStrengthCompletedEventHandler(object sender, AddStudentProfileStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentProfileStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentProfileStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentProfileWeaknessCompletedEventHandler(object sender, AddStudentProfileWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentProfileWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentProfileWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentSupportStrengthCompletedEventHandler(object sender, AddStudentSupportStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentSupportStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentSupportStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentSupportWeaknessCompletedEventHandler(object sender, AddStudentSupportWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentSupportWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentSupportWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFacilitiesStrengthCompletedEventHandler(object sender, AddFacilitiesStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFacilitiesStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFacilitiesStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFacilitiesWeaknessCompletedEventHandler(object sender, AddFacilitiesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFacilitiesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFacilitiesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsEvalautionStrengthCompletedEventHandler(object sender, AddStudentsEvalautionStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsEvalautionStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsEvalautionStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsEvaluationWeaknessCompletedEventHandler(object sender, AddStudentsEvaluationWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsEvaluationWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsEvaluationWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurriculumnDesignStrengthCompletedEventHandler(object sender, AddCurriculumnDesignStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurriculumnDesignStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurriculumnDesignStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurriculumnDesignWeaknessCompletedEventHandler(object sender, AddCurriculumnDesignWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurriculumnDesignWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurriculumnDesignWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsDevelopmentStrengthCompletedEventHandler(object sender, AddStudentsDevelopmentStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsDevelopmentStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsDevelopmentStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsDevelopmentWeaknessCompletedEventHandler(object sender, AddStudentsDevelopmentWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsDevelopmentWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsDevelopmentWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBenchmarkingStrengthCompletedEventHandler(object sender, AddBenchmarkingStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBenchmarkingStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBenchmarkingStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBenchmarkingtWeaknessCompletedEventHandler(object sender, AddBenchmarkingtWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBenchmarkingtWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBenchmarkingtWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGraduatesStrengthCompletedEventHandler(object sender, AddGraduatesStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduatesStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduatesStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGraduatesWeaknessCompletedEventHandler(object sender, AddGraduatesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduatesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduatesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStakeholdersSatisfactionsStrengthCompletedEventHandler(object sender, AddStakeholdersSatisfactionsStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStakeholdersSatisfactionsStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStakeholdersSatisfactionsStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStakeholdersSatisfactionsWeaknessCompletedEventHandler(object sender, AddStakeholdersSatisfactionsWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStakeholdersSatisfactionsWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStakeholdersSatisfactionsWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOutComesWeaknessCompletedEventHandler(object sender, AddOutComesWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOutComesWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOutComesWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAspectDesciptionCompletedEventHandler(object sender, AddAspectDesciptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAspectDesciptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAspectDesciptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeObjectiveCompletedEventHandler(object sender, AddProgrammeObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCoursesDistributionCompletedEventHandler(object sender, AddCoursesDistributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCoursesDistributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCoursesDistributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalHoursDetailsCompletedEventHandler(object sender, AddInstructionalHoursDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalHoursDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalHoursDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCourseHoursDistributionCompletedEventHandler(object sender, AddCourseHoursDistributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseHoursDistributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseHoursDistributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalHoursCompletedEventHandler(object sender, AddInstructionalHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeCommunicationDetailsCompletedEventHandler(object sender, AddProgrammeCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeContentCompletedEventHandler(object sender, AddProgrammeContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeOrganizationCompletedEventHandler(object sender, AddProgrammeOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDidacticConceptCompletedEventHandler(object sender, AddDidacticConceptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDidacticConceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDidacticConceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInternshipStrenghtsCompletedEventHandler(object sender, AddInternshipStrenghtsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInternshipStrenghtsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInternshipStrenghtsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInternshipWeaknessesCompletedEventHandler(object sender, AddInternshipWeaknessesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInternshipWeaknessesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInternshipWeaknessesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherDidecticStrengthCompletedEventHandler(object sender, AddOtherDidecticStrengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherDidecticStrengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherDidecticStrengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherDidecticWeaknessesCompletedEventHandler(object sender, AddOtherDidecticWeaknessesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherDidecticWeaknessesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherDidecticWeaknessesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsAssessmentCompletedEventHandler(object sender, AddStudentsAssessmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsAssessmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsAssessmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeGradingCompletedEventHandler(object sender, AddProgrammeGradingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeGradingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeGradingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAntiPlagiarismDetailsCompletedEventHandler(object sender, AddAntiPlagiarismDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAntiPlagiarismDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAntiPlagiarismDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicLeaderDetailsCompletedEventHandler(object sender, AddAcademicLeaderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicLeaderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicLeaderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNonTeachingStaffSizeCompletedEventHandler(object sender, AddNonTeachingStaffSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonTeachingStaffSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonTeachingStaffSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentProfileDetailsCompletedEventHandler(object sender, AddStudentProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentSupportDetailsCompletedEventHandler(object sender, AddStudentSupportDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentSupportDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentSupportDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentEvaluationCompletedEventHandler(object sender, AddStudentEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurriculumnDesignDetailsCompletedEventHandler(object sender, AddCurriculumnDesignDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurriculumnDesignDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurriculumnDesignDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStaffDevelopmentActivitiesCompletedEventHandler(object sender, AddStaffDevelopmentActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStaffDevelopmentActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStaffDevelopmentActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBenchmarkingCompletedEventHandler(object sender, AddBenchmarkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBenchmarkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBenchmarkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGraduatesAchievementCompletedEventHandler(object sender, AddGraduatesAchievementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduatesAchievementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduatesAchievementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStakeholdersSatisfactionCompletedEventHandler(object sender, AddStakeholdersSatisfactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStakeholdersSatisfactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStakeholdersSatisfactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFullTimeAcademicStaffSizeCompletedEventHandler(object sender, AddFullTimeAcademicStaffSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFullTimeAcademicStaffSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFullTimeAcademicStaffSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDidacticAidsToolsCompletedEventHandler(object sender, AddDidacticAidsToolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDidacticAidsToolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDidacticAidsToolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTeachingEquipmentsCompletedEventHandler(object sender, AddTeachingEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeachingEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeachingEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateStakeholderRequirementsCompletedEventHandler(object sender, ValidateStakeholderRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateStakeholderRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateStakeholderRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateExpectedLearningOutcomesCompletedEventHandler(object sender, ValidateExpectedLearningOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateExpectedLearningOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateExpectedLearningOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStakeholdersCompletedEventHandler(object sender, DeleteStakeholdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStakeholdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStakeholdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteotherStakeholdersCompletedEventHandler(object sender, DeleteotherStakeholdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteotherStakeholdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteotherStakeholdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStakeholdersStrengthsCompletedEventHandler(object sender, DeleteStakeholdersStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStakeholdersStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStakeholdersStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStakeholdersWeaknessCompletedEventHandler(object sender, DeleteStakeholdersWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStakeholdersWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStakeholdersWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGenericOutcomeCompletedEventHandler(object sender, DeleteGenericOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGenericOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGenericOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProfessionalOutcomeCompletedEventHandler(object sender, DeleteProfessionalOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteNeedsDemandsRequirementsCompletedEventHandler(object sender, DeleteNeedsDemandsRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNeedsDemandsRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNeedsDemandsRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteOutcomeCommicationsCompletedEventHandler(object sender, DeleteOutcomeCommicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOutcomeCommicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOutcomeCommicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAchievementsOutcomeStrengthsCompletedEventHandler(object sender, DeleteAchievementsOutcomeStrengthsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAchievementsOutcomeStrengthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAchievementsOutcomeStrengthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAchievementsOutcomeWeaknessCompletedEventHandler(object sender, DeleteAchievementsOutcomeWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAchievementsOutcomeWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAchievementsOutcomeWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAspectsDetailsCompletedEventHandler(object sender, DeleteAspectsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAspectsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAspectsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDepartmentCompletedEventHandler(object sender, EditDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGeneralDetailsCompletedEventHandler(object sender, EditGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddMissionDetailsCompletedEventHandler(object sender, AddMissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPhilosophyCompletedEventHandler(object sender, AddPhilosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPhilosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPhilosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddMilestoneCompletedEventHandler(object sender, AddMilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAffiliationsCompletedEventHandler(object sender, AddAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddschoolFacultiesCompletedEventHandler(object sender, AddschoolFacultiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddschoolFacultiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddschoolFacultiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDepartmentsCompletedEventHandler(object sender, AddDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSponsorsCompletedEventHandler(object sender, AddSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHistoryCompletedEventHandler(object sender, AddHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditphylosophyCompletedEventHandler(object sender, EditphylosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditphylosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditphylosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditVCDetailsCompletedEventHandler(object sender, EditVCDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditVCDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditVCDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryStaffCompletedEventHandler(object sender, AddLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLibraryStaffCompletedEventHandler(object sender, DeleteLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGraduationCompletedEventHandler(object sender, AddGraduationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendApprovalRequestCompletedEventHandler(object sender, SendApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendProgramApprovalRequestCompletedEventHandler(object sender, SendProgramApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProgramApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProgramApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveRejectRequestCompletedEventHandler(object sender, ApproveRejectRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveRejectProgramRequestCompletedEventHandler(object sender, ApproveRejectProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelApprovalProgramRequestCompletedEventHandler(object sender, CancelApprovalProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelApprovalRequestCompletedEventHandler(object sender, CancelApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBuildingCompletedEventHandler(object sender, AddBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddWasteManagementCompletedEventHandler(object sender, AddWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccreditationGeneralDetailsCompletedEventHandler(object sender, AccreditationGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateaccreditationGeneralDetailsCompletedEventHandler(object sender, UpdateaccreditationGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateaccreditationGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateaccreditationGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InitialGeneralDetailsCompletedEventHandler(object sender, InitialGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitialGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitialGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNewProgramsCompletedEventHandler(object sender, AddNewProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramRationaleCompletedEventHandler(object sender, AddProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateProgramRationaleCompletedEventHandler(object sender, ValidateProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramRationaleEntryCompletedEventHandler(object sender, AddProgramRationaleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditProgramRationaleCompletedEventHandler(object sender, EditProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSpecializationAreasCompletedEventHandler(object sender, EditSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditReferenceMaterialsCompletedEventHandler(object sender, EditReferenceMaterialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditReferenceMaterialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditReferenceMaterialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgramRationaleCompletedEventHandler(object sender, DeleteProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLearningOutcomeCompletedEventHandler(object sender, AddLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateLearningOutcomeCompletedEventHandler(object sender, ValidateLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateLearningOutcome2CompletedEventHandler(object sender, ValidateLearningOutcome2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLearningOutcome2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLearningOutcome2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLearningOutcomeEntryCompletedEventHandler(object sender, AddLearningOutcomeEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSpecializationAreasCompletedEventHandler(object sender, AddSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateSpecializationAreasCompletedEventHandler(object sender, ValidateSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSpecializationAreasEntryCompletedEventHandler(object sender, AddSpecializationAreasEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecializationAreasEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecializationAreasEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditLearningOutcomeCompletedEventHandler(object sender, EditLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLearningOutcomeCompletedEventHandler(object sender, DeleteLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSpecializationAreaCompletedEventHandler(object sender, DeleteSpecializationAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpecializationAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpecializationAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDeliveryModeCompletedEventHandler(object sender, AddDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddClassificationofDegreesCompletedEventHandler(object sender, AddClassificationofDegreesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClassificationofDegreesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClassificationofDegreesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VlidateDeliveryModeCompletedEventHandler(object sender, VlidateDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VlidateDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VlidateDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VlidateDeliveryMode2CompletedEventHandler(object sender, VlidateDeliveryMode2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VlidateDeliveryMode2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VlidateDeliveryMode2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDeliveryModeCompletedEventHandler(object sender, DeleteDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGradingSystemCompletedEventHandler(object sender, AddGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateGradingSystemCompletedEventHandler(object sender, ValidateGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateGradingSystem2CompletedEventHandler(object sender, ValidateGradingSystem2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGradingSystem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGradingSystem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGradingSystemCompletedEventHandler(object sender, EditGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGradingSystemCompletedEventHandler(object sender, DeleteGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUnitCompletedEventHandler(object sender, AddUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateUnitCompletedEventHandler(object sender, ValidateUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUnitEntryCompletedEventHandler(object sender, AddUnitEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditUnitCompletedEventHandler(object sender, EditUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUnitCompletedEventHandler(object sender, DeleteUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalMethodCompletedEventHandler(object sender, AddInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateInstructionalMethodCompletedEventHandler(object sender, ValidateInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalMethodEntryCompletedEventHandler(object sender, AddInstructionalMethodEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteInstructionalMethodCompletedEventHandler(object sender, DeleteInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCourseLearningOutcomeCompletedEventHandler(object sender, AddCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateCourseLearningOutcomeCompletedEventHandler(object sender, ValidateCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCourseLearningOutcomeEntryCompletedEventHandler(object sender, AddCourseLearningOutcomeEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCourseLearningOutcomeCompletedEventHandler(object sender, EditCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCourseLearningOutcomeCompletedEventHandler(object sender, DeleteCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBookCompletedEventHandler(object sender, AddBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateBookCompletedEventHandler(object sender, ValidateBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateProgrammeGeneralDetailsCompletedEventHandler(object sender, ValidateProgrammeGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateProgrammeGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateProgrammeGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateProgrammeBasicInformationCompletedEventHandler(object sender, ValidateProgrammeBasicInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateProgrammeBasicInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateProgrammeBasicInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBookEntryCompletedEventHandler(object sender, AddBookEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditBookCompletedEventHandler(object sender, EditBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBookCompletedEventHandler(object sender, DeleteBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveDocumentsPaymentCompletedEventHandler(object sender, SaveDocumentsPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentsPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentsPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveDocumentsInstProgrammesCompletedEventHandler(object sender, SaveDocumentsInstProgrammesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentsInstProgrammesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentsInstProgrammesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentsProgrammeCompletedEventHandler(object sender, ConfirmPaymentsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentsInstitutionCompletedEventHandler(object sender, ConfirmPaymentsInstitutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsInstitutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsInstitutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngeneratecodesCompletedEventHandler(object sender, FngeneratecodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngeneratecodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngeneratecodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddKnownStakeHolderCompletedEventHandler(object sender, AddKnownStakeHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKnownStakeHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKnownStakeHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNewStakeHolderCompletedEventHandler(object sender, AddNewStakeHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewStakeHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewStakeHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStrengthOrWeaknessCompletedEventHandler(object sender, AddStrengthOrWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStrengthOrWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStrengthOrWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSARCommitteesComposition1CompletedEventHandler(object sender, AddSARCommitteesComposition1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesComposition1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesComposition1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSARCommitteesCompositionCompletedEventHandler(object sender, AddSARCommitteesCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrusteeSenateCompositionCompletedEventHandler(object sender, AddTrusteeSenateCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrusteeSenateCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrusteeSenateCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHRSummaryCompletedEventHandler(object sender, AddHRSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHRSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHRSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDevelopmentTrainingCompletedEventHandler(object sender, AddDevelopmentTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDevelopmentTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDevelopmentTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSchoolCompletedEventHandler(object sender, AddSchoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSchoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSchoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSchoolDepartmentCompletedEventHandler(object sender, AddSchoolDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSchoolDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSchoolDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSourceOfIncomeCompletedEventHandler(object sender, AddSourceOfIncomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSourceOfIncomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSourceOfIncomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCreditorsDebtorsCompletedEventHandler(object sender, AddCreditorsDebtorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditorsDebtorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditorsDebtorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddActualBudgetCompletedEventHandler(object sender, AddActualBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddActualBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddActualBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDebtEquityCurrentAssetsLiabilitiesCompletedEventHandler(object sender, AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQaAcademicProgrammeCompletedEventHandler(object sender, AddQaAcademicProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaAcademicProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaAcademicProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQaCollaboratingAcademicProgrammeCompletedEventHandler(object sender, AddQaCollaboratingAcademicProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaCollaboratingAcademicProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaCollaboratingAcademicProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQaProgrammeSummaryCompletedEventHandler(object sender, AddQaProgrammeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaProgrammeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaProgrammeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddKenyanInternationalStudentsCompletedEventHandler(object sender, AddKenyanInternationalStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKenyanInternationalStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKenyanInternationalStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicStaffQualityCompletedEventHandler(object sender, AddAcademicStaffQualityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBasicInformationCompletedEventHandler(object sender, AddBasicInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBasicInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBasicInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditBasicInformationCompletedEventHandler(object sender, EditBasicInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBasicInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBasicInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptRejectPeerReviewerJobCompletedEventHandler(object sender, AcceptRejectPeerReviewerJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptRejectPeerReviewerJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptRejectPeerReviewerJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerReviewersEvaluationCompletedEventHandler(object sender, AddPeerReviewersEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerReviewersEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerReviewersEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGenericOutcomeCompletedEventHandler(object sender, AddGenericOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGenericOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGenericOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProffessionalOutcomeCompletedEventHandler(object sender, AddProffessionalOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNeedsRequirementsCompletedEventHandler(object sender, AddNeedsRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNeedsRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNeedsRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCommunicationDetailsCompletedEventHandler(object sender, AddCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddExpectedLearningOutcomeDetailsCompletedEventHandler(object sender, AddExpectedLearningOutcomeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExpectedLearningOutcomeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExpectedLearningOutcomeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditPeerReviewersEvaluationCompletedEventHandler(object sender, FnEditPeerReviewersEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPeerReviewersEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPeerReviewersEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerApprovalRequestCompletedEventHandler(object sender, FnSendPeerApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegisterPeerReviewerCompletedEventHandler(object sender, FnRegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetVendornNumberCompletedEventHandler(object sender, FnGetVendornNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetVendornNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetVendornNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogCompletedEventHandler(object sender, FnInsertBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogReplyCompletedEventHandler(object sender, FnInsertBlogReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetRationaleDescriptionCompletedEventHandler(object sender, FngetRationaleDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetRationaleDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetRationaleDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetLearningOutcomeDescriptionCompletedEventHandler(object sender, FngetLearningOutcomeDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetLearningOutcomeDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetLearningOutcomeDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSpecializationDescriptionCompletedEventHandler(object sender, FngetSpecializationDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSpecializationDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSpecializationDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUnitDescriptionCompletedEventHandler(object sender, FngetUnitDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUnitDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUnitDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetReferenceMaterialCompletedEventHandler(object sender, FngetReferenceMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetReferenceMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetReferenceMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetPhylosophyCompletedEventHandler(object sender, FngetPhylosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetPhylosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetPhylosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetAdmissionRequirementCompletedEventHandler(object sender, FngetAdmissionRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetAdmissionRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetAdmissionRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGoalProgrammeCompletedEventHandler(object sender, FngetGoalProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGoalProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGoalProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetRequlationsProgrammeCompletedEventHandler(object sender, FngetRequlationsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetRequlationsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetRequlationsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetExaminationsProgrammeCompletedEventHandler(object sender, FngetExaminationsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetExaminationsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetExaminationsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGraduationsProgrammeCompletedEventHandler(object sender, FngetGraduationsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGraduationsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGraduationsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetThesisProgrammeCompletedEventHandler(object sender, FngetThesisProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetThesisProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetThesisProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetManagementProgrammeCompletedEventHandler(object sender, FngetManagementProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetManagementProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetManagementProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetApplicationNumberCompletedEventHandler(object sender, GetApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAccreditationNumberCompletedEventHandler(object sender, GetAccreditationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccreditationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccreditationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetQualityAuditNumberCompletedEventHandler(object sender, GetQualityAuditNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualityAuditNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualityAuditNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOutComenNumberCompletedEventHandler(object sender, GetOutComenNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutComenNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutComenNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryServicesCompletedEventHandler(object sender, AddLibraryServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCourseLearningOutcomeCompletedEventHandler(object sender, FnGetCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryFunctionalAreasCompletedEventHandler(object sender, AddLibraryFunctionalAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryFunctionalAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryFunctionalAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProgramAccreditationAlertCompletedEventHandler(object sender, ProgramAccreditationAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramAccreditationAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramAccreditationAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProgramApplicationNumberCompletedEventHandler(object sender, GetProgramApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionCreateinvoiceCompletedEventHandler(object sender, InstitutionCreateinvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionCreateinvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionCreateinvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCommentsCompletedEventHandler(object sender, AddCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryPoliciesCompletedEventHandler(object sender, AddLibraryPoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProgramConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentDraftCompletedEventHandler(object sender, AddStudentDraftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentDraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentDraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateStudentDraftCompletedEventHandler(object sender, UpdateStudentDraftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStudentDraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStudentDraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentCompletedEventHandler(object sender, DeleteStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSanitationsCompletedEventHandler(object sender, EditSanitationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSanitationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSanitationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditUtilityCompletedEventHandler(object sender, EditUtilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditBuildingCompletedEventHandler(object sender, EditBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFireCompletedEventHandler(object sender, EditFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditRoadAccessCompletedEventHandler(object sender, EditRoadAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditRoadAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditRoadAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditRecreatonalCompletedEventHandler(object sender, EditRecreatonalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditRecreatonalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditRecreatonalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditPlantsEquipmentsCompletedEventHandler(object sender, EditPlantsEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPlantsEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPlantsEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditWasteManagementCompletedEventHandler(object sender, EditWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditLibraryCompletedEventHandler(object sender, EditLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAdminSpaceCompletedEventHandler(object sender, AddAdminSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdminSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdminSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionSignupCompletedEventHandler(object sender, InstitutionSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyForAccreditationCompletedEventHandler(object sender, ApplyForAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyForProgramAccreditationCompletedEventHandler(object sender, ApplyForProgramAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForProgramAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForProgramAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicStaffCompletedEventHandler(object sender, AddAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAcademicStaffCompletedEventHandler(object sender, DeleteAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAllAcademicStaffCompletedEventHandler(object sender, DeleteAllAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAllLibraryStaffCompletedEventHandler(object sender, DeleteAllLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAllNonTeachingStaffCompletedEventHandler(object sender, DeleteAllNonTeachingStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllNonTeachingStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllNonTeachingStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAllPartTimeTeachingStaffCompletedEventHandler(object sender, DeleteAllPartTimeTeachingStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllPartTimeTeachingStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllPartTimeTeachingStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAllStudentsEntriesCompletedEventHandler(object sender, DeleteAllStudentsEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllStudentsEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllStudentsEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNonAcademicStaffCompletedEventHandler(object sender, AddNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPartTimeAcademicStaffCompletedEventHandler(object sender, AddPartTimeAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPartTimeAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPartTimeAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteNonAcademicStaffCompletedEventHandler(object sender, DeleteNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletePartTimeAcademicStaffCompletedEventHandler(object sender, DeletePartTimeAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePartTimeAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePartTimeAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteResearchCompletedEventHandler(object sender, DeleteResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGraduationCompletedEventHandler(object sender, DeleteGraduationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGraduationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGraduationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStudentsResearchCompletedEventHandler(object sender, DeleteStudentsResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInitialProgramsCompletedEventHandler(object sender, AddInitialProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInitialProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInitialProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddReferenceMaterialCompletedEventHandler(object sender, AddReferenceMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReferenceMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReferenceMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDisciplineCaseCompletedEventHandler(object sender, AddDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSuccessfulAppealsCompletedEventHandler(object sender, AddSuccessfulAppealsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSuccessfulAppealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSuccessfulAppealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDisciplineCaseCompletedEventHandler(object sender, EditDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddExpectedActualAmountsCompletedEventHandler(object sender, AddExpectedActualAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExpectedActualAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExpectedActualAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteExpectedActualAmountsCompletedEventHandler(object sender, DeleteExpectedActualAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteExpectedActualAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteExpectedActualAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCreditorsAmountsCompletedEventHandler(object sender, AddCreditorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCreditorsAmountsCompletedEventHandler(object sender, DeleteCreditorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCreditorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCreditorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDebtorsAmountsCompletedEventHandler(object sender, AddDebtorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDebtorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDebtorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDebtorsAmountsCompletedEventHandler(object sender, DeleteDebtorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDebtorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDebtorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDisciplineCaseCompletedEventHandler(object sender, DeleteDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAppealsCompletedEventHandler(object sender, DeleteAppealsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAppealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAppealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteChancellorsCompletedEventHandler(object sender, DeleteChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSponsorsCompletedEventHandler(object sender, DeleteSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDepartmentsCompletedEventHandler(object sender, DeleteDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSchoolsCompletedEventHandler(object sender, DeleteSchoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAffiliationsCompletedEventHandler(object sender, DeleteAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFinancialSubmissionCompletedEventHandler(object sender, AddFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFinancialSubmissionCompletedEventHandler(object sender, DeleteFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddResearchCompletedEventHandler(object sender, AddResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUniversityChancellorsCompletedEventHandler(object sender, AddUniversityChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUniversityChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUniversityChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUniversityViceChancellorsCompletedEventHandler(object sender, AddUniversityViceChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUniversityViceChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUniversityViceChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStudentsResearchCompletedEventHandler(object sender, AddStudentsResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditResearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterPeerReviewerCompletedEventHandler(object sender, RegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePeerReviewerCompletedEventHandler(object sender, UpdatePeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePeerReviewerPasswordCompletedEventHandler(object sender, UpdatePeerReviewerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerAcademicQualificationsCompletedEventHandler(object sender, AddPeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerEmploymentRecordCompletedEventHandler(object sender, AddPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditPeerEmploymentRecordCompletedEventHandler(object sender, EditPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletePeerEmploymentRecordCompletedEventHandler(object sender, DeletePeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInstitutionNumberCompletedEventHandler(object sender, GetInstitutionNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstitutionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstitutionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInvitationNumberCompletedEventHandler(object sender, GetInvitationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvitationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvitationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAmendmentsNumberCompletedEventHandler(object sender, GetAmendmentsNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmendmentsNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmendmentsNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInvitationDataSetIDCompletedEventHandler(object sender, GetInvitationDataSetIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvitationDataSetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvitationDataSetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOperationBudgetCompletedEventHandler(object sender, AddOperationBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOperationBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOperationBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteOperationBudgetCompletedEventHandler(object sender, DeleteOperationBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOperationBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOperationBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryBudgetDetailsCompletedEventHandler(object sender, AddLibraryBudgetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryBudgetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryBudgetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLibraryBudgetDetailsCompletedEventHandler(object sender, DeleteLibraryBudgetDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryBudgetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryBudgetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddResearchBudgetRecordCompletedEventHandler(object sender, AddResearchBudgetRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResearchBudgetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResearchBudgetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteResearchBudgetRecordCompletedEventHandler(object sender, DeleteResearchBudgetRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResearchBudgetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResearchBudgetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler(object sender, AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler(object sender, DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLandCompletedEventHandler(object sender, AddLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFireCompletedEventHandler(object sender, AddFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEelevatedWaterCompletedEventHandler(object sender, AddEelevatedWaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEelevatedWaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEelevatedWaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditEelevatedWaterCompletedEventHandler(object sender, EditEelevatedWaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditEelevatedWaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditEelevatedWaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEelevatedWaterCompletedEventHandler(object sender, DeleteEelevatedWaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEelevatedWaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEelevatedWaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUtilityServiceCompletedEventHandler(object sender, AddUtilityServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUtilityServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUtilityServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPlantsEquipmentCompletedEventHandler(object sender, AddPlantsEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPlantsEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPlantsEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRecreationCompletedEventHandler(object sender, AddRecreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSanitationCompletedEventHandler(object sender, AddSanitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSanitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSanitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAccessRoadsCompletedEventHandler(object sender, AddAccessRoadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccessRoadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccessRoadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLibraryCompletedEventHandler(object sender, AddLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLandCompletedEventHandler(object sender, DeleteLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSanitationCompletedEventHandler(object sender, DeleteSanitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSanitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSanitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUtilityServiceCompletedEventHandler(object sender, DeleteUtilityServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUtilityServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUtilityServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLibraryCompletedEventHandler(object sender, DeleteLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClassificationCompletedEventHandler(object sender, DeleteClassificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClassificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClassificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLibraryServicesCompletedEventHandler(object sender, DeleteLibraryServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLibraryFunctionalAreasCompletedEventHandler(object sender, DeleteLibraryFunctionalAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryFunctionalAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryFunctionalAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAccessRoadsCompletedEventHandler(object sender, DeleteAccessRoadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccessRoadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccessRoadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteWasteManagementCompletedEventHandler(object sender, DeleteWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletePlantsEquipmentsCompletedEventHandler(object sender, DeletePlantsEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePlantsEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePlantsEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRecreationCompletedEventHandler(object sender, DeleteRecreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFireCompletedEventHandler(object sender, DeleteFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletekeymilestoneCompletedEventHandler(object sender, DeletekeymilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletekeymilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletekeymilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBuildingCompletedEventHandler(object sender, DeleteBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteReferenceCompletedEventHandler(object sender, DeleteReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditLandCompletedEventHandler(object sender, EditLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditChancellorsCompletedEventHandler(object sender, EditChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditAffiliationsCompletedEventHandler(object sender, EditAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSponsorCompletedEventHandler(object sender, EditSponsorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSponsorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSponsorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditKeyMilestonesCompletedEventHandler(object sender, EditKeyMilestonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditKeyMilestonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditKeyMilestonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSchoolCompletedEventHandler(object sender, EditSchoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSchoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSchoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591